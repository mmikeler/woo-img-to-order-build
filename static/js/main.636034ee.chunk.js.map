{"version":3,"sources":["components/topbar.js","components/image.jsx","components/list.js","components/file_options_form.js","components/setup-image-popup.js","components/reducer.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Topbar","className","href","Image","state","src","image","width","height","crop","unit","aspect","x","y","save","bind","onImageLoaded","imageRef","imageTo64","setState","createCROP","onCropComplete","makeClientCrop","onCropChange","percentCrop","f","this","props","file","options","cropped","length","window","URL","createObjectURL","undefined","a","getCroppedImg","croppedImageUrl","o","preCrop","d","type","payload","index","s","files","getImage","push","canvas","document","createElement","pixelRatio","devicePixelRatio","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","Promise","resolve","reject","fileUrl","toDataURL","fileName","fileIndex","upd","rotate","ruleOfThirds","onComplete","onChange","PureComponent","Item","useContext","AppContext","dispatch","n","getAspect","format","split","onClick","changeMod","changed","name","paper","cadr","count","ItemOptions","remove","ItemOptionListBtn","actionFunction","iconClass","itemClass","ImageList","list","map","i","id","change-mod","GroupOptions","form","useRef","mod","ref","ChangedFilesList","forhtml","required","disabled","value","role","defaultValue","e","target","closest","data","FormData","formData","massSetOptions","style","backgroundImage","SetupImagePopup","setSetupImageMod","tabIndex","aria-labelledby","aria-hidden","closeModal","data-dismiss","aria-label","alt","reducer","action","donor","curFiles","newFiles","img","ID","body","concat","splice","Error","size","React","createContext","Main","useReducer","setupImageMod","lastModifiedTime","Date","getTime","Provider","Group","option","newFileData","MassSetOptionsBtn","modOn","setChangingMod","multiple","btnText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAEO,SAASA,IACd,OACE,qBAAKC,UAAU,iDAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,wB,+GCsMOC,E,4MAtMbC,MAAQ,CACNC,IAAK,GACLC,MAAO,CACLC,MAAO,EACPC,OAAQ,GAEVC,KAAM,CACJC,KAAM,IACNH,MAAO,MACPI,OAAQ,GAAK,GACbC,EAAG,EACHC,EAAG,I,EAGPC,KAAO,EAAKA,KAAKC,KAAV,gB,EA6CPC,cAAgB,SAACV,GACf,EAAKW,SAAWX,EAChB,EAAKY,UAAUZ,GACf,EAAKa,SAAS,CACZb,MAAO,CAAEC,MAAOD,EAAMC,MAAOC,OAAQF,EAAME,UAE7C,EAAKY,c,EAGPC,eAAiB,SAACZ,GAChB,EAAKa,eAAeb,I,EAGtBc,aAAe,SAACd,EAAMe,GAGpB,EAAKL,SAAS,CAAEV,U,uDA3DlB,WACE,IAAMgB,EAAIC,KAAKC,MAAMC,KACfvB,EAAMoB,EAAEI,QAAQC,QAAQC,OAAS,EAAIN,EAAEI,QAAQC,QAAQL,EAAEI,QAAQC,QAAQC,OAAS,GAAKC,OAAOC,IAAIC,gBAAgBR,KAAKC,MAAMC,KAAKA,MACxIF,KAAKP,SAAS,CAAEd,U,gCAGlB,WACEqB,KAAKN,e,kCAGP,WACE,IAAMK,EAAIC,KAAKC,MAAMC,KACfvB,EAAMoB,EAAEI,QAAQC,QAAUL,EAAEI,QAAQC,QAAUE,OAAOC,IAAIC,gBAAgBR,KAAKC,MAAMC,KAAKA,MAC/FF,KAAKP,SAAS,CAAEd,IAAKA,M,wBAGvB,WAAc,IAAD,EACmB,CAC5BqB,KAAKC,MAAMC,KAAKC,QAAQlB,OACxBe,KAAKtB,MAAME,MAAMC,MACjBmB,KAAKtB,MAAME,MAAME,QAHdG,EADM,KACEJ,EADF,KACSC,EADT,KAMPC,EAAOiB,KAAKtB,MAAMK,UACP0B,IAAXxB,GAAwBA,IAAWF,EAAKE,SACtCA,EAAS,EACXH,EAASD,EAAQI,EAGjBJ,EAAQC,EAASG,EAGnBF,EAAO,CACLC,KAAM,KACNC,OAAQA,EACRJ,MAAOA,EACPC,OAAQA,EACRI,EAAG,EACHC,EAAG,GAELa,KAAKP,SAAS,CAAEV,Y,mEAuBpB,WAAqBA,GAArB,iBAAA2B,EAAA,2DACMV,KAAKT,UAAYR,EAAKF,OAASE,EAAKD,QAD1C,gCAEkCkB,KAAKW,cACjCX,KAAKT,SACLR,EACA,gBALN,OAEU6B,EAFV,OAOIZ,KAAKP,SAAS,CAAEmB,qBACVC,EAAIb,KAAKC,MAAMC,KAAKC,SACxBW,QAAUF,EACZZ,KAAKC,MAAMc,EAAE,CACXC,KAAM,gBAAiBC,QAAS,CAC9BC,MAAOlB,KAAKC,MAAMiB,MAClBf,QAASU,KAbjB,gD,qHAmBA,WAAgBjC,GAAhB,iBAAA8B,EAAA,0DACM9B,EADN,uBAEQiC,EAAIb,KAAKC,MAAMkB,EAAEC,MAAMpB,KAAKC,MAAMiB,OAAOf,QAFjD,SAGwBH,KAAKqB,SAASzC,GAHtC,OAGQwB,EAHR,OAIIS,EAAET,QAAQkB,KAAKlB,GACfJ,KAAKC,MAAMc,EAAE,CACXC,KAAM,gBAAiBC,QAAS,CAC9BC,MAAOlB,KAAKC,MAAMiB,MAClBf,QAASU,KAGbb,KAAKP,SAAS,CAAEd,IAAKyB,IAXzB,gD,6EAeA,SAASxB,GAAQ,IAAD,OACR2C,EAASC,SAASC,cAAc,UAChCC,EAAapB,OAAOqB,iBACpBC,EAAShD,EAAMiD,aACfC,EAASlD,EAAMmD,cACfC,EAAMT,EAAOU,WAAW,MAgB9B,OAdAV,EAAO1C,MAAQ6C,EAAaE,EAC5BL,EAAOzC,OAAS4C,EAAaI,EAE7BE,EAAIE,aAAaR,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDM,EAAIG,sBAAwB,OAE5BH,EAAII,UACFxD,EACA,EACA,EACAgD,EACAE,GAGK,IAAIO,SAAQ,SAACC,EAASC,GAC3B,EAAKC,QAAUjB,EAAOkB,YACtBH,EAAQ,EAAKE,c,2BAIjB,SAAc5D,EAAOG,EAAM2D,GAAW,IAAD,OAC7BnB,EAASC,SAASC,cAAc,UAChCC,EAAapB,OAAOqB,iBACpBC,EAAShD,EAAMiD,aAAejD,EAAMC,MACpCiD,EAASlD,EAAMmD,cAAgBnD,EAAME,OACrCkD,EAAMT,EAAOU,WAAW,MAoB9B,OAlBAV,EAAO1C,MAAQE,EAAKF,MAAQ6C,EAAaE,EACzCL,EAAOzC,OAASC,EAAKD,OAAS4C,EAAaI,EAE3CE,EAAIE,aAAaR,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDM,EAAIG,sBAAwB,OAE5BH,EAAII,UACFxD,EACAG,EAAKG,EAAI0C,EACT7C,EAAKI,EAAI2C,EACT/C,EAAKF,MAAQ+C,EACb7C,EAAKD,OAASgD,EACd,EACA,EACA/C,EAAKF,MAAQ+C,EACb7C,EAAKD,OAASgD,GAGT,IAAIO,SAAQ,SAACC,EAASC,GAC3B,EAAKC,QAAUjB,EAAOkB,YACtBH,EAAQ,EAAKE,c,kBAIjB,WAAQ,IACE5B,EAAoBZ,KAAKtB,MAAzBkC,gBACA+B,EAAc3C,KAAKC,MAAnB0C,UACR3C,KAAKC,MAAM2C,IAAI,UAAWhC,EAAiB+B,GAC3C3C,KAAKP,SAAS,CAAEd,IAAKiC,M,oBAGvB,WAAU,IAAD,EAC2BZ,KAAKtB,MAA/BK,EADD,EACCA,KADD,KACO6B,gBACcZ,KAAKC,OAAdC,GAFZ,EAECyC,UAFD,EAEYzC,MACbvB,EAAMuB,EAAKC,QAAQC,QAAQC,OAAS,EAAIH,EAAKC,QAAQC,QAAQF,EAAKC,QAAQC,QAAQC,OAAS,GAAKL,KAAKtB,MAAMC,IACjH,OACE,mCACE,cAAC,IAAD,CAEEA,IAAKA,EACLI,KAAMA,EACN8D,OAAQ,EACRC,cAAY,EACZxD,cAAeU,KAAKV,cACpByD,WAAY/C,KAAKL,eACjBqD,SAAUhD,KAAKH,cAPVG,KAAKC,MAAMhB,c,GA1LNgE,iBCyBpB,SAASC,EAAKjD,GAAQ,IAAD,EAESkD,qBAAWC,GAA/B1E,EAFW,EAEXA,MAAO2E,EAFI,EAEJA,SAEXC,EAAI5E,EAAM0C,MAAMnB,EAAMiB,OACtBL,EAAIyC,EAAEnD,QAsBJoD,EAAY,SAACC,EAAQvE,GACzB,IAAMyB,EAAI8C,EAAOC,MAAM,KACvB,OAAI/C,EAAE,GAAKA,EAAE,KAAOzB,EACXyB,EAAE,GAAKA,EAAE,GAGTA,EAAE,GAAKA,EAAE,IAcpB,YAAUD,IAANI,EAAwB,KAG1B,sBAAK6C,QAbU,WACXzD,EAAM0D,WACR1D,EAAM2C,IAAI,WAAY/B,EAAE+C,QAAS3D,EAAMiB,QAWjB3C,UAAU,cAAcqF,QAAS/C,EAAE+C,QAAU,UAAY,GAAjF,UACE,cAAC,EAAD,CACEzC,EAAGzC,EACHqC,EAAGsC,EACHnD,KAAMoD,EACNrE,OAAQ4B,EAAE5B,OACViC,MAAOjB,EAAMiB,QACf,sBAAK3C,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA0B,cAAC,IAAD,CAAUsF,KAAK,sBAAzC,OAAsEhD,EAAE2C,OAAS3C,EAAE2C,OAAS,wBAC5F,sBAAKjF,UAAU,UAAf,UAAyB,cAAC,IAAD,CAAUsF,KAAK,kBAAxC,OAAiEhD,EAAEiD,MAAQjD,EAAEiD,MAAQ,wBACrF,sBAAKvF,UAAU,SAAf,UAAwB,cAAC,IAAD,CAAUsF,KAAK,iBAAvC,OAA+DhD,EAAEkD,KAAOlD,EAAEkD,KAAO,wBACjF,sBAAKxF,UAAU,UAAf,UAAyB,cAAC,IAAD,CAAUsF,KAAK,4BAAxC,OAA2EhD,EAAEmD,MAAQnD,EAAEmD,MAAQ,wBAC/F,qBAAKzF,UAAU,cACf,cAAC0F,EAAD,CACE/C,MAAOjB,EAAMiB,MACbnC,KAtBK,aAuBLmF,OAAQjE,EAAMiE,OACdrB,OAlDa,WACnBhC,EAAE5B,OAASsE,EAAU1C,EAAE2C,OAAQ3C,EAAE5B,QACjCoE,EAAS,CACPrC,KAAM,gBAAiBC,QAAS,CAC9BC,MAAOjB,EAAMiB,MACbf,QAASU,cAoDjB,SAASoD,EAAYhE,GAAQ,IAAD,EAEEkD,qBAAWC,GAAxBC,GAFW,EAElB3E,MAFkB,EAEX2E,UAEf,OACE,sBAAK9E,UAAU,mBAAf,UACE,cAAC4F,EAAD,CACEC,eAAgB,kBAAMf,EAAS,CAC7BrC,KAAM,OACNC,QAAShB,EAAMiB,SAEjBmD,UAAU,eACVC,UAAU,OACVpD,MAAOjB,EAAMiB,QAEf,cAACiD,EAAD,CACEC,eAAgBnE,EAAM4C,OACtBwB,UAAU,wBACVC,UAAU,SACVpD,MAAOjB,EAAMiB,QAEf,cAACiD,EAAD,CACEC,eAAgB,kBAAMf,EAAS,CAC7BrC,KAAM,SACNC,QAAShB,EAAMiB,SAEjBmD,UAAU,gBACVC,UAAU,QACVpD,MAAOjB,EAAMiB,WAMd,SAASiD,EAAkBlE,GAAQ,IAAD,iBACeA,GAA9CmE,EAD+B,EAC/BA,eAAgBC,EADe,EACfA,UAAWC,EADI,EACJA,UACnC,OACE,qBAAKZ,QAASU,EAAgB7F,UAAS,sBAAiB+F,GAAxD,SAAqE,cAAC,IAAD,CAAUT,KAAMQ,MAI1EE,MA3IR,WAAsB,IAAD,EAEEpB,qBAAWC,GAA/B1E,EAFkB,EAElBA,MAmBR,OArB0B,EAEX2E,SAEF,WACX,IAAImB,EAAO9F,EAAM0C,MAAMqD,KAAI,SAACnB,EAAGoB,GAC7B,GAAIpB,EACF,OAAO,cAACJ,EAAD,CAAiBhC,MAAOwD,GAAbpB,EAAEqB,OAMxB,OAJIH,EAAKnE,QAAU,IACjBmE,EAAO,+CAIP,qBAAKjG,UAAU,YAAYqG,aAAYlG,EAAMiF,UAAY,EAAI,EAA7D,SACGa,IAMAA,I,QCxBF,SAASK,EAAa5E,GAC3B,IAAM6E,EAAOC,mBAYb,OAAK9E,EAAM+E,IAGT,qBAAKzG,UAAU,4BAAf,SACE,qBAAKA,UAAU,0CAAf,SACE,uBAAM0G,IAAKH,EAAX,UACE,qBAAKvG,UAAU,cAAf,oEACA,sBAAKA,UAAU,YAAf,UAEE,cAAC2G,EAAD,CAAkB9D,MAAOnB,EAAMmB,QAE/B,sBAAK7C,UAAU,aAAf,UACE,uBAAO4G,QAAQ,iBAAiB5G,UAAU,kBAA1C,2EACA,yBAAQA,UAAU,cAAcsF,KAAK,SAASc,GAAG,iBAAiBS,UAAQ,EAA1E,UACE,wBAAQC,UAAQ,EAAhB,wDACA,wBAAQC,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,yBAIJ,sBAAK/G,UAAU,aAAf,UACE,uBAAO4G,QAAQ,iBAAiB5G,UAAU,kBAA1C,qEACA,yBAAQA,UAAU,cAAcsF,KAAK,QAAQc,GAAG,iBAAiBS,UAAQ,EAAzE,UACE,wBAAQC,UAAQ,EAAhB,wDACA,wBAAQC,MAAM,6CAAd,wDACA,wBAAQA,MAAM,uCAAd,wDAIJ,qBAAK/G,UAAU,kBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,uBAAOA,UAAU,mBAAmBsF,KAAK,OAAO7C,KAAK,WAAWuE,KAAK,SAASZ,GAAG,2BACjF,uBAAOpG,UAAU,mBAAmB4G,QAAQ,yBAA5C,2FAIJ,sBAAK5G,UAAU,OAAf,UACE,uBAAO4G,QAAQ,2BAA2B5G,UAAU,aAApD,0EACA,uBAAOyC,KAAK,SAAS6C,KAAK,QAAQtF,UAAU,eAAeoG,GAAG,2BAA2Ba,aAAa,YAI1G,qBAAKjH,UAAU,yCAAf,SACE,qBAAKmF,QAtDA,SAAC+B,GACd,IADoB,EACdX,EAAOW,EAAEC,OAAOC,QAAQ,QACxBC,EAAO,IAAIC,SAASf,GACtBgB,EAAW,GAHK,cAIMF,GAJN,IAIpB,2BAAgC,CAAC,IAAD,yBAAtB/B,EAAsB,KAAhByB,EAAgB,KAC9BQ,EAASxE,KAAK,CAAEuC,KAAMA,EAAMyB,MAAOA,KALjB,8BAOpBrF,EAAM8F,eAAeD,IA+CSvH,UAAU,kBAAhC,oIA5Ca,KAoDzB,SAAS2G,EAAiBjF,GACxB,IAAIuE,EAAO,KACX,OAAIvE,EAAMmB,QACRoD,EAAOvE,EAAMmB,MAAMqD,KAAI,SAACnB,GACtB,aAAkB7C,IAAd6C,EAAEnD,UAAyBmD,EAAEnD,QAAQyD,UAErC,qBAAgBrF,UAAU,0BACxByH,MAAO,CAAEC,gBAAgB,OAAD,OAAS3F,OAAOC,IAAIC,gBAAgB8C,EAAEpD,MAAtC,OADhBoD,EAAEqB,QAOTtE,OAAS,EACT,qBAAK9B,UAAU,oBAAf,SAAoCiG,IAKtC,K,UChFE0B,EAAb,kDACE,WAAYjG,GAAQ,IAAD,8BACjB,cAAMA,IAwBRX,cAAgB,SAACV,GACf,EAAKW,SAAWX,GA1BC,EA6BnBe,eAAiB,SAACZ,GAChB,EAAKa,eAAeb,IA9BH,EAiCnBc,aAAe,SAACd,EAAMe,GAGpB,EAAKL,SAAS,CAAEV,UAlChB,EAAKL,MAAQ,CACXC,IAAK,GACLI,KAAM,CACJC,KAAM,IACNH,MAAO,MACPI,OAAQ,EAAI,IAGhB,EAAKG,KAAO,EAAKA,KAAKC,KAAV,gBAVK,EADrB,qDAcE,WACE,IAAMU,EAAIC,KAAKC,MAAMC,KACfvB,EAAMoB,EAAEI,QAAQC,QAAUL,EAAEI,QAAQC,QAAUE,OAAOC,IAAIC,gBAAgBR,KAAKC,MAAMC,KAAKA,MAC/FF,KAAKP,SAAS,CAAEd,IAAKA,MAjBzB,kCAoBE,WACE,IAAMoB,EAAIC,KAAKC,MAAMC,KACfvB,EAAMoB,EAAEI,QAAQC,QAAUL,EAAEI,QAAQC,QAAUE,OAAOC,IAAIC,gBAAgBR,KAAKC,MAAMC,KAAKA,MAC/FF,KAAKP,SAAS,CAAEd,IAAKA,MAvBzB,mEAwCE,WAAqBI,GAArB,eAAA2B,EAAA,2DACMV,KAAKT,UAAYR,EAAKF,OAASE,EAAKD,QAD1C,gCAEkCkB,KAAKW,cACjCX,KAAKT,SACLR,EACA,gBALN,OAEU6B,EAFV,OAOIZ,KAAKP,SAAS,CAAEmB,oBAPpB,gDAxCF,kFAmDE,SAAchC,EAAOG,EAAM2D,GAAW,IAAD,OAC7BnB,EAASC,SAASC,cAAc,UAChCC,EAAapB,OAAOqB,iBACpBC,EAAShD,EAAMiD,aAAejD,EAAMC,MACpCiD,EAASlD,EAAMmD,cAAgBnD,EAAME,OACrCkD,EAAMT,EAAOU,WAAW,MAoB9B,OAlBAV,EAAO1C,MAAQE,EAAKF,MAAQ6C,EAAaE,EACzCL,EAAOzC,OAASC,EAAKD,OAAS4C,EAAaI,EAE3CE,EAAIE,aAAaR,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDM,EAAIG,sBAAwB,OAE5BH,EAAII,UACFxD,EACAG,EAAKG,EAAI0C,EACT7C,EAAKI,EAAI2C,EACT/C,EAAKF,MAAQ+C,EACb7C,EAAKD,OAASgD,EACd,EACA,EACA/C,EAAKF,MAAQ+C,EACb7C,EAAKD,OAASgD,GAGT,IAAIO,SAAQ,SAACC,EAASC,GAC3B,EAAKC,QAAUjB,EAAOkB,YACtBH,EAAQ,EAAKE,cA9EnB,mBAkFE,WACExC,KAAKC,MAAMkG,iBAAiB,QAnFhC,kBAsFE,WAAQ,IACEvF,EAAoBZ,KAAKtB,MAAzBkC,gBACA+B,EAAc3C,KAAKC,MAAnB0C,UACR3C,KAAKC,MAAM2C,IAAI,UAAWhC,EAAiB+B,GAC3C3C,KAAKP,SAAS,CAAEd,IAAKiC,MA1FzB,oBA6FE,WAAU,IAAD,SACgCZ,KAAKtB,MAApCK,EADD,EACCA,KAAMJ,EADP,EACOA,IAAKiC,EADZ,EACYA,gBADZ,EAEqBZ,KAAKC,MAAzB0C,EAFD,EAECA,UAAWzC,EAFZ,EAEYA,KACnB,OACE,qBAAK3B,UAAU,kBAAkBoG,GAAG,iBAAiByB,SAAS,KAAKb,KAAK,SAASc,kBAAgB,oBAAoBC,cAAY,QAAjI,SACE,qBAAK/H,UAAU,eAAegH,KAAK,WAAnC,SACE,sBAAKhH,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcoG,GAAG,uBAA/B,+GACA,wBAAQjB,QAAS1D,KAAKC,MAAMsG,WAAYvF,KAAK,SAASzC,UAAU,QAAQiI,eAAa,QAAQC,aAAW,QAAxG,SACE,sBAAMH,cAAY,OAAlB,uBAGJ,qBAAK/H,UAAU,aAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,qBAAKA,UAAU,qBAAf,SACGI,GACC,qCAEE,sBAAKJ,UAAU,mBAAf,UACE,cAAC4F,EAAD,CACEC,eAAgB,kBAAM,EAAKnE,MAAM2C,IAAI,UAAW1C,EAAKC,QAAQ0C,OAAQF,IACrE0B,UAAU,oBACVC,UAAU,SACVpD,MAAOlB,KAAKC,MAAM0C,YAEpB,cAACwB,EAAD,CACEC,eAAgB,kBAAM,EAAKnE,MAAM2C,IAAI,UAAW1C,EAAKC,QAAQ0C,OAAQF,IACrE0B,UAAU,wBACVC,UAAU,SACVpD,MAAOlB,KAAKC,MAAM0C,eAGtB,cAAC,IAAD,CACEhE,IAAKA,EACLI,KAAMA,EACN+D,cAAY,EACZxD,cAAeU,KAAKV,cACpByD,WAAY/C,KAAKL,eACjBqD,SAAUhD,KAAKH,sBAOzB,qBAAKtB,UAAU,kCAAf,SACGI,GACC,sBAAKJ,UAAU,uBAAf,UACE,+KACA,qBAAKI,IAAKiC,EAAiB8F,IAAI,iBAQ3C,sBAAKnI,UAAU,eAAf,UACE,wBAAQmF,QAAS1D,KAAKC,MAAMsG,WAAYvF,KAAK,SAASzC,UAAU,oBAAoBiI,eAAa,QAAjG,wDACA,wBAAQ9C,QAAS1D,KAAKZ,KAAM4B,KAAK,SAASzC,UAAU,kBAApD,4EA3Jd,GAAqC0E,iBCN9B,SAAS0D,EAAQjI,EAAOkI,GAC5B,IA4Ce1G,EA5CT2G,EAAQnI,EAAM0C,MACpB,OAAQwF,EAAO5F,MAEZ,IAAK,MAGF,IAFA,IAAM8F,EAAWF,EAAO3F,QACpB8F,EAAW,GACNrC,EAAI,EAAGA,EAAIoC,EAASzG,OAAQqE,IAAK,CACvC,IAAIsC,EAsCN,CACJrC,GAAIsC,EAFQ/G,EArCa4G,EAASpC,IAwClCxE,KAAMA,EACNgH,KAAM,GACN/G,QAAS,CACN6D,MAAO,EACPR,OAAQ,QACRM,MAAO,6CACPC,KAAM,EACNlB,QAAQ,EACRe,SAAS,EACTxD,QAAS,GACTnB,OAAQ,GAAK,KAjDV8H,EAASzF,KAAK0F,GAEjB,MAAO,CACJ5F,MAAO1C,EAAM0C,MAAM+F,OAAOJ,IAG7B,IAAK,SAEF,OADAF,EAAMO,OAAOR,EAAO3F,QAAS,EAAG,MACzB,CACJG,MAAOyF,GAGb,IAAK,gBAEF,OADAA,EAAMD,EAAO3F,QAAQC,OAAOf,QAAUyG,EAAO3F,QAAQd,QAC9C,CACJiB,MAAOyF,GAGV,IAAK,SACF,IAAMhE,EAASgE,EAAMD,EAAO3F,SAASd,QAAQ0C,OAE7C,OADAgE,EAAMD,EAAO3F,SAASd,QAAQ0C,QAAUA,EACjC,CACJzB,MAAOyF,GAGV,IAAK,OAEF,OADAA,EAAMD,EAAO3F,SAASd,QAAQC,QAAQkB,KAAKuF,EAAMD,EAAO3F,SAASd,QAAQW,SAClE,CACJM,MAAOyF,GAGV,QACG,MAAM,IAAIQ,OAsB/B,SAASJ,EAAG/G,GACT,OAAOA,EAAKoH,KAAO,IAAMpH,EAAK2D,KC1D1B,IAAIT,EAAamE,IAAMC,cAAc,MAErC,SAASC,IAAQ,IAAD,EAEKC,qBAAWf,EAAS,CAC5CvF,MAAO,GACPuC,WAAW,EACXgE,cAAe,KACfC,kBAAkB,IAAIC,MAAOC,YANV,mBAEdpJ,EAFc,KAEP2E,EAFO,KAwDrB,OACE,eAACD,EAAW2E,SAAZ,CAAqBzC,MAAO,CAAE5G,QAAO2E,YAArC,UACE,cAAC2E,EAAD,IAE0B,kBAAlBL,eACN,cAAC,EAAD,CACEhF,UAAWjE,EAAMiJ,cACjBzH,KAAMxB,EAAM0C,MAAM1C,EAAMiJ,eACxBpB,WAZW,aAaX3D,IAzCW,SAACqF,EAAQC,EAAahH,UAgD3C,SAAS8G,EAAM/H,GAAQ,IAAD,EAEQkD,qBAAWC,GAA/B1E,EAFY,EAEZA,MAAO2E,EAFK,EAELA,SAMf,OACE,sBAAK9E,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,sBAAKA,UAAU,gEAAf,oGACoBG,EAAM0C,MAAMf,OAC9B,cAAC8H,EAAD,CAAmBC,MAAO1J,EAAMiF,UAAW0E,eAAgB3J,EAAM2J,oBAEnE,qBAAK9J,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,kCACE,6GACA,uBAAOyE,SAhBJ,SAACyC,GAChBpC,EAAS,CAAErC,KAAM,MAAOC,QAASwE,EAAEC,OAAOtE,SAeH7C,UAAU,eAAeyC,KAAK,OAAOsH,UAAQ,OAE1E,cAAC,EAAD,SAGJ,qBAAK/J,UAAU,yCAAf,SACE,qBAAKA,UAAU,2BAAf,wKAIN,qBAAKA,UAAU,kBAAf,SACE,cAACsG,EAAD,aAAcG,KAAK,EAAMe,eAAgBrH,EAAMqH,gBAAoB9F,SAM3E,SAASkI,EAAkBlI,GACzB,IAAIsI,EAAU,0GAId,OAHItI,EAAMmI,QACRG,EAAU,yFAGV,qBAAK7E,QAASzD,EAAMoI,eAAgB9J,UAAU,0BAA9C,SAAyEgK,ICvG9DC,MATf,WACE,OACE,sBAAKjK,UAAU,YAAf,UACE,cAACD,EAAD,IACA,cAACmJ,EAAD,QCHSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5H,SAAS6H,eAAe,SAM1BZ,M","file":"static/js/main.636034ee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Topbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React, { PureComponent } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport { AppContext } from \"./main\";\r\n\r\nclass Image extends PureComponent {\r\n\r\n  state = {\r\n    src: '',\r\n    image: {\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    crop: {\r\n      unit: '%',\r\n      width: '100',\r\n      aspect: 10 / 15,\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n  save = this.save.bind(this);\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped.length > 0 ? f.options.cropped[f.options.cropped.length - 1] : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.createCROP();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  createCROP() {\r\n    let [aspect, width, height] = [\r\n      this.props.file.options.aspect,\r\n      this.state.image.width,\r\n      this.state.image.height,\r\n    ];\r\n    let crop = this.state.crop;\r\n    if (aspect !== undefined && aspect !== crop.aspect) {\r\n      if (aspect > 1) {\r\n        height = width / aspect;\r\n      }\r\n      else {\r\n        width = height * aspect;\r\n      }\r\n\r\n      crop = {\r\n        unit: 'px',\r\n        aspect: aspect,\r\n        width: width,\r\n        height: height,\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      this.setState({ crop });\r\n    }\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n    this.imageTo64(image);\r\n    this.setState({\r\n      image: { width: image.width, height: image.height }\r\n    })\r\n    this.createCROP();\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop }); // в процентах\r\n    this.setState({ crop }); // в пикселях\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n      const o = this.props.file.options;\r\n      o.preCrop = croppedImageUrl;\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async imageTo64(image) {\r\n    if (image) {\r\n      let o = this.props.s.files[this.props.index].options;\r\n      let cropped = await this.getImage(image);\r\n      o.cropped.push(cropped);\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n      this.setState({ src: cropped })\r\n    }\r\n  }\r\n\r\n  getImage(image) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth;\r\n    const scaleY = image.naturalHeight;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = pixelRatio * scaleX;\r\n    canvas.height = pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      0,\r\n      0,\r\n      scaleX,\r\n      scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toDataURL();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toDataURL();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    const src = file.options.cropped.length > 0 ? file.options.cropped[file.options.cropped.length - 1] : this.state.src;\r\n    return (\r\n      <>\r\n        <ReactCrop\r\n          key={this.props.aspect}\r\n          src={src}\r\n          crop={crop}\r\n          rotate={0}\r\n          ruleOfThirds\r\n          onImageLoaded={this.onImageLoaded}\r\n          onComplete={this.onCropComplete}\r\n          onChange={this.onCropChange}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Image;","import React, { useEffect, useState, PureComponent, useContext } from \"react\";\r\nimport LineIcon from \"react-lineicons\";\r\nimport Image from \"../components/image\";\r\nimport { AppContext } from \"./main\";\r\n\r\nexport function ImageList() {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const list = () => {\r\n    let list = state.files.map((n, i) => {\r\n      if (n)\r\n        return <Item key={n.id} index={i} />\r\n    })\r\n    if (list.length <= 0) {\r\n      list = 'нет фото';\r\n    }\r\n\r\n    return (\r\n      <div className=\"list mt-3\" change-mod={state.changeMod ? 1 : 0}>\r\n        {list}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return list();\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let n = state.files[props.index];\r\n  let o = n.options;\r\n\r\n  const rotate = () => {\r\n    o.rotate = !o.rotate;\r\n    dispatch({\r\n      type: \"updateOptions\", payload: {\r\n        index: props.index,\r\n        options: o\r\n      }\r\n    });\r\n  }\r\n\r\n  const rotateAspect = () => {\r\n    o.aspect = getAspect(o.format, o.aspect);\r\n    dispatch({\r\n      type: \"updateOptions\", payload: {\r\n        index: props.index,\r\n        options: o\r\n      }\r\n    });\r\n  }\r\n\r\n  const getAspect = (format, aspect) => {\r\n    const a = format.split('x');\r\n    if (a[1] / a[0] === aspect) {\r\n      return a[0] / a[1];\r\n    }\r\n    else {\r\n      return a[1] / a[0];\r\n    }\r\n  }\r\n\r\n  const changeIT = () => {\r\n    if (props.changeMod) {\r\n      props.upd('changed', !o.changed, props.index);\r\n    }\r\n  }\r\n\r\n  const crop = () => {\r\n\r\n  }\r\n\r\n  if (o === undefined) return null;\r\n\r\n  return (\r\n    <div onClick={changeIT} className=\"file d-flex\" changed={o.changed ? 'changed' : ''}>\r\n      <Image\r\n        s={state}\r\n        d={dispatch}\r\n        file={n}\r\n        aspect={o.aspect}\r\n        index={props.index} />\r\n      <div className=\"file-options\">\r\n        <div className=\"o format\"><LineIcon name=\"lni lni-ruler-alt\" />&nbsp;{o.format ? o.format : 'Нет'}</div>\r\n        <div className=\"o paper\"><LineIcon name=\"lni lni-write\" />&nbsp;{o.paper ? o.paper : 'Нет'}</div>\r\n        <div className=\"o crop\"><LineIcon name=\"lni lni-crop\" />&nbsp;{o.cadr ? o.cadr : 'Нет'}</div>\r\n        <div className=\"o count\"><LineIcon name=\"lni lni-shopping-basket\" />&nbsp;{o.count ? o.count : 'Нет'}</div>\r\n        <div className=\"delimeter\"></div>\r\n        <ItemOptions\r\n          index={props.index}\r\n          crop={crop}\r\n          remove={props.remove}\r\n          rotate={rotateAspect} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ItemOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"item-option-list\">\r\n      <ItemOptionListBtn\r\n        actionFunction={() => dispatch({\r\n          type: \"crop\",\r\n          payload: props.index,\r\n        })}\r\n        iconClass=\"lni lni-crop\"\r\n        itemClass=\"crop\"\r\n        index={props.index}\r\n      />\r\n      <ItemOptionListBtn\r\n        actionFunction={props.rotate}\r\n        iconClass=\"lni lni-spinner-arrow\"\r\n        itemClass=\"rotate\"\r\n        index={props.index}\r\n      />\r\n      <ItemOptionListBtn\r\n        actionFunction={() => dispatch({\r\n          type: \"remove\",\r\n          payload: props.index,\r\n        })}\r\n        iconClass=\"lni lni-close\"\r\n        itemClass=\"close\"\r\n        index={props.index}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ItemOptionListBtn(props) {\r\n  const { actionFunction, iconClass, itemClass } = { ...props }\r\n  return (\r\n    <div onClick={actionFunction} className={`item-option ${itemClass}`}><LineIcon name={iconClass} /></div>\r\n  )\r\n}\r\n\r\nexport default ImageList;","import React, { useRef } from 'react';\r\n\r\nexport function GroupOptions(props) {\r\n  const form = useRef();\r\n\r\n  const submit = (e) => {\r\n    const form = e.target.closest('form');\r\n    const data = new FormData(form);\r\n    let formData = [];\r\n    for (let [name, value] of data) {\r\n      formData.push({ name: name, value: value });\r\n    }\r\n    props.massSetOptions(formData);\r\n  }\r\n\r\n  if (!props.mod) return null;\r\n\r\n  return (\r\n    <div className=\"file-options-form-wrapper\">\r\n      <div className=\"card border-secondary file-options-form\">\r\n        <form ref={form}>\r\n          <div className=\"card-header\">Настройки</div>\r\n          <div className=\"card-body\">\r\n\r\n            <ChangedFilesList files={props.files} />\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect1\" className=\"form-label mt-4\">Формат фото</label>\r\n              <select className=\"form-select\" name=\"format\" id=\"exampleSelect1\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"10x15\">10x15</option>\r\n                <option value=\"15x20\">15x20</option>\r\n                <option value=\"20x30\">20x30</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect2\" className=\"form-label mt-4\">Тип бумаги</label>\r\n              <select className=\"form-select\" name=\"paper\" id=\"exampleSelect2\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"матовая\">Матовая</option>\r\n                <option value=\"глянец\">Глянец</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <input className=\"form-check-input\" name=\"cadr\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Кадрирование</label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <label forhtml=\"exampleFormControlInput3\" className=\"form-label\">Количество</label>\r\n              <input type=\"number\" name=\"count\" className=\"form-control\" id=\"exampleFormControlInput3\" defaultValue=\"1\" />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div onClick={submit} className=\"btn btn-success\">Применить настройки</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChangedFilesList(props) {\r\n  let list = null;\r\n  if (props.files) {\r\n    list = props.files.map((n) => {\r\n      if (n.options !== undefined && n.options.changed) {\r\n        return (\r\n          <div key={n.id} className=\"changed-files-list-item\"\r\n            style={{ backgroundImage: `url(${window.URL.createObjectURL(n.file)})` }}></div>\r\n        )\r\n      }\r\n      return false;\r\n    })\r\n\r\n    if (list.length > 0)\r\n      return <div className=\"changed-file-list\">{list}</div>;\r\n    else\r\n      return null;\r\n  }\r\n  else\r\n    return null;\r\n\r\n}","import React, { useState, PureComponent } from \"react\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { ItemOptionListBtn } from \"./list\";\r\n\r\n\r\nexport class SetupImagePopup extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      src: '',\r\n      crop: {\r\n        unit: '%',\r\n        width: '100',\r\n        aspect: 2 / 3\r\n      }\r\n    }\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toDataURL();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.props.setSetupImageMod(null);\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, src, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    return (\r\n      <div className=\"modal fade show\" id=\"file-direction\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"file-direction-label\">Управление файлом</h5>\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 react-crop-wrapper-row\">\r\n                    <div className=\"react-crop-wrapper\">\r\n                      {src && (\r\n                        <>\r\n                          {/* Скрыто стилями */}\r\n                          <div className=\"item-option-list\">\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-ruler-alt\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-spinner-arrow\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                          </div>\r\n                          <ReactCrop\r\n                            src={src}\r\n                            crop={crop}\r\n                            ruleOfThirds\r\n                            onImageLoaded={this.onImageLoaded}\r\n                            onComplete={this.onCropComplete}\r\n                            onChange={this.onCropChange}\r\n                          />\r\n\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4 react-crop-options-bar\">\r\n                    {src && (\r\n                      <div className=\"file-direction__crop\">\r\n                        <span>Предварительный просмотр</span>\r\n                        <img src={croppedImageUrl} alt=\"\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Закрыть</button>\r\n              <button onClick={this.save} type=\"button\" className=\"btn btn-primary\">Обрезать</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","export function reducer(state, action) {\r\n   const donor = state.files;\r\n   switch (action.type) {\r\n\r\n      case \"add\":\r\n         const curFiles = action.payload;\r\n         let newFiles = [];\r\n         for (let i = 0; i < curFiles.length; i++) {\r\n            let img = newImage(curFiles[i]);\r\n            newFiles.push(img);\r\n         }\r\n         return {\r\n            files: state.files.concat(newFiles)\r\n         }\r\n\r\n         case \"remove\":\r\n            donor.splice(action.payload, 1, null);\r\n            return {\r\n               files: donor\r\n            };\r\n\r\n         case \"updateOptions\":\r\n            donor[action.payload.index].options = action.payload.options;\r\n            return {\r\n               files: donor\r\n            }\r\n\r\n            case \"rotate\":\r\n               const rotate = donor[action.payload].options.rotate;\r\n               donor[action.payload].options.rotate = !rotate;\r\n               return {\r\n                  files: donor\r\n               }\r\n\r\n               case \"crop\":\r\n                  donor[action.payload].options.cropped.push(donor[action.payload].options.preCrop);\r\n                  return {\r\n                     files: donor\r\n                  }\r\n\r\n                  default:\r\n                     throw new Error();\r\n   }\r\n}\r\n\r\nfunction newImage(file) {\r\n   return {\r\n      id: ID(file),\r\n      file: file,\r\n      body: '',\r\n      options: {\r\n         count: 1,\r\n         format: '10x15',\r\n         paper: 'матовая',\r\n         cadr: 0,\r\n         rotate: false,\r\n         changed: true,\r\n         cropped: [],\r\n         aspect: 10 / 15\r\n      }\r\n   };\r\n}\r\n\r\nfunction ID(file) {\r\n   return file.size + '_' + file.name;\r\n}","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport ImageList from \"./list\";\r\nimport { GroupOptions } from \"./file_options_form\";\r\nimport { SetupImagePopup } from \"./setup-image-popup\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport let AppContext = React.createContext(null);\r\n\r\nexport function Main() {\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    files: [],\r\n    changeMod: false,\r\n    setupImageMod: null,\r\n    lastModifiedTime: new Date().getTime(),\r\n  });\r\n\r\n  const addFilesFunc = (curFiles) => {\r\n\r\n    if (curFiles.length > 0) {\r\n      dispatch({ type: \"add\", payload: curFiles });\r\n    }\r\n  }\r\n\r\n  const removeFile = (fileIndex) => {\r\n\r\n  }\r\n\r\n  const useChanging = () => {\r\n\r\n  }\r\n\r\n  const updateFile = (option, newFileData, index) => {\r\n\r\n  }\r\n\r\n  const massSetOptions = (formData) => {\r\n    let donor = state.files;\r\n\r\n    donor.forEach((f) => {\r\n      if (f.options.changed) {\r\n        formData.forEach((el) => {\r\n          f.options[el.name] = el.value;\r\n        })\r\n        // Передавалась ли опция кадрирования\r\n        const isCadr = formData.findIndex((el) => { return (el.name === 'cadr') })\r\n        // Если не передавалась, снимаем опции у выбранных фото\r\n        if (isCadr < 0) {\r\n          f.options.cadr = false;\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  const setupImage = (index) => {\r\n    //setSetupImageMod(index);\r\n  }\r\n\r\n  const closeModal = () => {\r\n    //setSetupImageMod(null);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      <Group />\r\n\r\n      {typeof setupImageMod === 'number' &&\r\n        <SetupImagePopup\r\n          fileIndex={state.setupImageMod}\r\n          file={state.files[state.setupImageMod]}\r\n          closeModal={closeModal}\r\n          upd={updateFile}\r\n        />}\r\n    </AppContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nfunction Group(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const addFiles = (e) => {\r\n    dispatch({ type: \"add\", payload: e.target.files });\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card border-secondary my-3\">\r\n          <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n            Ваши фотографии: {state.files.length}\r\n            <MassSetOptionsBtn modOn={state.changeMod} setChangingMod={state.setChangingMod} />\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"image-list\">\r\n              <label>\r\n                <span>Добавить фото</span>\r\n                <input onChange={addFiles} className=\"form-control\" type=\"file\" multiple />\r\n              </label>\r\n              <ImageList />\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div className=\"btn btn-success disabled\">Перейти к оформлению заказа</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-lg-2\">\r\n        <GroupOptions mod={true} massSetOptions={state.massSetOptions} {...props} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MassSetOptionsBtn(props) {\r\n  let btnText = 'Массовое выделение';\r\n  if (props.modOn) {\r\n    btnText = 'снять выделение';\r\n  }\r\n  return (\r\n    <div onClick={props.setChangingMod} className=\"btn btn-info text-white\">{btnText}</div>\r\n  )\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.scss';\nimport { Topbar } from \"./components/topbar\";\nimport { Main } from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Topbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}