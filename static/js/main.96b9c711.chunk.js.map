{"version":3,"sources":["components/topbar.js","components/image.jsx","components/loader.jsx","components/image-v2.jsx","components/list.js","components/file_options_form.jsx","components/setup-image-popup.js","components/reducer.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Topbar","className","href","PureComponent","Preloader","version","id","xmlns","x","y","viewBox","enableBackground","width","height","fill","attributeType","attributeName","type","values","begin","dur","repeatCount","ImageV2","props","useContext","AppContext","state","dispatch","file","files","index","imgRef","useRef","useState","croppedImageUrl","setCroppedImageUrl","unit","aspect","crop","setCrop","loading","onLoading","onLoad","useCallback","e","img","target","current","options","makeClientCrop","a","getCroppedImg","then","res","o","preCrop","payload","setTimeout","image","fileName","canvas","document","createElement","pixelRatio","window","devicePixelRatio","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","Promise","resolve","reject","toBlob","blob","previewUrl","URL","createObjectURL","revokeObjectURL","useEffect","disabled","onChange","c","onComplete","onDragEnd","renderComponent","is-loaded","src","body","onLoadStart","ref","alt","Item","getAspect","format","split","undefined","onClick","changeMod","changed","name","paper","cadr","count","ItemOptions","remove","rotate","ItemOptionListBtn","actionFunction","iconClass","itemClass","ImageList","list","map","n","i","length","change-mod","GroupOptions","form","mod","ChangedFilesList","forhtml","required","value","role","defaultValue","closest","data","FormData","formData","push","style","backgroundImage","SetupImagePopup","onImageLoaded","imageRef","onCropComplete","onCropChange","percentCrop","setState","save","bind","f","this","cropped","fileUrl","toDataURL","setSetupImageMod","fileIndex","upd","tabIndex","aria-labelledby","aria-hidden","closeModal","data-dismiss","aria-label","ruleOfThirds","reducer","action","donor","curFiles","newFiles","ID","concat","splice","forEach","el","findIndex","Error","size","createContext","Main","useReducer","setupImageMod","lastModifiedTime","Date","getTime","Provider","Group","MassSetOptionsBtn","modOn","setChangingMod","multiple","massSetOptions","btnText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAEO,SAASA,IACd,OACE,qBAAKC,UAAU,iDAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,wB,+GCFYC,gB,MCFb,SAASC,IACZ,OACI,sBAAKH,UAAU,SAASI,QAAQ,MAAMC,GAAG,KAAKC,MAAM,6BAA6BC,EAAE,MAAMC,EAAE,MACvFC,QAAQ,YAAYC,iBAAiB,cADzC,UAEI,sBAAMH,EAAE,IAAIC,EAAE,IAAIG,MAAM,IAAIC,OAAO,KAAKC,KAAK,OAA7C,SACI,kCAAkBC,cAAc,MAC5BC,cAAc,YAAYC,KAAK,YAC/BC,OAAO,iBACPC,MAAM,IAAIC,IAAI,OAAOC,YAAY,iBAEzC,sBAAMb,EAAE,KAAKC,EAAE,IAAIG,MAAM,IAAIC,OAAO,KAAKC,KAAK,OAA9C,SACI,kCAAkBC,cAAc,MAC5BC,cAAc,YAAYC,KAAK,YAC/BC,OAAO,iBACPC,MAAM,OAAOC,IAAI,OAAOC,YAAY,iBAE5C,sBAAMb,EAAE,KAAKC,EAAE,IAAIG,MAAM,IAAIC,OAAO,KAAKC,KAAK,OAA9C,SACI,kCAAkBC,cAAc,MAC5BC,cAAc,YAAYC,KAAK,YAC/BC,OAAO,iBACPC,MAAM,OAAOC,IAAI,OAAOC,YAAY,oBCKzC,SAASC,EAAQC,GAAQ,IAAD,EAETC,qBAAWC,GAA/BC,EAF6B,EAE7BA,MAAOC,EAFsB,EAEtBA,SAETC,EAAOF,EAAMG,MAAMN,EAAMO,OACzBC,EAASC,iBAAO,MALe,EAMSC,mBAAS,MANlB,mBAM9BC,EAN8B,KAMbC,EANa,OAObF,mBAAS,CAAEG,KAAM,KAAMxB,MAAO,EAAGC,OAAQ,EAAGwB,OAAQ,GAAK,GAAI7B,EAAG,EAAGC,EAAG,IAPzD,mBAO9B6B,EAP8B,KAOxBC,EAPwB,OAQRN,oBAAS,GARD,mBAQ9BO,EAR8B,KAQrBC,EARqB,KAU/BC,EAASC,uBAAY,SAACC,GAC1B,IAAMC,EAAMD,EAAEE,OACdf,EAAOgB,QAAUF,EAFe,MAGI,CAClCnB,EAAMG,MAAMN,EAAMO,OAAOkB,QAAQX,OACjCQ,EAAIjC,MACJiC,EAAIhC,OACJyB,EAAK9B,EACL8B,EAAK7B,GALF4B,EAH2B,KAGnBzB,EAHmB,KAGZC,EAHY,KAGJL,EAHI,KAGDC,EAHC,KA+BhC,OArBI4B,EAAS,GACXxB,EAASD,EAAQyB,EACjB7B,EAAI,EACJC,GAAKoC,EAAIhC,OAASA,GAAU,IAG5BD,EAAQC,EAASwB,EACjB7B,GAAKqC,EAAIjC,MAAQA,GAAS,EAC1BH,EAAI,GAWN8B,EARc,CACZH,KAAM,KACNC,OAAQA,EACRzB,MAAOA,EACPC,OAAQA,EACRL,EAAGA,EACHC,EAAGA,IAGLgC,GAAU,IACH,IACN,IAEGQ,EAAc,uCAAG,WAAOX,GAAP,SAAAY,EAAA,sDAEjBnB,GAAUO,EAAK1B,OAAS0B,EAAKzB,SAC/B4B,GAAU,GAEcU,EACtBpB,EAAOgB,QACPT,EACA,gBAGcc,MAAK,SAAAC,GACnB,IAAMC,EAAI1B,EAAKoB,QACfM,EAAEC,QAAUF,EACZ1B,EAAS,CACPV,KAAM,gBAAiBuC,QAAS,CAC9B1B,MAAOP,EAAMO,MACbkB,QAASM,QAKfG,YAAW,WACThB,GAAU,KACT,OAxBgB,2CAAH,sDA4BdU,EAAgB,SAACO,EAAOpB,EAAMqB,GAClC,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAaC,OAAOC,iBACpBC,EAASR,EAAMS,aAAeT,EAAM9C,MACpCwD,EAASV,EAAMW,cAAgBX,EAAM7C,OACrCyD,EAAMV,EAAOW,WAAW,MAoB9B,OAlBAX,EAAOhD,MAAQ0B,EAAK1B,MAAQmD,EAAaG,EACzCN,EAAO/C,OAASyB,EAAKzB,OAASkD,EAAaK,EAE3CE,EAAIE,aAAaT,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDO,EAAIG,sBAAwB,OAE5BH,EAAII,UACFhB,EACApB,EAAK9B,EAAI0D,EACT5B,EAAK7B,EAAI2D,EACT9B,EAAK1B,MAAQsD,EACb5B,EAAKzB,OAASuD,EACd,EACA,EACA9B,EAAK1B,MAAQsD,EACb5B,EAAKzB,OAASuD,GAGT,IAAIO,SAAQ,SAACC,EAASC,GAC3BjB,EAAOkB,QACL,SAACC,GACC,IAAMC,EAAahB,OAAOiB,IAAIC,gBAAgBH,GAC9C5C,EAAmB6C,GACnBhB,OAAOiB,IAAIE,gBAAgBH,KAE7B,YACA,GAEFJ,EAAQ1C,OA6DZ,OAnCAkD,qBAAU,WACR,GAAI9C,EAAKD,SAAWX,EAAMG,MAAMN,EAAMO,OAAOkB,QAAQX,OAAQ,CAC3D,IAAMQ,EAAMd,EAAOgB,QADwC,EAEvB,CAClCrB,EAAMG,MAAMN,EAAMO,OAAOkB,QAAQX,OACjCQ,EAAIjC,MACJiC,EAAIhC,OACJyB,EAAK9B,EACL8B,EAAK7B,GALF4B,EAFsD,KAE9CzB,EAF8C,KAEvCC,EAFuC,KAE/BL,EAF+B,KAE5BC,EAF4B,KAUvD4B,EAAS,GACXxB,EAASD,EAAQyB,EACjB7B,EAAI,EACJC,GAAKoC,EAAIhC,OAASA,GAAU,IAG5BD,EAAQC,EAASwB,EACjB7B,GAAKqC,EAAIjC,MAAQA,GAAS,EAC1BH,EAAI,GAWN8B,EARc,CACZH,KAAM,KACNC,OAAQA,EACRzB,MAAOA,EACPC,OAAQA,EACRL,EAAGA,EACHC,EAAGA,OAKN,CAACiB,EAAOY,EAAMP,EAAQR,EAAMO,QAG7B,qCACGU,GAAW,cAACpC,EAAD,IACZ,cAAC,IAAD,CACEkC,KAAMA,EACN+C,SAAU7C,EACV8C,SAAU,SAACC,GAAD,OAAOhD,EAAQgD,IACzBC,WAAY,SAACD,GAAQtC,EAAesC,IACpCE,UAAW,kBAAMhD,GAAU,IAC3BiD,gBAjEA3D,EAEA,qCACE,qBAAK9B,UAAU,UAAU0F,YAAW5D,EAAOgB,QAAU,EAAI,EAAzD,SACE,cAAC3C,EAAD,MAEF,qBACEwF,IAAKhE,EAAKiE,KACVC,YAAa,kBAAMrD,GAAU,IAC7BC,OAAQA,EACRqD,IAAKhE,EACL9B,UAAU,mBACV+F,IAAI,QAKH,UC9Hb,SAASC,EAAK1E,GAAQ,IAAD,EAESC,qBAAWC,GAA/BC,EAFW,EAEXA,MAAOC,EAFI,EAEJA,SAGX2B,EADI5B,EAAMG,MAAMN,EAAMO,OAChBkB,QAYJkD,EAAY,SAACC,EAAQ9D,GACzB,IAAMa,EAAIiD,EAAOC,MAAM,KACvB,OAAIlD,EAAE,GAAKA,EAAE,KAAOb,EACXa,EAAE,GAAKA,EAAE,GAGTA,EAAE,GAAKA,EAAE,IAgBpB,YAAUmD,IAAN/C,EAAwB,KAG1B,sBAAKgD,QAfU,WACX5E,EAAM6E,YACRjD,EAAEkD,SAAWlD,EAAEkD,QACf7E,EAAS,CACPV,KAAM,gBAAiBuC,QAAS,CAC9B1B,MAAOP,EAAMO,MACbkB,QAASM,OASSrD,UAAU,cAAcuG,QAASlD,EAAEkD,QAAU,UAAY,GAAjF,UACE,cAAClF,EAAD,CAASQ,MAAOP,EAAMO,QACtB,sBAAK7B,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA0B,cAAC,IAAD,CAAUwG,KAAK,sBAAzC,OAAsEnD,EAAE6C,OAAS7C,EAAE6C,OAAS,wBAC5F,sBAAKlG,UAAU,UAAf,UAAyB,cAAC,IAAD,CAAUwG,KAAK,kBAAxC,OAAiEnD,EAAEoD,MAAQpD,EAAEoD,MAAQ,wBACrF,sBAAKzG,UAAU,SAAf,UAAwB,cAAC,IAAD,CAAUwG,KAAK,iBAAvC,OAA+DnD,EAAEqD,KAAOrD,EAAEqD,KAAO,wBACjF,sBAAK1G,UAAU,UAAf,UAAyB,cAAC,IAAD,CAAUwG,KAAK,4BAAxC,OAA2EnD,EAAEsD,MAAQtD,EAAEsD,MAAQ,wBAC/F,qBAAK3G,UAAU,cACf,cAAC4G,EAAD,CACE/E,MAAOP,EAAMO,MACbgF,OAAQvF,EAAMuF,OACdC,OA9Ca,WACnBzD,EAAEjB,OAAS6D,EAAU5C,EAAE6C,OAAQ7C,EAAEjB,QACjCV,EAAS,CACPV,KAAM,gBAAiBuC,QAAS,CAC9B1B,MAAOP,EAAMO,MACbkB,QAASM,cAgDjB,SAASuD,EAAYtF,GAAQ,IAAD,EAEEC,qBAAWC,GAAxBE,GAFW,EAElBD,MAFkB,EAEXC,UAEf,OACE,sBAAK1B,UAAU,mBAAf,UAUE,cAAC+G,EAAD,CACEC,eAAgB1F,EAAMwF,OACtBG,UAAU,wBACVC,UAAU,SACVrF,MAAOP,EAAMO,QAEf,cAACkF,EAAD,CACEC,eAAgB,kBAAMtF,EAAS,CAC7BV,KAAM,SACNuC,QAASjC,EAAMO,SAEjBoF,UAAU,gBACVC,UAAU,QACVrF,MAAOP,EAAMO,WAMd,SAASkF,EAAkBzF,GAAQ,IAAD,iBACeA,GAA9C0F,EAD+B,EAC/BA,eAAgBC,EADe,EACfA,UAAWC,EADI,EACJA,UACnC,OACE,qBAAKb,QAASW,EAAgBhH,UAAS,sBAAiBkH,GAAxD,SAAqE,cAAC,IAAD,CAAUV,KAAMS,MAI1EE,MA7HR,WAAsB,IAAD,EAEE5F,qBAAWC,GAA/BC,EAFkB,EAElBA,MAmBR,OArB0B,EAEXC,SAEF,WACX,IAAI0F,EAAO3F,EAAMG,MAAMyF,KAAI,SAACC,EAAGC,GAC7B,GAAID,EACF,OAAO,cAACtB,EAAD,CAAiBnE,MAAO0F,GAAbD,EAAEjH,OAMxB,OAJI+G,EAAKI,QAAU,IACjBJ,EAAO,+CAIP,qBAAKpH,UAAU,YAAYyH,aAAYhG,EAAM6E,UAAY,EAAI,EAA7D,SACGc,IAMAA,I,QCxBF,SAASM,EAAapG,GAAQ,IAAD,EAENC,qBAAWC,GAAxBE,GAFmB,EAE1BD,MAF0B,EAEnBC,UAETiG,EAAO5F,mBAeb,OAAKT,EAAMsG,IAGT,qBAAK5H,UAAU,4BAAf,SACE,qBAAKA,UAAU,0CAAf,SACE,uBAAM8F,IAAK6B,EAAX,UACE,qBAAK3H,UAAU,cAAf,oEACA,sBAAKA,UAAU,YAAf,UAEE,cAAC6H,EAAD,IAEA,sBAAK7H,UAAU,aAAf,UACE,uBAAO8H,QAAQ,iBAAiB9H,UAAU,kBAA1C,2EACA,yBAAQA,UAAU,cAAcwG,KAAK,SAASnG,GAAG,iBAAiB0H,UAAQ,EAA1E,UACE,wBAAQ3C,UAAQ,EAAhB,wDACA,wBAAQ4C,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,yBAIJ,sBAAKhI,UAAU,aAAf,UACE,uBAAO8H,QAAQ,iBAAiB9H,UAAU,kBAA1C,qEACA,yBAAQA,UAAU,cAAcwG,KAAK,QAAQnG,GAAG,iBAAiB0H,UAAQ,EAAzE,UACE,wBAAQ3C,UAAQ,EAAhB,wDACA,wBAAQ4C,MAAM,6CAAd,wDACA,wBAAQA,MAAM,uCAAd,wDAIJ,qBAAKhI,UAAU,kBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,uBAAOA,UAAU,mBAAmBwG,KAAK,OAAOxF,KAAK,WAAWiH,KAAK,SAAS5H,GAAG,2BACjF,uBAAOL,UAAU,mBAAmB8H,QAAQ,yBAA5C,2FAIJ,sBAAK9H,UAAU,OAAf,UACE,uBAAO8H,QAAQ,2BAA2B9H,UAAU,aAApD,0EACA,uBAAOgB,KAAK,SAASwF,KAAK,QAAQxG,UAAU,eAAeK,GAAG,2BAA2B6H,aAAa,YAI1G,qBAAKlI,UAAU,yCAAf,SACE,qBAAKqG,QAzDA,SAAC1D,GACd,IADoB,EACdgF,EAAOhF,EAAEE,OAAOsF,QAAQ,QACxBC,EAAO,IAAIC,SAASV,GACtBW,EAAW,GAHK,cAIMF,GAJN,IAIpB,2BAAgC,CAAC,IAAD,yBAAtB5B,EAAsB,KAAhBwB,EAAgB,KAC9BM,EAASC,KAAK,CAAE/B,KAAMA,EAAMwB,MAAOA,KALjB,8BAOpBtG,EAAS,CACPV,KAAM,sBACNuC,QAAS+E,KAgDmBtI,UAAU,kBAAhC,oIA5Ca,KAoDzB,SAAS6H,EAAiBvG,GAAQ,IAAD,EACHC,qBAAWC,GAA/BC,EADuB,EACvBA,MAEJ2F,GAH2B,EAChB1F,SAEJ,MACX,OAAID,EAAMG,QACRwF,EAAO3F,EAAMG,MAAMyF,KAAI,SAACC,GACtB,aAAkBlB,IAAdkB,EAAEvE,UAAyBuE,EAAEvE,QAAQwD,UAErC,qBAAgBvG,UAAU,0BACxBwI,MAAO,CAAEC,gBAAgB,OAAD,OAAS1E,OAAOiB,IAAIC,gBAAgBqC,EAAE3F,MAAtC,OADhB2F,EAAEjH,QAOTmH,OAAS,EACT,qBAAKxH,UAAU,oBAAf,SAAoCoH,IAKtC,KCzFJ,IAAMsB,EAAb,kDACE,WAAYpH,GAAQ,IAAD,8BACjB,cAAMA,IAwBRqH,cAAgB,SAAClF,GACf,EAAKmF,SAAWnF,GA1BC,EA6BnBoF,eAAiB,SAACxG,GAChB,EAAKW,eAAeX,IA9BH,EAiCnByG,aAAe,SAACzG,EAAM0G,GAGpB,EAAKC,SAAS,CAAE3G,UAlChB,EAAKZ,MAAQ,CACXkE,IAAK,GACLtD,KAAM,CACJF,KAAM,IACNxB,MAAO,MACPyB,OAAQ,EAAI,IAGhB,EAAK6G,KAAO,EAAKA,KAAKC,KAAV,gBAVK,EADrB,qDAcE,WACE,IAAMC,EAAIC,KAAK9H,MAAMK,KACfgE,EAAMwD,EAAEpG,QAAQsG,QAAUF,EAAEpG,QAAQsG,QAAUtF,OAAOiB,IAAIC,gBAAgBmE,KAAK9H,MAAMK,KAAKA,MAC/FyH,KAAKJ,SAAS,CAAErD,IAAKA,MAjBzB,kCAoBE,WACE,IAAMwD,EAAIC,KAAK9H,MAAMK,KACfgE,EAAMwD,EAAEpG,QAAQsG,QAAUF,EAAEpG,QAAQsG,QAAUtF,OAAOiB,IAAIC,gBAAgBmE,KAAK9H,MAAMK,KAAKA,MAC/FyH,KAAKJ,SAAS,CAAErD,IAAKA,MAvBzB,mEAwCE,WAAqBtD,GAArB,eAAAY,EAAA,2DACMmG,KAAKR,UAAYvG,EAAK1B,OAAS0B,EAAKzB,QAD1C,gCAEkCwI,KAAKlG,cACjCkG,KAAKR,SACLvG,EACA,gBALN,OAEUJ,EAFV,OAOImH,KAAKJ,SAAS,CAAE/G,oBAPpB,gDAxCF,kFAmDE,SAAcwB,EAAOpB,EAAMqB,GAAW,IAAD,OAC7BC,EAASC,SAASC,cAAc,UAChCC,EAAaC,OAAOC,iBACpBC,EAASR,EAAMS,aAAeT,EAAM9C,MACpCwD,EAASV,EAAMW,cAAgBX,EAAM7C,OACrCyD,EAAMV,EAAOW,WAAW,MAoB9B,OAlBAX,EAAOhD,MAAQ0B,EAAK1B,MAAQmD,EAAaG,EACzCN,EAAO/C,OAASyB,EAAKzB,OAASkD,EAAaK,EAE3CE,EAAIE,aAAaT,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDO,EAAIG,sBAAwB,OAE5BH,EAAII,UACFhB,EACApB,EAAK9B,EAAI0D,EACT5B,EAAK7B,EAAI2D,EACT9B,EAAK1B,MAAQsD,EACb5B,EAAKzB,OAASuD,EACd,EACA,EACA9B,EAAK1B,MAAQsD,EACb5B,EAAKzB,OAASuD,GAGT,IAAIO,SAAQ,SAACC,EAASC,GAC3B,EAAK0E,QAAU3F,EAAO4F,YACtB5E,EAAQ,EAAK2E,cA9EnB,mBAkFE,WACEF,KAAK9H,MAAMkI,iBAAiB,QAnFhC,kBAsFE,WAAQ,IACEvH,EAAoBmH,KAAK3H,MAAzBQ,gBACAwH,EAAcL,KAAK9H,MAAnBmI,UACRL,KAAK9H,MAAMoI,IAAI,UAAWzH,EAAiBwH,GAC3CL,KAAKJ,SAAS,CAAErD,IAAK1D,MA1FzB,oBA6FE,WAAU,IAAD,SACgCmH,KAAK3H,MAApCY,EADD,EACCA,KAAMsD,EADP,EACOA,IAAK1D,EADZ,EACYA,gBADZ,EAEqBmH,KAAK9H,MAAzBmI,EAFD,EAECA,UAAW9H,EAFZ,EAEYA,KACnB,OACE,qBAAK3B,UAAU,kBAAkBK,GAAG,iBAAiBsJ,SAAS,KAAK1B,KAAK,SAAS2B,kBAAgB,oBAAoBC,cAAY,QAAjI,SACE,qBAAK7J,UAAU,eAAeiI,KAAK,WAAnC,SACE,sBAAKjI,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcK,GAAG,uBAA/B,+GACA,wBAAQgG,QAAS+C,KAAK9H,MAAMwI,WAAY9I,KAAK,SAAShB,UAAU,QAAQ+J,eAAa,QAAQC,aAAW,QAAxG,SACE,sBAAMH,cAAY,OAAlB,uBAGJ,qBAAK7J,UAAU,aAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,qBAAKA,UAAU,qBAAf,SACG2F,GACC,qCAEE,sBAAK3F,UAAU,mBAAf,UACE,cAAC+G,EAAD,CACEC,eAAgB,kBAAM,EAAK1F,MAAMoI,IAAI,UAAW/H,EAAKoB,QAAQ+D,OAAQ2C,IACrExC,UAAU,oBACVC,UAAU,SACVrF,MAAOuH,KAAK9H,MAAMmI,YAEpB,cAAC1C,EAAD,CACEC,eAAgB,kBAAM,EAAK1F,MAAMoI,IAAI,UAAW/H,EAAKoB,QAAQ+D,OAAQ2C,IACrExC,UAAU,wBACVC,UAAU,SACVrF,MAAOuH,KAAK9H,MAAMmI,eAGtB,cAAC,IAAD,CACE9D,IAAKA,EACLtD,KAAMA,EACN4H,cAAY,EACZtB,cAAeS,KAAKT,cACpBpD,WAAY6D,KAAKP,eACjBxD,SAAU+D,KAAKN,sBAOzB,qBAAK9I,UAAU,kCAAf,SACG2F,GACC,sBAAK3F,UAAU,uBAAf,UACE,+KACA,qBAAK2F,IAAK1D,EAAiB8D,IAAI,iBAQ3C,sBAAK/F,UAAU,eAAf,UACE,wBAAQqG,QAAS+C,KAAK9H,MAAMwI,WAAY9I,KAAK,SAAShB,UAAU,oBAAoB+J,eAAa,QAAjG,wDACA,wBAAQ1D,QAAS+C,KAAKH,KAAMjI,KAAK,SAAShB,UAAU,kBAApD,4EA3Jd,GAAqCE,iBCN9B,SAASgK,EAAQzI,EAAO0I,GAC7B,IA4EgBxI,EA5EVyI,EAAQ3I,EAAMG,MACpB,OAAQuI,EAAOnJ,MAEb,IAAK,MAGH,IAFA,IAAMqJ,EAAWF,EAAO5G,QACpB+G,EAAW,GACN/C,EAAI,EAAGA,EAAI8C,EAAS7C,OAAQD,IAAK,CACxC,IAAI3E,EAsEH,CACLvC,GAAIkK,EAFU5I,EArES0I,EAAS9C,IAwEhC5F,KAAMA,EACNiE,KAAMZ,IAAIC,gBAAgBtD,GAC1BoB,QAAS,CACP4D,MAAO,EACPT,OAAQ,QACRO,MAAO,6CACPC,KAAM,EACNI,QAAQ,EACRP,SAAS,EACT8C,QAAS,GACTjH,OAAQ,GAAK,KAjFXkI,EAAS/B,KAAK3F,GAEhB,OAAO,2BACFnB,GADL,IACYG,MAAOwI,EAAMI,OAAOF,GAAWhE,WAAW,IAGxD,IAAK,SAEH,OADA8D,EAAMK,OAAON,EAAO5G,QAAS,EAAG,MACzB,2BACF9B,GADL,IACYG,MAAOwI,IAGrB,IAAK,gBAEH,OADAA,EAAMD,EAAO5G,QAAQ1B,OAAOkB,QAAUoH,EAAO5G,QAAQR,QAC9C,2BACFtB,GADL,IACYG,MAAOwI,IAGnB,IAAK,SACH,IAAMtD,EAASsD,EAAMD,EAAO5G,SAASR,QAAQ+D,OAE7C,OADAsD,EAAMD,EAAO5G,SAASR,QAAQ+D,QAAUA,EACjC,2BACFrF,GADL,IACYG,MAAOwI,IAGnB,IAAK,OAEH,OADAA,EAAMD,EAAO5G,SAASR,QAAQsG,QAAQd,KAAK6B,EAAMD,EAAO5G,SAASR,QAAQO,SAClE,2BACF7B,GADL,IACYG,MAAOwI,IAGnB,IAAK,iBACH,IAAIjB,EAAI1H,EAAMG,MAMd,OALIH,EAAM6E,WACR6C,EAAEuB,SAAQ,SAACC,GACTA,EAAG5H,QAAQwD,SAAU,KAGlB,2BACF9E,GADL,IACYG,MAAOuH,EAAG7C,WAAY7E,EAAM6E,YAG1C,IAAK,sBACH,IAAMgC,EAAW6B,EAAO5G,QAgBxB,OAfA9B,EAAMG,MAAM8I,SAAQ,SAACvB,GACfA,EAAEpG,QAAQwD,UACZ+B,EAASoC,SAAQ,SAACC,GAChBxB,EAAEpG,QAAQ4H,EAAGnE,MAAQmE,EAAG3C,SAGXM,EAASsC,WAAU,SAACD,GACjC,MAAoB,SAAZA,EAAGnE,QAGA,IACX2C,EAAEpG,QAAQ2D,MAAO,OAIhB,2BACFjF,GADL,IACYG,MAAOH,EAAMG,QAGzB,QACE,MAAM,IAAIiJ,OAsBxB,SAASN,EAAG5I,GACV,OAAOA,EAAKmJ,KAAO,IAAMnJ,EAAK6E,KC1FzB,IAAIhF,EAAauJ,wBAAc,MAE/B,SAASC,IAAQ,IAAD,EAEKC,qBAAWf,EAAS,CAC5CtI,MAAO,GACP0E,WAAW,EACX4E,cAAe,KACfC,kBAAkB,IAAIC,MAAOC,YANV,mBAEd5J,EAFc,KAEPC,EAFO,KAiCrB,OACE,eAACF,EAAW8J,SAAZ,CAAqBtD,MAAO,CAAEvG,QAAOC,YAArC,UACE,cAAC6J,EAAD,IAE0B,kBAAlBL,eACN,cAAC,EAAD,CACEzB,UAAWhI,EAAMyJ,cACjBvJ,KAAMF,EAAMG,MAAMH,EAAMyJ,eACxBpB,WAZW,kBAmBrB,SAASyB,EAAMjK,GAAQ,IAAD,EAEQC,qBAAWC,GAA/BC,EAFY,EAEZA,MAAOC,EAFK,EAELA,SAMf,OACE,sBAAK1B,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,sBAAKA,UAAU,gEAAf,oGACoByB,EAAMG,MAAM4F,OAC9B,cAACgE,EAAD,CAAmBC,MAAOhK,EAAM6E,UAAWoF,eAAgBjK,EAAMiK,oBAEnE,qBAAK1L,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,kCACE,6GACA,uBAAOqF,SAhBJ,SAAC1C,GAChBjB,EAAS,CAAEV,KAAM,MAAOuC,QAASZ,EAAEE,OAAOjB,SAeH5B,UAAU,eAAegB,KAAK,OAAO2K,UAAQ,OAE1E,cAAC,EAAD,SAGJ,qBAAK3L,UAAU,yCAAf,SACE,qBAAKA,UAAU,2BAAf,wKAIN,qBAAKA,UAAU,kBAAf,SACE,cAAC0H,EAAD,aAAcE,KAAK,EAAMgE,eAAgBnK,EAAMmK,gBAAoBtK,SAM3E,SAASkK,EAAkBlK,GAAQ,IAAD,EAEJC,qBAAWC,GAA/BC,EAFwB,EAExBA,MAAOC,EAFiB,EAEjBA,SAEXmK,EAAU,oGACVpK,EAAM6E,YACRuF,EAAU,oDASZ,OACE,qBAAKxF,QAPQ,WACb3E,EAAS,CACPV,KAAM,oBAKchB,UAAU,0BAAhC,SAA2D6L,ICzFhDC,MATf,WACE,OACE,sBAAK9L,UAAU,YAAf,UACE,cAACD,EAAD,IACA,cAACiL,EAAD,QCHSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9I,MAAK,YAAkD,IAA/C+I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7I,SAAS8I,eAAe,SAM1BX,M","file":"static/js/main.96b9c711.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Topbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React, { PureComponent } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport { AppContext } from \"./main\";\r\n\r\nclass Image extends PureComponent {\r\n\r\n  state = {\r\n    src: '',\r\n    image: {\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    crop: {\r\n      unit: '%',\r\n      width: '100',\r\n      aspect: 10 / 15,\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n  save = this.save.bind(this);\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped.length > 0 ? f.options.cropped[f.options.cropped.length - 1] : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.createCROP();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  createCROP() {\r\n    let [aspect, width, height] = [\r\n      this.props.file.options.aspect,\r\n      this.state.image.width,\r\n      this.state.image.height,\r\n    ];\r\n    let crop = this.state.crop;\r\n    if (aspect !== undefined && aspect !== crop.aspect) {\r\n      if (aspect > 1) {\r\n        height = width / aspect;\r\n      }\r\n      else {\r\n        width = height * aspect;\r\n      }\r\n\r\n      crop = {\r\n        unit: 'px',\r\n        aspect: aspect,\r\n        width: width,\r\n        height: height,\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      this.setState({ crop });\r\n    }\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n    // this.(image);\r\n    this.setState({\r\n      image: { width: image.width, height: image.height }\r\n    })\r\n    this.createCROP();\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop }); // в процентах\r\n    this.setState({ crop }); // в пикселях\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n      const o = this.props.file.options;\r\n      o.preCrop = croppedImageUrl;\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async imageTo64(image) {\r\n    if (image) {\r\n      let o = this.props.s.files[this.props.index].options;\r\n      let cropped = await this.getImage(image);\r\n      o.cropped.push(cropped);\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n      this.setState({ src: cropped })\r\n    }\r\n  }\r\n\r\n  getImage(image) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth;\r\n    const scaleY = image.naturalHeight;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = pixelRatio * scaleX;\r\n    canvas.height = pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      0,\r\n      0,\r\n      scaleX,\r\n      scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toBlob();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toBlob(() => { }, 'image/jpg', 1);\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    const src = file.options.cropped.length > 0 ? file.options.cropped[file.options.cropped.length - 1] : this.state.src;\r\n    return (\r\n      <>\r\n        <ReactCrop\r\n          key={this.props.aspect}\r\n          src={src}\r\n          crop={crop}\r\n          rotate={0}\r\n          ruleOfThirds\r\n          onImageLoaded={this.onImageLoaded}\r\n          onComplete={this.onCropComplete}\r\n          onChange={this.onCropChange}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Image;","import React from \"react\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <svg className=\"loader\" version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n            viewBox=\"0 0 30 30\" enableBackground=\"new 0 0 0 0\">\r\n            <rect x=\"0\" y=\"0\" width=\"4\" height=\"10\" fill=\"#fff\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n            <rect x=\"10\" y=\"0\" width=\"4\" height=\"10\" fill=\"#f0a\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0.2s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n            <rect x=\"20\" y=\"0\" width=\"4\" height=\"10\" fill=\"#fff\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0.4s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n        </svg>\r\n    )\r\n}","import React, { useState, useCallback, useRef, useEffect, useContext } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { AppContext } from './main';\r\nimport { Preloader } from './loader';\r\n\r\nfunction generateDownload(canvas, crop) {\r\n  if (!crop || !canvas) {\r\n    return;\r\n  }\r\n\r\n  canvas.toBlob(\r\n    (blob) => {\r\n      const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n      const anchor = document.createElement('a');\r\n      anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      anchor.click();\r\n\r\n      window.URL.revokeObjectURL(previewUrl);\r\n    },\r\n    'image/png',\r\n    1\r\n  );\r\n}\r\n\r\nexport default function ImageV2(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const file = state.files[props.index];\r\n  const imgRef = useRef(null);\r\n  const [croppedImageUrl, setCroppedImageUrl] = useState(null);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 0, height: 0, aspect: 10 / 15, x: 0, y: 0 });\r\n  const [loading, onLoading] = useState(true);\r\n\r\n  const onLoad = useCallback((e) => {\r\n    const img = e.target;\r\n    imgRef.current = img;\r\n    let [aspect, width, height, x, y] = [\r\n      state.files[props.index].options.aspect,\r\n      img.width,\r\n      img.height,\r\n      crop.x,\r\n      crop.y\r\n    ];\r\n    if (aspect > 1) {\r\n      height = width / aspect;\r\n      x = 0;\r\n      y = (img.height - height) / 2;\r\n    }\r\n    else {\r\n      width = height * aspect;\r\n      x = (img.width - width) / 2;\r\n      y = 0;\r\n    }\r\n\r\n    let newcrop = {\r\n      unit: 'px',\r\n      aspect: aspect,\r\n      width: width,\r\n      height: height,\r\n      x: x,\r\n      y: y,\r\n    };\r\n    setCrop(newcrop);\r\n    onLoading(false);\r\n    return false;\r\n  }, []);\r\n\r\n  const makeClientCrop = async (crop) => {\r\n\r\n    if (imgRef && crop.width && crop.height) {\r\n      onLoading(true);\r\n\r\n      const croppedImageUrl = getCroppedImg(\r\n        imgRef.current,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n\r\n      croppedImageUrl.then(res => {\r\n        const o = file.options;\r\n        o.preCrop = res;\r\n        dispatch({\r\n          type: \"updateOptions\", payload: {\r\n            index: props.index,\r\n            options: o\r\n          }\r\n        });\r\n      })\r\n\r\n      setTimeout(() => {\r\n        onLoading(false);\r\n      }, 1500)\r\n    }\r\n  }\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(\r\n        (blob) => {\r\n          const previewUrl = window.URL.createObjectURL(blob);\r\n          setCroppedImageUrl(previewUrl);\r\n          window.URL.revokeObjectURL(previewUrl);\r\n        },\r\n        'image/png',\r\n        1\r\n      );\r\n      resolve(croppedImageUrl);\r\n    });\r\n  }\r\n\r\n  const ImageComponent = () => {\r\n    if (imgRef) {\r\n      return (\r\n        <>\r\n          <div className=\"overlay\" is-loaded={imgRef.current ? 1 : 0}>\r\n            <Preloader />\r\n          </div>\r\n          <img\r\n            src={file.body}\r\n            onLoadStart={() => onLoading(true)}\r\n            onLoad={onLoad}\r\n            ref={imgRef}\r\n            className=\"ReactCrop__image\"\r\n            alt=\"\" />\r\n        </>\r\n      )\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (crop.aspect !== state.files[props.index].options.aspect) {\r\n      const img = imgRef.current;\r\n      let [aspect, width, height, x, y] = [\r\n        state.files[props.index].options.aspect,\r\n        img.width,\r\n        img.height,\r\n        crop.x,\r\n        crop.y\r\n      ];\r\n\r\n      if (aspect > 1) {\r\n        height = width / aspect;\r\n        x = 0;\r\n        y = (img.height - height) / 2;\r\n      }\r\n      else {\r\n        width = height * aspect;\r\n        x = (img.width - width) / 2;\r\n        y = 0;\r\n      }\r\n\r\n      let newcrop = {\r\n        unit: 'px',\r\n        aspect: aspect,\r\n        width: width,\r\n        height: height,\r\n        x: x,\r\n        y: y,\r\n      };\r\n      setCrop(newcrop);\r\n    }\r\n\r\n  }, [state, crop, imgRef, props.index]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Preloader />}\r\n      <ReactCrop\r\n        crop={crop}\r\n        disabled={loading}\r\n        onChange={(c) => setCrop(c)}\r\n        onComplete={(c) => { makeClientCrop(c) }}\r\n        onDragEnd={() => onLoading(true)}\r\n        renderComponent={ImageComponent()}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, PureComponent, useContext } from \"react\";\r\nimport LineIcon from \"react-lineicons\";\r\nimport Image from \"../components/image\";\r\nimport ImageV2 from \"./image-v2\";\r\nimport { AppContext } from \"./main\";\r\n\r\nexport function ImageList() {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const list = () => {\r\n    let list = state.files.map((n, i) => {\r\n      if (n)\r\n        return <Item key={n.id} index={i} />\r\n    })\r\n    if (list.length <= 0) {\r\n      list = 'нет фото';\r\n    }\r\n\r\n    return (\r\n      <div className=\"list mt-3\" change-mod={state.changeMod ? 1 : 0}>\r\n        {list}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return list();\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let n = state.files[props.index];\r\n  let o = n.options;\r\n\r\n  const rotateAspect = () => {\r\n    o.aspect = getAspect(o.format, o.aspect);\r\n    dispatch({\r\n      type: \"updateOptions\", payload: {\r\n        index: props.index,\r\n        options: o\r\n      }\r\n    });\r\n  }\r\n\r\n  const getAspect = (format, aspect) => {\r\n    const a = format.split('x');\r\n    if (a[1] / a[0] === aspect) {\r\n      return a[0] / a[1];\r\n    }\r\n    else {\r\n      return a[1] / a[0];\r\n    }\r\n  }\r\n\r\n  const changeIT = () => {\r\n    if (state.changeMod) {\r\n      o.changed = !o.changed;\r\n      dispatch({\r\n        type: \"updateOptions\", payload: {\r\n          index: props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (o === undefined) return null;\r\n\r\n  return (\r\n    <div onClick={changeIT} className=\"file d-flex\" changed={o.changed ? 'changed' : ''}>\r\n      <ImageV2 index={props.index} />\r\n      <div className=\"file-options\">\r\n        <div className=\"o format\"><LineIcon name=\"lni lni-ruler-alt\" />&nbsp;{o.format ? o.format : 'Нет'}</div>\r\n        <div className=\"o paper\"><LineIcon name=\"lni lni-write\" />&nbsp;{o.paper ? o.paper : 'Нет'}</div>\r\n        <div className=\"o crop\"><LineIcon name=\"lni lni-crop\" />&nbsp;{o.cadr ? o.cadr : 'Нет'}</div>\r\n        <div className=\"o count\"><LineIcon name=\"lni lni-shopping-basket\" />&nbsp;{o.count ? o.count : 'Нет'}</div>\r\n        <div className=\"delimeter\"></div>\r\n        <ItemOptions\r\n          index={props.index}\r\n          remove={props.remove}\r\n          rotate={rotateAspect} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ItemOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"item-option-list\">\r\n      {/* <ItemOptionListBtn\r\n        actionFunction={() => dispatch({\r\n          type: \"crop\",\r\n          payload: props.index,\r\n        })}\r\n        iconClass=\"lni lni-crop\"\r\n        itemClass=\"crop\"\r\n        index={props.index}\r\n      /> */}\r\n      <ItemOptionListBtn\r\n        actionFunction={props.rotate}\r\n        iconClass=\"lni lni-spinner-arrow\"\r\n        itemClass=\"rotate\"\r\n        index={props.index}\r\n      />\r\n      <ItemOptionListBtn\r\n        actionFunction={() => dispatch({\r\n          type: \"remove\",\r\n          payload: props.index,\r\n        })}\r\n        iconClass=\"lni lni-close\"\r\n        itemClass=\"close\"\r\n        index={props.index}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ItemOptionListBtn(props) {\r\n  const { actionFunction, iconClass, itemClass } = { ...props }\r\n  return (\r\n    <div onClick={actionFunction} className={`item-option ${itemClass}`}><LineIcon name={iconClass} /></div>\r\n  )\r\n}\r\n\r\nexport default ImageList;","import React, { useContext, useRef } from 'react';\r\nimport { AppContext } from './main';\r\n\r\nexport function GroupOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const form = useRef();\r\n\r\n  const submit = (e) => {\r\n    const form = e.target.closest('form');\r\n    const data = new FormData(form);\r\n    let formData = [];\r\n    for (let [name, value] of data) {\r\n      formData.push({ name: name, value: value });\r\n    }\r\n    dispatch({\r\n      type: 'massSetFilesOptions',\r\n      payload: formData\r\n    });\r\n  }\r\n\r\n  if (!props.mod) return null;\r\n\r\n  return (\r\n    <div className=\"file-options-form-wrapper\">\r\n      <div className=\"card border-secondary file-options-form\">\r\n        <form ref={form}>\r\n          <div className=\"card-header\">Настройки</div>\r\n          <div className=\"card-body\">\r\n\r\n            <ChangedFilesList />\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect1\" className=\"form-label mt-4\">Формат фото</label>\r\n              <select className=\"form-select\" name=\"format\" id=\"exampleSelect1\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"10x15\">10x15</option>\r\n                <option value=\"15x20\">15x20</option>\r\n                <option value=\"20x30\">20x30</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect2\" className=\"form-label mt-4\">Тип бумаги</label>\r\n              <select className=\"form-select\" name=\"paper\" id=\"exampleSelect2\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"матовая\">Матовая</option>\r\n                <option value=\"глянец\">Глянец</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <input className=\"form-check-input\" name=\"cadr\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Кадрирование</label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <label forhtml=\"exampleFormControlInput3\" className=\"form-label\">Количество</label>\r\n              <input type=\"number\" name=\"count\" className=\"form-control\" id=\"exampleFormControlInput3\" defaultValue=\"1\" />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div onClick={submit} className=\"btn btn-success\">Применить настройки</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChangedFilesList(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let list = null;\r\n  if (state.files) {\r\n    list = state.files.map((n) => {\r\n      if (n.options !== undefined && n.options.changed) {\r\n        return (\r\n          <div key={n.id} className=\"changed-files-list-item\"\r\n            style={{ backgroundImage: `url(${window.URL.createObjectURL(n.file)})` }}></div>\r\n        )\r\n      }\r\n      return false;\r\n    })\r\n\r\n    if (list.length > 0)\r\n      return <div className=\"changed-file-list\">{list}</div>;\r\n    else\r\n      return null;\r\n  }\r\n  else\r\n    return null;\r\n\r\n}","import React, { useState, PureComponent } from \"react\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { ItemOptionListBtn } from \"./list\";\r\n\r\n\r\nexport class SetupImagePopup extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      src: '',\r\n      crop: {\r\n        unit: '%',\r\n        width: '100',\r\n        aspect: 2 / 3\r\n      }\r\n    }\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toDataURL();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.props.setSetupImageMod(null);\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, src, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    return (\r\n      <div className=\"modal fade show\" id=\"file-direction\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"file-direction-label\">Управление файлом</h5>\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 react-crop-wrapper-row\">\r\n                    <div className=\"react-crop-wrapper\">\r\n                      {src && (\r\n                        <>\r\n                          {/* Скрыто стилями */}\r\n                          <div className=\"item-option-list\">\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-ruler-alt\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-spinner-arrow\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                          </div>\r\n                          <ReactCrop\r\n                            src={src}\r\n                            crop={crop}\r\n                            ruleOfThirds\r\n                            onImageLoaded={this.onImageLoaded}\r\n                            onComplete={this.onCropComplete}\r\n                            onChange={this.onCropChange}\r\n                          />\r\n\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4 react-crop-options-bar\">\r\n                    {src && (\r\n                      <div className=\"file-direction__crop\">\r\n                        <span>Предварительный просмотр</span>\r\n                        <img src={croppedImageUrl} alt=\"\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Закрыть</button>\r\n              <button onClick={this.save} type=\"button\" className=\"btn btn-primary\">Обрезать</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","export function reducer(state, action) {\r\n  const donor = state.files;\r\n  switch (action.type) {\r\n\r\n    case \"add\":\r\n      const curFiles = action.payload;\r\n      let newFiles = [];\r\n      for (let i = 0; i < curFiles.length; i++) {\r\n        let img = newImage(curFiles[i]);\r\n        newFiles.push(img);\r\n      };\r\n      return {\r\n        ...state, files: donor.concat(newFiles), changeMod: true\r\n      };\r\n\r\n    case \"remove\":\r\n      donor.splice(action.payload, 1, null);\r\n      return {\r\n        ...state, files: donor\r\n      };\r\n\r\n    case \"updateOptions\":\r\n      donor[action.payload.index].options = action.payload.options;\r\n      return {\r\n        ...state, files: donor\r\n      }\r\n\r\n      case \"rotate\":\r\n        const rotate = donor[action.payload].options.rotate;\r\n        donor[action.payload].options.rotate = !rotate;\r\n        return {\r\n          ...state, files: donor\r\n        }\r\n\r\n        case \"crop\":\r\n          donor[action.payload].options.cropped.push(donor[action.payload].options.preCrop);\r\n          return {\r\n            ...state, files: donor\r\n          }\r\n\r\n          case \"setChangingMod\":\r\n            let f = state.files;\r\n            if (state.changeMod) {\r\n              f.forEach((el) => {\r\n                el.options.changed = false;\r\n              })\r\n            }\r\n            return {\r\n              ...state, files: f, changeMod: !state.changeMod\r\n            };\r\n\r\n          case \"massSetFilesOptions\":\r\n            const formData = action.payload;\r\n            state.files.forEach((f) => {\r\n              if (f.options.changed) {\r\n                formData.forEach((el) => {\r\n                  f.options[el.name] = el.value;\r\n                })\r\n                // Передавалась ли опция кадрирования\r\n                const isCadr = formData.findIndex((el) => {\r\n                  return (el.name === 'cadr')\r\n                })\r\n                // Если не передавалась, снимаем опции у выбранных фото\r\n                if (isCadr < 0) {\r\n                  f.options.cadr = false;\r\n                }\r\n              }\r\n            })\r\n            return {\r\n              ...state, files: state.files\r\n            }\r\n\r\n            default:\r\n              throw new Error();\r\n  }\r\n}\r\n\r\nfunction newImage(file) {\r\n  return {\r\n    id: ID(file),\r\n    file: file,\r\n    body: URL.createObjectURL(file),\r\n    options: {\r\n      count: 1,\r\n      format: '10x15',\r\n      paper: 'матовая',\r\n      cadr: 0,\r\n      rotate: false,\r\n      changed: true,\r\n      cropped: [],\r\n      aspect: 10 / 15\r\n    }\r\n  };\r\n}\r\n\r\nfunction ID(file) {\r\n  return file.size + '_' + file.name;\r\n}","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport ImageList from \"./list\";\r\nimport { GroupOptions } from \"./file_options_form.jsx\";\r\nimport { SetupImagePopup } from \"./setup-image-popup\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport let AppContext = createContext(null);\r\n\r\nexport function Main() {\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    files: [],\r\n    changeMod: false,\r\n    setupImageMod: null,\r\n    lastModifiedTime: new Date().getTime(),\r\n  });\r\n\r\n  const massSetOptions = (formData) => {\r\n    let donor = state.files;\r\n\r\n    donor.forEach((f) => {\r\n      if (f.options.changed) {\r\n        formData.forEach((el) => {\r\n          f.options[el.name] = el.value;\r\n        })\r\n        // Передавалась ли опция кадрирования\r\n        const isCadr = formData.findIndex((el) => { return (el.name === 'cadr') })\r\n        // Если не передавалась, снимаем опции у выбранных фото\r\n        if (isCadr < 0) {\r\n          f.options.cadr = false;\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  const closeModal = () => {\r\n    //setSetupImageMod(null);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      <Group />\r\n\r\n      {typeof setupImageMod === 'number' &&\r\n        <SetupImagePopup\r\n          fileIndex={state.setupImageMod}\r\n          file={state.files[state.setupImageMod]}\r\n          closeModal={closeModal}\r\n        />}\r\n    </AppContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nfunction Group(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const addFiles = (e) => {\r\n    dispatch({ type: \"add\", payload: e.target.files });\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card border-secondary my-3\">\r\n          <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n            Ваши фотографии: {state.files.length}\r\n            <MassSetOptionsBtn modOn={state.changeMod} setChangingMod={state.setChangingMod} />\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"image-list\">\r\n              <label>\r\n                <span>Добавить фото</span>\r\n                <input onChange={addFiles} className=\"form-control\" type=\"file\" multiple />\r\n              </label>\r\n              <ImageList />\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div className=\"btn btn-success disabled\">Перейти к оформлению заказа</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-lg-2\">\r\n        <GroupOptions mod={true} massSetOptions={state.massSetOptions} {...props} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MassSetOptionsBtn(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let btnText = 'Выбрать несколько';\r\n  if (state.changeMod) {\r\n    btnText = 'отменить';\r\n  }\r\n\r\n  const modded = () => {\r\n    dispatch({\r\n      type: 'setChangingMod'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div onClick={modded} className=\"btn btn-info text-white\">{btnText}</div>\r\n  )\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.scss';\nimport { Topbar } from \"./components/topbar\";\nimport { Main } from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Topbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}