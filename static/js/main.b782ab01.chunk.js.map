{"version":3,"sources":["components/topbar.js","components/list.js","components/file_options_form.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Topbar","className","href","Item","props","n","file","o","options","useState","deg","setRotate","change","useEffect","upd","index","onClick","changeMod","changed","cadr","style","backgroundImage","window","URL","createObjectURL","name","format","paper","count","ItemOptions","rotate","ImageList","list","this","files","map","i","id","length","change-mod","React","Component","GroupOptions","form","useRef","mod","ref","ChangedFilesList","forhtml","required","disabled","value","type","role","defaultValue","e","target","closest","data","FormData","formData","push","massSetOptions","Main","addFiles","setChangingMod","Date","getTime","setLastModifiedTime","newImage","ID","body","size","Group","curFiles","newFiles","concat","donor","forEach","f","option","newFileData","el","findIndex","MassSetOptionsBtn","modOn","onChange","multiple","btnText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b782ab01.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Topbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport LineIcon from \"react-lineicons\";\r\n\r\nclass ImageList extends React.Component {\r\n\r\n  list() {\r\n    let list = this.props.files.map((n, i) => {\r\n      return <Item key={n.id} file={n} upd={this.props.upd} index={i} {...this.props} />\r\n    })\r\n    if (list.length <= 0) {\r\n      list = 'нет фото';\r\n    }\r\n\r\n    return (\r\n      <div className=\"list mt-3\" change-mod={this.props.changeMod ? 1 : 0}>\r\n        {list}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  render() {\r\n    return this.list();\r\n  }\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n  let n = props.file;\r\n  let o = n.options;\r\n\r\n  const [deg, setRotate] = useState(false);\r\n  const [change, changed] = useState(false);\r\n\r\n  const rotate = () => {\r\n    setRotate(!deg);\r\n  }\r\n\r\n  const changeIT = () => {\r\n    if (props.changeMod) {\r\n      props.upd('changed', !o.changed, props.index);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.upd('rotate', deg, props.index);\r\n\r\n  }, [deg, change])\r\n\r\n  return (\r\n    <div onClick={changeIT} className=\"file d-flex\" changed={o.changed ? 'changed' : ''}>\r\n      <div className={`image-wrapper ${deg ? 'v' : 'h'} ${o.cadr ? 'cadr-on' : ''}`} style={{\r\n        backgroundImage: `url(${window.URL.createObjectURL(n.file)})`\r\n      }}></div>\r\n      <div className=\"file-options\">\r\n        <div className=\"o format\"><LineIcon name=\"lni lni-ruler-alt\" />&nbsp;{o.format ? o.format : 'Нет'}</div>\r\n        <div className=\"o paper\"><LineIcon name=\"lni lni-write\" />&nbsp;{o.paper ? o.paper : 'Нет'}</div>\r\n        <div className=\"o crop\"><LineIcon name=\"lni lni-crop\" />&nbsp;{o.cadr ? o.cadr : 'Нет'}</div>\r\n        <div className=\"o count\"><LineIcon name=\"lni lni-shopping-basket\" />&nbsp;{o.count ? o.count : 'Нет'}</div>\r\n        <div className=\"delimeter\"></div>\r\n        <ItemOptions rotate={rotate} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ItemOptions(props) {\r\n  return (\r\n    <div className=\"item-option-list\">\r\n      <div onClick={props.rotate} className=\"item-option rotate\"><LineIcon name=\"lni lni-spinner-arrow\" /></div>\r\n      <div className=\"item-option close\"><LineIcon name=\"lni lni-close\" /></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageList;","import React, { useRef } from 'react';\r\n\r\nexport function GroupOptions(props) {\r\n  const form = useRef();\r\n\r\n  const submit = (e) => {\r\n    const form = e.target.closest('form');\r\n    const data = new FormData(form);\r\n    let formData = [];\r\n    for (let [name, value] of data) {\r\n      formData.push({ name: name, value: value });\r\n    }\r\n    props.massSetOptions(formData);\r\n  }\r\n\r\n  if (!props.mod) return null;\r\n\r\n  return (\r\n    <div className=\"file-options-form-wrapper\">\r\n      <div className=\"card border-secondary my-3 file-options-form\">\r\n        <form ref={form}>\r\n          <div className=\"card-header\">Настройки</div>\r\n          <div className=\"card-body\">\r\n\r\n            <ChangedFilesList files={props.files} />\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect1\" className=\"form-label mt-4\">Формат фото</label>\r\n              <select className=\"form-select\" name=\"format\" id=\"exampleSelect1\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"10x15\">10x15</option>\r\n                <option value=\"15x20\">15x20</option>\r\n                <option value=\"20x30\">20x30</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect2\" className=\"form-label mt-4\">Тип бумаги</label>\r\n              <select className=\"form-select\" name=\"paper\" id=\"exampleSelect2\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"матовая\">Матовая</option>\r\n                <option value=\"глянец\">Глянец</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <input className=\"form-check-input\" name=\"cadr\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Кадрирование</label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <label forhtml=\"exampleFormControlInput3\" className=\"form-label\">Количество</label>\r\n              <input type=\"number\" name=\"count\" className=\"form-control\" id=\"exampleFormControlInput3\" defaultValue=\"1\" />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div onClick={submit} className=\"btn btn-success\">Применить настройки</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChangedFilesList(props) {\r\n  let list = null;\r\n  if (props.files) {\r\n    list = props.files.map((n) => {\r\n      if (n.options.changed) {\r\n        return (\r\n          <div key={n.id} className=\"changed-files-list-item\"\r\n            style={{ backgroundImage: `url(${window.URL.createObjectURL(n.file)})` }}></div>\r\n        )\r\n      }\r\n      return false;\r\n    })\r\n\r\n    if (list.length > 0)\r\n      return <div className=\"changed-file-list\">{list}</div>;\r\n    else\r\n      return null;\r\n  }\r\n  else\r\n    return null;\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport ImageList from \"./list\";\r\nimport { GroupOptions } from \"./file_options_form\";\r\n\r\nexport function Main() {\r\n\r\n  const [files, addFiles] = useState([]);\r\n  const [changeMod, setChangingMod] = useState(false);\r\n  const [lastModifiedTime, setLastModifiedTime] = useState(new Date().getTime());\r\n\r\n  const addFilesFunc = (curFiles) => {\r\n    let newFiles = [];\r\n    if (curFiles.length > 0) {\r\n      for (let i = 0; i < curFiles.length; i++) {\r\n        newFiles.push(newImage(curFiles[i]));\r\n      }\r\n      addFiles(files.concat(newFiles));\r\n    }\r\n  }\r\n\r\n  const useChanging = () => {\r\n    if (changeMod) {\r\n      let donor = files;\r\n      donor.forEach((f) => {\r\n        f.options.changed = false;\r\n      })\r\n      addFiles(donor);\r\n    }\r\n    setChangingMod(!changeMod);\r\n  }\r\n\r\n  const updateFile = (option, newFileData, index) => {\r\n    let f = files;\r\n    f[index].options[option] = newFileData;\r\n    addFiles(f);\r\n    setLastModifiedTime(new Date().getTime());\r\n  }\r\n\r\n  const newImage = (file) => {\r\n    //const body = await this.getBase64(file);\r\n    return {\r\n      id: ID(file),\r\n      file: file,\r\n      body: null,\r\n      options: {\r\n        count: 1,\r\n        format: '10x15',\r\n        paper: 'матовая',\r\n        cadr: 0,\r\n        rotate: false,\r\n        changed: false,\r\n      }\r\n    }\r\n  }\r\n\r\n  const ID = (file) => {\r\n    return file.size + '_' + file.name;\r\n  }\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        let encoded = reader.result.toString().replace(/^data:(.*,)?/, '');\r\n        if ((encoded.length % 4) > 0) {\r\n          encoded += '='.repeat(4 - (encoded.length % 4));\r\n        }\r\n        resolve(encoded);\r\n      };\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const massSetOptions = (formData) => {\r\n    let donor = files;\r\n\r\n    donor.forEach((f) => {\r\n      if (f.options.changed) {\r\n        formData.forEach((el) => {\r\n          f.options[el.name] = el.value;\r\n        })\r\n        // Передавалась ли опция кадрирования\r\n        const isCadr = formData.findIndex((el) => { return (el.name === 'cadr') })\r\n        // Если не передавалась, снимаем опции у выбранных фото\r\n        if (isCadr < 0) {\r\n          f.options.cadr = false;\r\n        }\r\n      }\r\n    })\r\n\r\n    addFiles(donor);\r\n    setLastModifiedTime(new Date().getTime());\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <Group\r\n        addFiles={addFilesFunc}\r\n        setChangingMod={useChanging}\r\n        changeMod={changeMod}\r\n        upd={updateFile}\r\n        massSetOptions={massSetOptions}\r\n        files={files} />\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nfunction Group(props) {\r\n\r\n  const addFiles = (e) => {\r\n    const files = e.target.files;\r\n    props.addFiles(files);\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 col-lg-9\">\r\n        <div className=\"card border-secondary my-3\">\r\n          <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n            Ваши фотографии: {props.files.length}\r\n            <MassSetOptionsBtn modOn={props.changeMod} setChangingMod={props.setChangingMod} />\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"image-list\">\r\n              <label>\r\n                <input onChange={addFiles} className=\"form-control\" type=\"file\" multiple />\r\n              </label>\r\n              <ImageList {...props} />\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div className=\"btn btn-success\">Перейти к оформлению заказа</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-lg-3\">\r\n        <GroupOptions mod={true} massSetOptions={props.massSetOptions} {...props} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MassSetOptionsBtn(props) {\r\n  let btnText = 'Массовое выделение';\r\n  if (props.modOn) {\r\n    btnText = 'снять выделение';\r\n  }\r\n  return (\r\n    <div onClick={props.setChangingMod} className=\"btn btn-info text-white\">{btnText}</div>\r\n  )\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.scss';\nimport { Topbar } from \"./components/topbar\";\nimport { Main } from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Topbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}