{"version":3,"sources":["components/topbar.js","components/image.jsx","components/loader.jsx","components/image-v2.jsx","components/image-options.jsx","components/list.js","components/file_options_form.jsx","components/setup-image-popup.js","components/reducer.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Topbar","className","href","PureComponent","Preloader","version","id","xmlns","x","y","viewBox","enableBackground","width","height","fill","attributeType","attributeName","type","values","begin","dur","repeatCount","ImageV2","props","useContext","AppContext","state","dispatch","file","files","index","imgRef","useRef","useState","setCroppedImageUrl","unit","aspect","crop","setCrop","loading","onLoading","timer","setPreComliteTimer","onLoad","useCallback","e","img","target","current","options","decodeAspect","format","newcrop","makeClientCrop","invert","a","split","getCroppedImg","then","res","o","preCrop","payload","setTimeout","image","fileName","canvas","document","createElement","pixelRatio","window","devicePixelRatio","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","Promise","resolve","reject","toBlob","blob","previewUrl","URL","createObjectURL","useEffect","console","log","disabled","onChange","c","onComplete","t","preCompliteCrop","onDragStart","clearTimeout","renderComponent","is-loaded","src","body","onLoadStart","ref","alt","DisplayOptionList","nav","setNav","count","onClick","name","paper","cadr","list","formatList","map","f","i","ChangeOptionBtn","action","mod","push","papers","paperList","changeCount","n","k","Item","getAspect","undefined","changeMod","changed","ItemOptions","remove","rotate","ItemOptionListBtn","actionFunction","iconClass","itemClass","ImageList","length","change-mod","GroupOptions","form","afterAddFilesMod","ChangedFilesList","role","forhtml","required","value","defaultValue","closest","data","FormData","formData","style","backgroundImage","SetupImagePopup","onImageLoaded","imageRef","onCropComplete","onCropChange","percentCrop","setState","save","bind","this","cropped","croppedImageUrl","fileUrl","toDataURL","setSetupImageMod","fileIndex","upd","tabIndex","aria-labelledby","aria-hidden","closeModal","data-dismiss","aria-label","ruleOfThirds","reducer","donor","curFiles","newFiles","ID","concat","splice","forEach","el","findIndex","Error","size","createContext","Main","useReducer","setupImageMod","lastModifiedTime","Date","getTime","Provider","Group","MassSetOptionsBtn","modOn","setChangingMod","multiple","btnText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAEO,SAASA,IACd,OACE,qBAAKC,UAAU,iDAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,wB,+GCFYC,gB,MCFb,SAASC,IACZ,OACI,sBAAKH,UAAU,SAASI,QAAQ,MAAMC,GAAG,KAAKC,MAAM,6BAA6BC,EAAE,MAAMC,EAAE,MACvFC,QAAQ,YAAYC,iBAAiB,cADzC,UAEI,sBAAMH,EAAE,IAAIC,EAAE,IAAIG,MAAM,IAAIC,OAAO,KAAKC,KAAK,OAA7C,SACI,kCAAkBC,cAAc,MAC5BC,cAAc,YAAYC,KAAK,YAC/BC,OAAO,iBACPC,MAAM,IAAIC,IAAI,OAAOC,YAAY,iBAEzC,sBAAMb,EAAE,KAAKC,EAAE,IAAIG,MAAM,IAAIC,OAAO,KAAKC,KAAK,OAA9C,SACI,kCAAkBC,cAAc,MAC5BC,cAAc,YAAYC,KAAK,YAC/BC,OAAO,iBACPC,MAAM,OAAOC,IAAI,OAAOC,YAAY,iBAE5C,sBAAMb,EAAE,KAAKC,EAAE,IAAIG,MAAM,IAAIC,OAAO,KAAKC,KAAK,OAA9C,SACI,kCAAkBC,cAAc,MAC5BC,cAAc,YAAYC,KAAK,YAC/BC,OAAO,iBACPC,MAAM,OAAOC,IAAI,OAAOC,YAAY,oBCKzC,SAASC,EAAQC,GAAQ,IAAD,EAETC,qBAAWC,GAA/BC,EAF6B,EAE7BA,MAAOC,EAFsB,EAEtBA,SAETC,EAAOF,EAAMG,MAAMN,EAAMO,OACzBC,EAASC,iBAAO,MALe,EAMSC,mBAAS,MANlB,mBAMbC,GANa,aAObD,mBAAS,CAAEE,KAAM,KAAMvB,MAAO,EAAGC,OAAQ,EAAGuB,OAAQ,GAAK,GAAI5B,EAAG,EAAGC,EAAG,IAPzD,mBAO9B4B,EAP8B,KAOxBC,EAPwB,OAQRL,oBAAS,GARD,mBAQ9BM,EAR8B,KAQrBC,EARqB,OASDP,mBAAS,MATR,mBAS9BQ,EAT8B,KASvBC,EATuB,KAW/BC,EAASC,uBAAY,SAACC,GAC1B,IAAMC,EAAMD,EAAEE,OACdhB,EAAOiB,QAAUF,EAFe,MAGI,CAClCpB,EAAMG,MAAMN,EAAMO,OAAOmB,QAAQb,OACjCU,EAAIlC,MACJkC,EAAIjC,OACJwB,EAAK7B,EACL6B,EAAK5B,GALF2B,EAH2B,KAGnBxB,EAHmB,KAGZC,EAHY,KAGJL,EAHI,KAGDC,EAHC,MAa9B2B,EADExB,EAAQC,EACDqC,EAAatB,EAAKqB,QAAQE,QAAQ,GAGlCD,EAAatB,EAAKqB,QAAQE,SAIxB,GACXtC,EAASD,EAAQwB,EACjB5B,EAAI,EACJC,GAAKqC,EAAIjC,OAASA,GAAU,IAG5BD,EAAQC,EAASuB,EACjB5B,GAAKsC,EAAIlC,MAAQA,GAAS,EAC1BH,EAAI,GAGN,IAAI2C,EAAU,CACZjB,KAAM,KACNC,OAAQA,EACRxB,MAAOA,EACPC,OAAQA,EACRL,EAAGA,EACHC,EAAGA,GAKL,OAHA6B,EAAQc,GACRC,EAAeD,GACfZ,GAAU,IACH,IACN,IAEGU,EAAe,SAACd,GAA4B,IAApBkB,EAAmB,wDACzCC,EAAInB,EAAOoB,MAAM,KACvB,OAAIF,EACKC,EAAE,GAAKA,EAAE,GAGTA,EAAE,GAAKA,EAAE,IAIdF,EAAc,uCAAG,WAAOhB,GAAP,SAAAkB,EAAA,sDAEjBxB,GAAUM,EAAKzB,OAASyB,EAAKxB,SAC/B2B,GAAU,GAEciB,EACtB1B,EAAOiB,QACPX,EACA,gBAGcqB,MAAK,SAAAC,GACnB,IAAMC,EAAIhC,EAAKqB,QACfW,EAAEC,QAAUF,EACZC,EAAEvB,KAAOA,EACTV,EAAS,CACPV,KAAM,gBAAiB6C,QAAS,CAC9BhC,MAAOP,EAAMO,MACbmB,QAASW,QAKfG,YAAW,WACTvB,GAAU,GACVE,EAAmB,QAClB,OA1BgB,2CAAH,sDA+Bde,EAAgB,SAACO,EAAO3B,EAAM4B,GAClC,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAaC,OAAOC,iBACpBC,EAASR,EAAMS,aAAeT,EAAMpD,MACpC8D,EAASV,EAAMW,cAAgBX,EAAMnD,OACrC+D,EAAMV,EAAOW,WAAW,MAoB9B,OAlBAX,EAAOtD,MAAQyB,EAAKzB,MAAQyD,EAAaG,EACzCN,EAAOrD,OAASwB,EAAKxB,OAASwD,EAAaK,EAE3CE,EAAIE,aAAaT,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDO,EAAIG,sBAAwB,OAE5BH,EAAII,UACFhB,EACA3B,EAAK7B,EAAIgE,EACTnC,EAAK5B,EAAIiE,EACTrC,EAAKzB,MAAQ4D,EACbnC,EAAKxB,OAAS6D,EACd,EACA,EACArC,EAAKzB,MAAQ4D,EACbnC,EAAKxB,OAAS6D,GAGT,IAAIO,SAAQ,SAACC,EAASC,GAC3BjB,EAAOkB,QACL,SAACC,GACC,IAAMC,EAAahB,OAAOiB,IAAIC,gBAAgBH,GAC9CnD,EAAmBoD,EAAYJ,EAAQI,MAGzC,YACA,OA0GN,OAhEAG,qBAAU,WACRpD,EAAKD,OAASV,EAAMG,MAAMN,EAAMO,OAAOmB,QAAQb,OAC/CE,EAAQ,eAAKD,IACbqD,QAAQC,IAAI,KACX,CAACjE,EAAMG,MAAMN,EAAMO,OAAOmB,QAAQb,SAErCqD,qBAAU,WACR,IAAM3C,EAAMf,EAAOiB,QAEfF,EAAIlC,MAAQkC,EAAIjC,OAClBwB,EAAKD,OAASc,EAAaxB,EAAMG,MAAMN,EAAMO,OAAOmB,QAAQE,QAG5Dd,EAAKD,OAASc,EAAaxB,EAAMG,MAAMN,EAAMO,OAAOmB,QAAQE,QAAQ,GAGtEb,EAAQ,eAAKD,IACbqD,QAAQC,IAAI,KACX,CAACjE,EAAMG,MAAMN,EAAMO,OAAOmB,QAAQE,SAErCsC,qBAAU,WACR,GAAIpD,EAAKD,OAAS,EAAG,CACnB,IAAMU,EAAMf,EAAOiB,QADA,EAEiB,CAClCX,EAAKD,OACLU,EAAIlC,MACJkC,EAAIjC,OACJwB,EAAK7B,EACL6B,EAAK5B,GALF2B,EAFc,KAENxB,EAFM,KAECC,EAFD,KAESL,EAFT,KAEYC,EAFZ,KAWf2B,EAAS,GACXvB,EAASD,EAAQwB,EACjB5B,EAAI,GACJC,GAAKqC,EAAIjC,OAASA,GAAU,GACpB,IAEND,GADAC,EAASiC,EAAIjC,QACIuB,EACjB5B,GAAKsC,EAAIlC,MAAQA,GAAS,EAC1BH,EAAI,KAING,EAAQC,EAASuB,EACjB5B,GAAKsC,EAAIlC,MAAQA,GAAS,EAC1BH,EAAI,GAYN6B,EATc,CACZH,KAAM,KACNC,OAAQA,EACRxB,MAAOA,EACPC,OAAQA,EACRL,EAAGA,EACHC,EAAGA,IAILiF,QAAQC,IAAI,MAGb,CAACtD,EAAKD,OAAQL,EAAQR,EAAMO,QAG7B,qCACGS,GAAW,cAACnC,EAAD,IACZ,cAAC,IAAD,CACEiC,KAAMA,EACNuD,SAAUrD,EACVsD,SAAU,SAACC,GAAD,OAAOxD,EAAQwD,IACzBC,WAAY,SAACD,IArFK,SAACA,GACvB,IAAME,EAAIjC,YAAW,WACnBV,EAAeyC,KACd,KACHpD,EAAmBsD,GAiFMC,CAAgBH,IACrCI,YA/Ee,WACfzD,IACF0D,aAAa1D,GACbC,EAAmB,QA6EjB0D,gBA5GArE,EAEA,qCACE,qBAAK9B,UAAU,UAAUoG,YAAWtE,EAAOiB,QAAU,EAAI,EAAzD,SACE,cAAC5C,EAAD,MAEF,qBACEkG,IAAK1E,EAAK2E,KACVC,YAAa,kBAAMhE,GAAU,IAC7BG,OAAQA,EACR8D,IAAK1E,EACL9B,UAAU,mBACVyG,IAAI,QAKH,UChLN,SAASC,EAAkBpF,GAAQ,IAAD,EACXC,qBAAWC,GAA/BC,EAD+B,EAC/BA,MAAOC,EADwB,EACxBA,SADwB,EAEjBM,mBAAS,WAFQ,mBAEhC2E,EAFgC,KAE3BC,EAF2B,KAGjCjD,EAAIrC,EAAMqC,EAHuB,EAIV3B,mBAAS2B,EAAEkD,OAJD,6BAMvC,OAAQF,GACN,IAAK,UACH,OACE,qCACE,sBAAKG,QAAS,WAAQF,EAAO,YAAc5G,UAAU,2CAArD,UAAgG,cAAC,IAAD,CAAU+G,KAAK,sBAA/G,OAA4IpD,EAAET,OAASS,EAAET,OAAS,wBAClK,sBAAK4D,QAAS,WAAQF,EAAO,UAAY5G,UAAU,0CAAnD,UAA6F,cAAC,IAAD,CAAU+G,KAAK,kBAA5G,OAAqIpD,EAAEqD,MAAQrD,EAAEqD,MAAQ,wBACzJ,sBAAKF,QAAS,WAAQF,EAAO,SAAW5G,UAAU,yCAAlD,UAA2F,cAAC,IAAD,CAAU+G,KAAK,iBAA1G,OAAkIpD,EAAEsD,KAAOtD,EAAEsD,KAAO,wBACpJ,sBAAKH,QAAS,WAAQF,EAAO,UAAY5G,UAAU,0CAAnD,UAA6F,cAAC,IAAD,CAAU+G,KAAK,4BAA5G,OAA+IpD,EAAEkD,MAAQlD,EAAEkD,MAAQ,2BAGzK,IAAK,UACH,IAAIK,EAAOzF,EAAM0F,WAAWC,KAAI,SAACC,EAAGC,GAClC,OACE,cAACC,EAAD,CAAiBC,OAAO,eAAeC,IAAI,GAAGJ,EAAGA,EAAWV,IAAKC,EAAQ/E,MAAOP,EAAMO,OAA7ByF,MAQ7D,OALAJ,EAAKQ,KAAK,cAACH,EAAD,CACRF,EAAG,iCAEHV,IAAKC,EACL/E,MAAO,QAFF,YAGAqF,EAET,IAAK,QACH,IAAMS,EAASlG,EAAMmG,UAAUR,KAAI,SAACC,EAAGC,GACrC,OACE,cAACC,EAAD,CAAiBC,OAAO,cAAcC,IAAI,GAAGJ,EAAGA,EAAWV,IAAKC,EAAQ/E,MAAOP,EAAMO,OAA7ByF,MAS5D,OANAK,EAAOD,KAAK,cAACH,EAAD,CACVF,EAAG,iCAEHV,IAAKC,EACLa,IAAI,UACJ5F,MAAO,QAHF,YAIA8F,EAET,IAAK,OACH,OACE,qCACE,cAACJ,EAAD,CACEC,OAAO,aACPC,IAAI,GACJJ,EAAE,qBAEFV,IAAKC,EAAQ/E,MAAOP,EAAMO,OADtB,KAEN,cAAC0F,EAAD,CACEC,OAAO,aACPC,IAAI,GACJJ,EAAE,eAEFV,IAAKC,EAAQ/E,MAAOP,EAAMO,OADtB,KAEN,cAAC0F,EAAD,CACEF,EAAG,iCAEHV,IAAKC,EACLa,IAAI,UACJ5F,MAAO,QAHF,cAOb,IAAK,QACH,IAAMgG,EAAc,SAACC,GACnB,IAAIC,GAAK,EACLD,IAAGC,EAAI,GACXrG,EAAS,CACPV,KAAM,cACN6C,QAAS,CACPhC,MAAOP,EAAMO,MACbqB,QAASS,EAAEkD,MAAQkB,MAIzB,OACE,qCACE,qBAAK/H,UAAU,aAAf,SAA6B2D,EAAEkD,QAC/B,sBAAK7G,UAAU,iCAAf,UACE,qBAAK8G,QAAS,kBAAMe,KAAe7H,UAAU,cAA7C,SACE,cAAC,IAAD,CAAU+G,KAAK,YAEjB,qBAAKD,QAAS,kBAAMe,GAAY,IAAO7H,UAAU,cAAjD,SACE,cAAC,IAAD,CAAU+G,KAAK,cAInB,cAACQ,EAAD,CACEF,EAAG,iCAEHV,IAAKC,EACLa,IAAI,UACJ5F,MAAO,QAHF,cAOb,QACE,OAAO,MAIb,SAAS0F,EAAgBjG,GAAQ,IAAD,EACFC,qBAAWC,GAAxBE,GADe,EACtBD,MADsB,EACfC,UACf,OACE,wBACEoF,QAAS,WACa,SAAhBxF,EAAMO,OACRH,EAAS,CACPV,KAAMM,EAAMkG,OACZ3D,QAAS,CACPhC,MAAOP,EAAMO,MACbqB,OAAQ5B,EAAM+F,KAIpB/F,EAAMqF,IAAI,YAEZ3G,UAAS,0CAAqCsB,EAAMmG,KAbtD,SAa8DnG,EAAM+F,IC/FxE,SAASW,EAAK1G,GAAQ,IAAD,EAESC,qBAAWC,GAA/BC,EAFW,EAEXA,MAAOC,EAFI,EAEJA,SAGXiC,EADIlC,EAAMG,MAAMN,EAAMO,OAChBmB,QAYJiF,EAAY,SAAC/E,EAAQf,GACzB,IAAMmB,EAAIJ,EAAOK,MAAM,KACvB,OAAID,EAAE,GAAKA,EAAE,KAAOnB,EACXmB,EAAE,GAAKA,EAAE,GAGTA,EAAE,GAAKA,EAAE,IAgBpB,YAAU4E,IAANvE,EAAwB,KAG1B,sBAAKmD,QAfU,WACXrF,EAAM0G,YACRxE,EAAEyE,SAAWzE,EAAEyE,QACf1G,EAAS,CACPV,KAAM,gBAAiB6C,QAAS,CAC9BhC,MAAOP,EAAMO,MACbmB,QAASW,OASS3D,UAAU,cAAlC,UACE,cAACqB,EAAD,CAASQ,MAAOP,EAAMO,QACtB,sBAAK7B,UAAU,eAAf,UACE,cAAC0G,EAAD,CAAmB7E,MAAOP,EAAMO,MAAO8B,EAAGA,IAC1C,qBAAK3D,UAAU,cACf,cAACqI,EAAD,CACExG,MAAOP,EAAMO,MACbyG,OAAQ,kBAAM5G,EAAS,CAAEV,KAAM,SAAU6C,QAASvC,EAAMO,SACxD0G,OA3Ca,WACnB5E,EAAExB,OAAS8F,EAAUtE,EAAET,OAAQS,EAAExB,QACjCT,EAAS,CACPV,KAAM,gBAAiB6C,QAAS,CAC9BhC,MAAOP,EAAMO,MACbmB,QAASW,WAwCVA,EAAEyE,SAAW,qBAAKpI,UAAU,SAAf,+FAKpB,SAASqI,EAAY/G,GAAQ,IAAD,EAEEC,qBAAWC,GAAxBE,GAFW,EAElBD,MAFkB,EAEXC,UAEf,OACE,sBAAK1B,UAAU,mBAAf,UACE,cAACwI,EAAD,CACEC,eAAgBnH,EAAMiH,OACtBG,UAAU,wBACVC,UAAU,SACV9G,MAAOP,EAAMO,QAEf,cAAC2G,EAAD,CACEC,eAAgB,kBAAM/G,EAAS,CAC7BV,KAAM,SACN6C,QAASvC,EAAMO,SAEjB6G,UAAU,gBACVC,UAAU,QACV9G,MAAOP,EAAMO,WAMd,SAAS2G,EAAkBlH,GAAQ,IAAD,iBACeA,GAA9CmH,EAD+B,EAC/BA,eAAgBC,EADe,EACfA,UAAWC,EADI,EACJA,UACnC,OACE,qBAAK7B,QAAS2B,EAAgBzI,UAAS,sBAAiB2I,GAAxD,SAAqE,cAAC,IAAD,CAAU5B,KAAM2B,MAI1EE,MAjHR,WAAsB,IAAD,EAEErH,qBAAWC,GAA/BC,EAFkB,EAElBA,MAmBR,OArB0B,EAEXC,SAEF,WACX,IAAIwF,EAAOzF,EAAMG,MAAMwF,KAAI,SAACU,EAAGR,GAC7B,GAAIQ,EACF,OAAO,cAACE,EAAD,CAAiBnG,MAAOyF,GAAbQ,EAAEzH,OAMxB,OAJI6G,EAAK2B,QAAU,IACjB3B,EAAO,+CAIP,qBAAKlH,UAAU,YAAY8I,aAAYrH,EAAM0G,UAAY,EAAI,EAA7D,SACGjB,IAMAA,I,QCzBF,SAAS6B,EAAazH,GAAQ,IAAD,EAENC,qBAAWC,GAA/BC,EAF0B,EAE1BA,MAAOC,EAFmB,EAEnBA,SAETsH,EAAOjH,mBAeb,OAAKN,EAAM0G,WAAc1G,EAAMwH,iBAG7B,qBAAKjJ,UAAS,oCAA+ByB,EAAMwH,iBAAmB,QAAU,IAAhF,SACE,qBAAKjJ,UAAU,6DAAf,SACE,uBAAMwG,IAAKwC,EAAX,UACE,sBAAKhJ,UAAU,gEAAf,mEAEGyB,EAAMwH,kBACL,wBAAQjI,KAAK,SAAShB,UAAU,iBAEpC,sBAAKA,UAAU,YAAf,WAEIyB,EAAMwH,kBAAoB,cAACC,EAAD,IAE3BzH,EAAMwH,kBACL,qBAAKjJ,UAAU,sBAAsBmJ,KAAK,QAA1C,kVAKF,sBAAKnJ,UAAU,aAAf,UACE,uBAAOoJ,QAAQ,iBAAiBpJ,UAAU,kBAA1C,2EACA,yBAAQA,UAAU,cAAc+G,KAAK,SAAS1G,GAAG,iBAAiBgJ,UAAQ,EAA1E,UACE,wBAAQ1D,UAAQ,EAAhB,wDACA,wBAAQ2D,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,yBAIJ,sBAAKtJ,UAAU,aAAf,UACE,uBAAOoJ,QAAQ,iBAAiBpJ,UAAU,kBAA1C,qEACA,yBAAQA,UAAU,cAAc+G,KAAK,QAAQ1G,GAAG,iBAAiBgJ,UAAQ,EAAzE,UACE,wBAAQ1D,UAAQ,EAAhB,wDACA,wBAAQ2D,MAAM,6CAAd,wDACA,wBAAQA,MAAM,uCAAd,wDAIJ,qBAAKtJ,UAAU,kBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,uBAAOA,UAAU,mBAAmBoJ,QAAQ,yBAA5C,sFACA,uBAAOpJ,UAAU,mBAAmB+G,KAAK,OAAO/F,KAAK,WAAWmI,KAAK,SAAS9I,GAAG,gCAIrF,sBAAKL,UAAU,OAAf,UACE,uBAAOoJ,QAAQ,2BAA2BpJ,UAAU,aAApD,0EACA,uBAAOgB,KAAK,SAAS+F,KAAK,QAAQ/G,UAAU,eAAeK,GAAG,2BAA2BkJ,aAAa,YAI1G,qBAAKvJ,UAAU,yCAAf,SACE,qBAAK8G,QAnEA,SAAClE,GACd,IADoB,EACdoG,EAAOpG,EAAEE,OAAO0G,QAAQ,QACxBC,EAAO,IAAIC,SAASV,GACtBW,EAAW,GAHK,cAIMF,GAJN,IAIpB,2BAAgC,CAAC,IAAD,yBAAtB1C,EAAsB,KAAhBuC,EAAgB,KAC9BK,EAASjC,KAAK,CAAEX,KAAMA,EAAMuC,MAAOA,KALjB,8BAOpB5H,EAAS,CACPV,KAAM,sBACN6C,QAAS8F,KA0DmB3J,UAAU,kBAAhC,oIAtD8C,KA8D1D,SAASkJ,EAAiB5H,GAAQ,IAAD,EACHC,qBAAWC,GAA/BC,EADuB,EACvBA,MAEJyF,GAH2B,EAChBxF,SAEJ,MACX,OAAID,EAAMG,QACRsF,EAAOzF,EAAMG,MAAMwF,KAAI,SAACU,GACtB,SAAIA,GAAKA,EAAE9E,SAAW8E,EAAE9E,QAAQoF,UAE5B,qBAAgBpI,UAAU,0BACxB4J,MAAO,CAAEC,gBAAgB,OAAD,OAASxF,OAAOiB,IAAIC,gBAAgBuC,EAAEnG,MAAtC,OADhBmG,EAAEzH,QAOTwI,OAAS,EACT,qBAAK7I,UAAU,oBAAf,SAAoCkH,IAKtC,KCnGJ,IAAM4C,EAAb,kDACE,WAAYxI,GAAQ,IAAD,8BACjB,cAAMA,IAwBRyI,cAAgB,SAAChG,GACf,EAAKiG,SAAWjG,GA1BC,EA6BnBkG,eAAiB,SAAC7H,GAChB,EAAKgB,eAAehB,IA9BH,EAiCnB8H,aAAe,SAAC9H,EAAM+H,GAGpB,EAAKC,SAAS,CAAEhI,UAlChB,EAAKX,MAAQ,CACX4E,IAAK,GACLjE,KAAM,CACJF,KAAM,IACNvB,MAAO,MACPwB,OAAQ,EAAI,IAGhB,EAAKkI,KAAO,EAAKA,KAAKC,KAAV,gBAVK,EADrB,qDAcE,WACE,IAAMjD,EAAIkD,KAAKjJ,MAAMK,KACf0E,EAAMgB,EAAErE,QAAQwH,QAAUnD,EAAErE,QAAQwH,QAAUnG,OAAOiB,IAAIC,gBAAgBgF,KAAKjJ,MAAMK,KAAKA,MAC/F4I,KAAKH,SAAS,CAAE/D,IAAKA,MAjBzB,kCAoBE,WACE,IAAMgB,EAAIkD,KAAKjJ,MAAMK,KACf0E,EAAMgB,EAAErE,QAAQwH,QAAUnD,EAAErE,QAAQwH,QAAUnG,OAAOiB,IAAIC,gBAAgBgF,KAAKjJ,MAAMK,KAAKA,MAC/F4I,KAAKH,SAAS,CAAE/D,IAAKA,MAvBzB,mEAwCE,WAAqBjE,GAArB,eAAAkB,EAAA,2DACMiH,KAAKP,UAAY5H,EAAKzB,OAASyB,EAAKxB,QAD1C,gCAEkC2J,KAAK/G,cACjC+G,KAAKP,SACL5H,EACA,gBALN,OAEUqI,EAFV,OAOIF,KAAKH,SAAS,CAAEK,oBAPpB,gDAxCF,kFAmDE,SAAc1G,EAAO3B,EAAM4B,GAAW,IAAD,OAC7BC,EAASC,SAASC,cAAc,UAChCC,EAAaC,OAAOC,iBACpBC,EAASR,EAAMS,aAAeT,EAAMpD,MACpC8D,EAASV,EAAMW,cAAgBX,EAAMnD,OACrC+D,EAAMV,EAAOW,WAAW,MAoB9B,OAlBAX,EAAOtD,MAAQyB,EAAKzB,MAAQyD,EAAaG,EACzCN,EAAOrD,OAASwB,EAAKxB,OAASwD,EAAaK,EAE3CE,EAAIE,aAAaT,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDO,EAAIG,sBAAwB,OAE5BH,EAAII,UACFhB,EACA3B,EAAK7B,EAAIgE,EACTnC,EAAK5B,EAAIiE,EACTrC,EAAKzB,MAAQ4D,EACbnC,EAAKxB,OAAS6D,EACd,EACA,EACArC,EAAKzB,MAAQ4D,EACbnC,EAAKxB,OAAS6D,GAGT,IAAIO,SAAQ,SAACC,EAASC,GAC3B,EAAKwF,QAAUzG,EAAO0G,YACtB1F,EAAQ,EAAKyF,cA9EnB,mBAkFE,WACEH,KAAKjJ,MAAMsJ,iBAAiB,QAnFhC,kBAsFE,WAAQ,IACEH,EAAoBF,KAAK9I,MAAzBgJ,gBACAI,EAAcN,KAAKjJ,MAAnBuJ,UACRN,KAAKjJ,MAAMwJ,IAAI,UAAWL,EAAiBI,GAC3CN,KAAKH,SAAS,CAAE/D,IAAKoE,MA1FzB,oBA6FE,WAAU,IAAD,SACgCF,KAAK9I,MAApCW,EADD,EACCA,KAAMiE,EADP,EACOA,IAAKoE,EADZ,EACYA,gBADZ,EAEqBF,KAAKjJ,MAAzBuJ,EAFD,EAECA,UAAWlJ,EAFZ,EAEYA,KACnB,OACE,qBAAK3B,UAAU,kBAAkBK,GAAG,iBAAiB0K,SAAS,KAAK5B,KAAK,SAAS6B,kBAAgB,oBAAoBC,cAAY,QAAjI,SACE,qBAAKjL,UAAU,eAAemJ,KAAK,WAAnC,SACE,sBAAKnJ,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcK,GAAG,uBAA/B,+GACA,wBAAQyG,QAASyD,KAAKjJ,MAAM4J,WAAYlK,KAAK,SAAShB,UAAU,QAAQmL,eAAa,QAAQC,aAAW,QAAxG,SACE,sBAAMH,cAAY,OAAlB,uBAGJ,qBAAKjL,UAAU,aAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,qBAAKA,UAAU,qBAAf,SACGqG,GACC,qCAEE,sBAAKrG,UAAU,mBAAf,UACE,cAACwI,EAAD,CACEC,eAAgB,kBAAM,EAAKnH,MAAMwJ,IAAI,UAAWnJ,EAAKqB,QAAQuF,OAAQsC,IACrEnC,UAAU,oBACVC,UAAU,SACV9G,MAAO0I,KAAKjJ,MAAMuJ,YAEpB,cAACrC,EAAD,CACEC,eAAgB,kBAAM,EAAKnH,MAAMwJ,IAAI,UAAWnJ,EAAKqB,QAAQuF,OAAQsC,IACrEnC,UAAU,wBACVC,UAAU,SACV9G,MAAO0I,KAAKjJ,MAAMuJ,eAGtB,cAAC,IAAD,CACExE,IAAKA,EACLjE,KAAMA,EACNiJ,cAAY,EACZtB,cAAeQ,KAAKR,cACpBjE,WAAYyE,KAAKN,eACjBrE,SAAU2E,KAAKL,sBAOzB,qBAAKlK,UAAU,kCAAf,SACGqG,GACC,sBAAKrG,UAAU,uBAAf,UACE,+KACA,qBAAKqG,IAAKoE,EAAiBhE,IAAI,iBAQ3C,sBAAKzG,UAAU,eAAf,UACE,wBAAQ8G,QAASyD,KAAKjJ,MAAM4J,WAAYlK,KAAK,SAAShB,UAAU,oBAAoBmL,eAAa,QAAjG,wDACA,wBAAQrE,QAASyD,KAAKF,KAAMrJ,KAAK,SAAShB,UAAU,kBAApD,4EA3Jd,GAAqCE,iBCN9B,SAASoL,EAAQ7J,EAAO+F,GAC7B,IA+GgB7F,EA/GV4J,EAAQ9J,EAAMG,MACpB,OAAQ4F,EAAOxG,MAEb,IAAK,MAGH,IAFA,IAAMwK,EAAWhE,EAAO3D,QACpB4H,EAAW,GACNnE,EAAI,EAAGA,EAAIkE,EAAS3C,OAAQvB,IAAK,CACxC,IAAIzE,EAyGH,CACLxC,GAAIqL,EAFU/J,EAxGS6J,EAASlE,IA2GhC3F,KAAMA,EACN2E,KAAMhB,IAAIC,gBAAgB5D,GAC1BqB,QAAS,CACP6D,MAAO,EACP3D,OAAQ,QACR8D,MAAO,6CACPC,KAAM,qBACNsB,QAAQ,EACRH,SAAS,EACToC,QAAS,GACTrI,OAAQ,GAAK,KApHXsJ,EAAS/D,KAAK7E,GAEhB,OAAO,2BACFpB,GADL,IACYG,MAAO2J,EAAMI,OAAOF,GAAWxC,kBAAkB,IAG/D,IAAK,SAEH,OADAsC,EAAMK,OAAOpE,EAAO3D,QAAS,EAAG,MACzB,2BACFpC,GADL,IACYG,MAAO2J,IAGrB,IAAK,gBAEH,OADAA,EAAM/D,EAAO3D,QAAQhC,OAAOmB,QAAUwE,EAAO3D,QAAQb,QAC9C,2BACFvB,GADL,IACYG,MAAO2J,IAGnB,IAAK,SACH,IAAMhD,EAASgD,EAAM/D,EAAO3D,SAASb,QAAQuF,OAE7C,OADAgD,EAAM/D,EAAO3D,SAASb,QAAQuF,QAAUA,EACjC,2BACF9G,GADL,IACYG,MAAO2J,IAGnB,IAAK,eAEH,OADAA,EAAM/D,EAAO3D,QAAQhC,OAAOmB,QAAQE,OAASsE,EAAO3D,QAAQX,OACrD,2BACFzB,GADL,IACYG,MAAO2J,IAGnB,IAAK,cAEH,OADAA,EAAM/D,EAAO3D,QAAQhC,OAAOmB,QAAQgE,MAAQQ,EAAO3D,QAAQX,OACpD,2BACFzB,GADL,IAEEG,MAAO2J,IAGT,IAAK,aAEH,OADAA,EAAM/D,EAAO3D,QAAQhC,OAAOmB,QAAQiE,KAAOO,EAAO3D,QAAQX,OACnD,2BACFzB,GADL,IAEEG,MAAO2J,IAGT,IAAK,cAEH,OADAA,EAAM/D,EAAO3D,QAAQhC,OAAOmB,QAAQ6D,MAAQW,EAAO3D,QAAQX,OACpD,2BACFzB,GADL,IAEEG,MAAO2J,IAGT,IAAK,OAEH,OADAA,EAAM/D,EAAO3D,SAASb,QAAQwH,QAAQ9C,KAAK6D,EAAM/D,EAAO3D,SAASb,QAAQY,SAClE,2BACFnC,GADL,IACYG,MAAO2J,IAGnB,IAAK,iBACH,IAAIlE,EAAI5F,EAAMG,MAOd,OANIH,EAAM0G,WACRd,EAAEwE,SAAQ,SAACC,GACLA,IACFA,EAAG9I,QAAQoF,SAAU,MAGpB,2BACF3G,GADL,IACYG,MAAOyF,EAAGc,WAAY1G,EAAM0G,YAG1C,IAAK,sBACH,IAAMwB,EAAWnC,EAAO3D,QAuBxB,OAtBApC,EAAMG,MAAMiK,SAAQ,SAACxE,GACfA,GAAKA,EAAErE,QAAQoF,UACjBuB,EAASkC,SAAQ,SAACC,GAChBzE,EAAErE,QAAQ8I,EAAG/E,MAAQ+E,EAAGxC,SAGXK,EAASoC,WAAU,SAACD,GACjC,MAAoB,SAAZA,EAAG/E,QAGA,IACXM,EAAErE,QAAQiE,MAAO,GAGfxF,EAAMwH,mBACR5B,EAAErE,QAAQoF,SAAU,OAItB3G,EAAMwH,mBACRxH,EAAMwH,kBAAoBxH,EAAMwH,kBAE3B,2BACFxH,GADL,IACYG,MAAOH,EAAMG,QAGzB,QACE,MAAM,IAAIoK,OAsBhC,SAASN,EAAG/J,GACV,OAAOA,EAAKsK,KAAO,IAAMtK,EAAKoF,KC7HzB,IAAIvF,EAAa0K,wBAAc,MAE/B,SAASC,IAAQ,IAAD,EAEKC,qBAAWd,EAAS,CAC5C1J,MAAO,GACPuF,WAAY,CAAC,QAAS,QAAS,SAC/BS,UAAW,CAAC,uCAAU,8CACtBO,WAAW,EACXkE,cAAe,KACfC,kBAAkB,IAAIC,MAAOC,UAC7BvD,kBAAkB,IATC,mBAEdxH,EAFc,KAEPC,EAFO,KAYrB,OACE,eAACF,EAAWiL,SAAZ,CAAqBnD,MAAO,CAAE7H,QAAOC,YAArC,UACE,cAACgL,EAAD,IAE0B,kBAAlBL,eACN,cAAC,EAAD,CACExB,UAAWpJ,EAAM4K,mBAO3B,SAASK,EAAMpL,GAAQ,IAAD,EAEQC,qBAAWC,GAA/BC,EAFY,EAEZA,MAAOC,EAFK,EAELA,SAMf,OACE,sBAAK1B,UAAU,MAAf,UACE,qBAAKA,UAAS,wBAAmByB,EAAM0G,UAAY,GAAK,IAAxD,SACE,sBAAKnI,UAAU,6BAAf,UACE,sBAAKA,UAAU,gEAAf,oGACoByB,EAAMG,MAAMiH,OAC9B,cAAC8D,EAAD,CACEC,MAAOnL,EAAM0G,UACb0E,eAAgBpL,EAAMoL,oBAE1B,qBAAK7M,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,kCACE,6GACA,uBAAO4F,SAlBJ,SAAChD,GAChBlB,EAAS,CAAEV,KAAM,MAAO6C,QAASjB,EAAEE,OAAOlB,SAiBH5B,UAAU,eAAegB,KAAK,OAAO8L,UAAQ,OAE1E,cAAC,EAAD,SAGJ,qBAAK9M,UAAU,yCAAf,SACE,qBAAKA,UAAU,2BAAf,wKAIN,qBAAKA,UAAU,kBAAf,SACE,cAAC+I,EAAD,SAMR,SAAS4D,EAAkBrL,GAAQ,IAAD,EAEJC,qBAAWC,GAA/BC,EAFwB,EAExBA,MAAOC,EAFiB,EAEjBA,SAEXqL,EAAU,oGACVtL,EAAM0G,YACR4E,EAAU,oDASZ,OACE,qBAAKjG,QAPQ,WACbpF,EAAS,CACPV,KAAM,oBAKchB,UAAU,0BAAhC,SAA2D+M,ICpEhDC,MATf,WACE,OACE,sBAAKhN,UAAU,YAAf,UACE,cAACD,EAAD,IACA,cAACoM,EAAD,QCHSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1J,MAAK,YAAkD,IAA/C2J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzJ,SAAS0J,eAAe,SAM1BX,M","file":"static/js/main.87e8342d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Topbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React, { PureComponent } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport { AppContext } from \"./main\";\r\n\r\nclass Image extends PureComponent {\r\n\r\n  state = {\r\n    src: '',\r\n    image: {\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    crop: {\r\n      unit: '%',\r\n      width: '100',\r\n      aspect: 10 / 15,\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n  save = this.save.bind(this);\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped.length > 0 ? f.options.cropped[f.options.cropped.length - 1] : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.createCROP();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  createCROP() {\r\n    let [aspect, width, height] = [\r\n      this.props.file.options.aspect,\r\n      this.state.image.width,\r\n      this.state.image.height,\r\n    ];\r\n    let crop = this.state.crop;\r\n    if (aspect !== undefined && aspect !== crop.aspect) {\r\n      if (aspect > 1) {\r\n        height = width / aspect;\r\n      }\r\n      else {\r\n        width = height * aspect;\r\n      }\r\n\r\n      crop = {\r\n        unit: 'px',\r\n        aspect: aspect,\r\n        width: width,\r\n        height: height,\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      this.setState({ crop });\r\n    }\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n    // this.(image);\r\n    this.setState({\r\n      image: { width: image.width, height: image.height }\r\n    })\r\n    this.createCROP();\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop }); // в процентах\r\n    this.setState({ crop }); // в пикселях\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n      const o = this.props.file.options;\r\n      o.preCrop = croppedImageUrl;\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async imageTo64(image) {\r\n    if (image) {\r\n      let o = this.props.s.files[this.props.index].options;\r\n      let cropped = await this.getImage(image);\r\n      o.cropped.push(cropped);\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n      this.setState({ src: cropped })\r\n    }\r\n  }\r\n\r\n  getImage(image) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth;\r\n    const scaleY = image.naturalHeight;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = pixelRatio * scaleX;\r\n    canvas.height = pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      0,\r\n      0,\r\n      scaleX,\r\n      scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toBlob();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toBlob(() => { }, 'image/jpg', 1);\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    const src = file.options.cropped.length > 0 ? file.options.cropped[file.options.cropped.length - 1] : this.state.src;\r\n    return (\r\n      <>\r\n        <ReactCrop\r\n          key={this.props.aspect}\r\n          src={src}\r\n          crop={crop}\r\n          rotate={0}\r\n          ruleOfThirds\r\n          onImageLoaded={this.onImageLoaded}\r\n          onComplete={this.onCropComplete}\r\n          onChange={this.onCropChange}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Image;","import React from \"react\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <svg className=\"loader\" version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n            viewBox=\"0 0 30 30\" enableBackground=\"new 0 0 0 0\">\r\n            <rect x=\"0\" y=\"0\" width=\"4\" height=\"10\" fill=\"#fff\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n            <rect x=\"10\" y=\"0\" width=\"4\" height=\"10\" fill=\"#f0a\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0.2s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n            <rect x=\"20\" y=\"0\" width=\"4\" height=\"10\" fill=\"#fff\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0.4s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n        </svg>\r\n    )\r\n}","import React, { useState, useCallback, useRef, useEffect, useContext } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { AppContext } from './main';\r\nimport { Preloader } from './loader';\r\n\r\nfunction generateDownload(canvas, crop) {\r\n  if (!crop || !canvas) {\r\n    return;\r\n  }\r\n\r\n  canvas.toBlob(\r\n    (blob) => {\r\n      const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n      const anchor = document.createElement('a');\r\n      anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      anchor.click();\r\n\r\n      window.URL.revokeObjectURL(previewUrl);\r\n    },\r\n    'image/png',\r\n    1\r\n  );\r\n}\r\n\r\nexport default function ImageV2(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const file = state.files[props.index];\r\n  const imgRef = useRef(null);\r\n  const [croppedImageUrl, setCroppedImageUrl] = useState(null);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 0, height: 0, aspect: 10 / 15, x: 0, y: 0 });\r\n  const [loading, onLoading] = useState(true);\r\n  const [timer, setPreComliteTimer] = useState(null);\r\n\r\n  const onLoad = useCallback((e) => {\r\n    const img = e.target;\r\n    imgRef.current = img;\r\n    let [aspect, width, height, x, y] = [\r\n      state.files[props.index].options.aspect,\r\n      img.width,\r\n      img.height,\r\n      crop.x,\r\n      crop.y\r\n    ];\r\n\r\n    // Определяем ориентацию изображения\r\n    if (width > height) {\r\n      aspect = decodeAspect(file.options.format, true)\r\n    }\r\n    else {\r\n      aspect = decodeAspect(file.options.format)\r\n    }\r\n\r\n    // Считаем размеры обрезки\r\n    if (aspect > 1) {\r\n      height = width / aspect;\r\n      x = 0;\r\n      y = (img.height - height) / 2;\r\n    }\r\n    else {\r\n      width = height * aspect;\r\n      x = (img.width - width) / 2;\r\n      y = 0;\r\n    }\r\n\r\n    let newcrop = {\r\n      unit: 'px',\r\n      aspect: aspect,\r\n      width: width,\r\n      height: height,\r\n      x: x,\r\n      y: y,\r\n    };\r\n    setCrop(newcrop);\r\n    makeClientCrop(newcrop);\r\n    onLoading(false);\r\n    return false;\r\n  }, []);\r\n\r\n  const decodeAspect = (aspect, invert = false) => {\r\n    const a = aspect.split('x');\r\n    if (invert) {\r\n      return a[1] / a[0];\r\n    }\r\n    else {\r\n      return a[0] / a[1];\r\n    }\r\n  }\r\n\r\n  const makeClientCrop = async (crop) => {\r\n\r\n    if (imgRef && crop.width && crop.height) {\r\n      onLoading(true);\r\n\r\n      const croppedImageUrl = getCroppedImg(\r\n        imgRef.current,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n\r\n      croppedImageUrl.then(res => {\r\n        const o = file.options;\r\n        o.preCrop = res;\r\n        o.crop = crop;\r\n        dispatch({\r\n          type: \"updateOptions\", payload: {\r\n            index: props.index,\r\n            options: o\r\n          }\r\n        });\r\n      })\r\n\r\n      setTimeout(() => {\r\n        onLoading(false);\r\n        setPreComliteTimer(null);\r\n      }, 1500)\r\n\r\n    }\r\n  }\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(\r\n        (blob) => {\r\n          const previewUrl = window.URL.createObjectURL(blob);\r\n          setCroppedImageUrl(previewUrl, resolve(previewUrl));\r\n          // window.URL.revokeObjectURL(previewUrl);\r\n        },\r\n        'image/jpg',\r\n        1\r\n      );\r\n\r\n    });\r\n  }\r\n\r\n  const ImageComponent = () => {\r\n    if (imgRef) {\r\n      return (\r\n        <>\r\n          <div className=\"overlay\" is-loaded={imgRef.current ? 1 : 0}>\r\n            <Preloader />\r\n          </div>\r\n          <img\r\n            src={file.body}\r\n            onLoadStart={() => onLoading(true)}\r\n            onLoad={onLoad}\r\n            ref={imgRef}\r\n            className=\"ReactCrop__image\"\r\n            alt=\"\" />\r\n        </>\r\n      )\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const preCompliteCrop = (c) => {\r\n    const t = setTimeout(() => {\r\n      makeClientCrop(c);\r\n    }, 3000);\r\n    setPreComliteTimer(t);\r\n  }\r\n\r\n  const disableTimer = () => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      setPreComliteTimer(null);\r\n    }\r\n  }\r\n\r\n  useEffect(() => { // 1\r\n    crop.aspect = state.files[props.index].options.aspect;\r\n    setCrop({ ...crop });\r\n    console.log(1);\r\n  }, [state.files[props.index].options.aspect])\r\n\r\n  useEffect(() => { // 2\r\n    const img = imgRef.current;\r\n\r\n    if (img.width > img.height) {\r\n      crop.aspect = decodeAspect(state.files[props.index].options.format);\r\n    }\r\n    else {\r\n      crop.aspect = decodeAspect(state.files[props.index].options.format, true);\r\n    }\r\n\r\n    setCrop({ ...crop });\r\n    console.log(2);\r\n  }, [state.files[props.index].options.format])\r\n\r\n  useEffect(() => { // 3\r\n    if (crop.aspect > 0) {\r\n      const img = imgRef.current;\r\n      let [aspect, width, height, x, y] = [\r\n        crop.aspect,\r\n        img.width,\r\n        img.height,\r\n        crop.x,\r\n        crop.y\r\n      ];\r\n\r\n      // Считаем размеры обрезки\r\n      if (aspect > 1) {\r\n        height = width / aspect;\r\n        x = 0;\r\n        y = (img.height - height) / 2;\r\n        if (y < 0) {\r\n          height = img.height;\r\n          width = height * aspect;\r\n          x = (img.width - width) / 2\r\n          y = 0;\r\n        }\r\n      }\r\n      else {\r\n        width = height * aspect;\r\n        x = (img.width - width) / 2;\r\n        y = 0;\r\n      }\r\n\r\n      let newcrop = {\r\n        unit: 'px',\r\n        aspect: aspect,\r\n        width: width,\r\n        height: height,\r\n        x: x,\r\n        y: y,\r\n      };\r\n\r\n      setCrop(newcrop);\r\n      console.log(3);\r\n    }\r\n\r\n  }, [crop.aspect, imgRef, props.index]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Preloader />}\r\n      <ReactCrop\r\n        crop={crop}\r\n        disabled={loading}\r\n        onChange={(c) => setCrop(c)}\r\n        onComplete={(c) => { preCompliteCrop(c) }}\r\n        onDragStart={disableTimer}\r\n        renderComponent={ImageComponent()}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useContext, useState } from 'react';\r\nimport { AppContext } from './main'\r\nimport LineIcon from \"react-lineicons\";\r\nimport { ItemOptionListBtn } from './list';\r\n\r\nexport function DisplayOptionList(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [nav, setNav] = useState('default');\r\n  const o = props.o;\r\n  const [count, changeCount] = useState(o.count);\r\n\r\n  switch (nav) {\r\n    case \"default\":\r\n      return (\r\n        <>\r\n          <div onClick={() => { setNav(\"formats\") }} className=\"item-option item-option--linear o format\"><LineIcon name=\"lni lni-ruler-alt\" />&nbsp;{o.format ? o.format : 'Нет'}</div>\r\n          <div onClick={() => { setNav(\"paper\") }} className=\"item-option item-option--linear o paper\"><LineIcon name=\"lni lni-write\" />&nbsp;{o.paper ? o.paper : 'Нет'}</div>\r\n          <div onClick={() => { setNav(\"crop\") }} className=\"item-option item-option--linear o crop\"><LineIcon name=\"lni lni-crop\" />&nbsp;{o.cadr ? o.cadr : 'Нет'}</div>\r\n          <div onClick={() => { setNav(\"count\") }} className=\"item-option item-option--linear o count\"><LineIcon name=\"lni lni-shopping-basket\" />&nbsp;{o.count ? o.count : 'Нет'}</div>\r\n        </>\r\n      )\r\n    case \"formats\":\r\n      let list = state.formatList.map((f, i) => {\r\n        return (\r\n          <ChangeOptionBtn action=\"changeFormat\" mod=\"\" f={f} key={i} nav={setNav} index={props.index} />\r\n        )\r\n      })\r\n      list.push(<ChangeOptionBtn\r\n        f={'назад'}\r\n        key={'default'}\r\n        nav={setNav}\r\n        index={'back'} />);\r\n      return list;\r\n\r\n    case \"paper\":\r\n      const papers = state.paperList.map((f, i) => {\r\n        return (\r\n          <ChangeOptionBtn action=\"changePaper\" mod=\"\" f={f} key={i} nav={setNav} index={props.index} />\r\n        )\r\n      })\r\n      papers.push(<ChangeOptionBtn\r\n        f={'назад'}\r\n        key={'default'}\r\n        nav={setNav}\r\n        mod=\"to-back\"\r\n        index={'back'} />);\r\n      return papers;\r\n\r\n    case \"crop\":\r\n      return (\r\n        <>\r\n          <ChangeOptionBtn\r\n            action=\"changeCrop\"\r\n            mod=\"\"\r\n            f=\"нет\"\r\n            key=\"n\"\r\n            nav={setNav} index={props.index} />\r\n          <ChangeOptionBtn\r\n            action=\"changeCrop\"\r\n            mod=\"\"\r\n            f=\"да\"\r\n            key=\"y\"\r\n            nav={setNav} index={props.index} />\r\n          <ChangeOptionBtn\r\n            f={'назад'}\r\n            key={'default'}\r\n            nav={setNav}\r\n            mod=\"to-back\"\r\n            index={'back'} />\r\n        </>\r\n      )\r\n\r\n    case \"count\":\r\n      const changeCount = (n) => {\r\n        let k = -1;\r\n        if (n) k = 1;\r\n        dispatch({\r\n          type: 'changeCount',\r\n          payload: {\r\n            index: props.index,\r\n            format: +o.count + k\r\n          }\r\n        })\r\n      }\r\n      return (\r\n        <>\r\n          <div className=\"item-count\">{o.count}</div>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div onClick={() => changeCount()} className=\"item-option\">\r\n              <LineIcon name=\"minus\" />\r\n            </div>\r\n            <div onClick={() => changeCount(true)} className=\"item-option\">\r\n              <LineIcon name=\"plus\" />\r\n            </div>\r\n          </div>\r\n\r\n          <ChangeOptionBtn\r\n            f={'назад'}\r\n            key={'default'}\r\n            nav={setNav}\r\n            mod=\"to-back\"\r\n            index={'back'} />\r\n        </>\r\n      )\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction ChangeOptionBtn(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        if (props.index !== 'back') {\r\n          dispatch({\r\n            type: props.action,\r\n            payload: {\r\n              index: props.index,\r\n              format: props.f\r\n            }\r\n          })\r\n        }\r\n        props.nav(\"default\");\r\n      }}\r\n      className={`item-option item-option--linear ${props.mod}`}>{props.f}</button>\r\n  )\r\n}","import React, { useEffect, useState, PureComponent, useContext } from \"react\";\r\nimport LineIcon from \"react-lineicons\";\r\nimport Image from \"../components/image\";\r\nimport ImageV2 from \"./image-v2\";\r\nimport { AppContext } from \"./main\";\r\nimport { DisplayOptionList } from \"./image-options\";\r\n\r\nexport function ImageList() {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const list = () => {\r\n    let list = state.files.map((n, i) => {\r\n      if (n)\r\n        return <Item key={n.id} index={i} />\r\n    })\r\n    if (list.length <= 0) {\r\n      list = 'нет фото';\r\n    }\r\n\r\n    return (\r\n      <div className=\"list mt-3\" change-mod={state.changeMod ? 1 : 0}>\r\n        {list}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return list();\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let n = state.files[props.index];\r\n  let o = n.options;\r\n\r\n  const rotateAspect = () => {\r\n    o.aspect = getAspect(o.format, o.aspect);\r\n    dispatch({\r\n      type: \"updateOptions\", payload: {\r\n        index: props.index,\r\n        options: o\r\n      }\r\n    });\r\n  }\r\n\r\n  const getAspect = (format, aspect) => {\r\n    const a = format.split('x');\r\n    if (a[1] / a[0] === aspect) {\r\n      return a[0] / a[1];\r\n    }\r\n    else {\r\n      return a[1] / a[0];\r\n    }\r\n  }\r\n\r\n  const changeIT = () => {\r\n    if (state.changeMod) {\r\n      o.changed = !o.changed;\r\n      dispatch({\r\n        type: \"updateOptions\", payload: {\r\n          index: props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (o === undefined) return null;\r\n\r\n  return (\r\n    <div onClick={changeIT} className=\"file d-flex\">\r\n      <ImageV2 index={props.index} />\r\n      <div className=\"file-options\">\r\n        <DisplayOptionList index={props.index} o={o} />\r\n        <div className=\"delimeter\"></div>\r\n        <ItemOptions\r\n          index={props.index}\r\n          remove={() => dispatch({ type: \"remove\", payload: props.index })}\r\n          rotate={rotateAspect} />\r\n      </div>\r\n      {o.changed && <div className=\"redact\">Редактируется</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ItemOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"item-option-list\">\r\n      <ItemOptionListBtn\r\n        actionFunction={props.rotate}\r\n        iconClass=\"lni lni-spinner-arrow\"\r\n        itemClass=\"rotate\"\r\n        index={props.index}\r\n      />\r\n      <ItemOptionListBtn\r\n        actionFunction={() => dispatch({\r\n          type: \"remove\",\r\n          payload: props.index,\r\n        })}\r\n        iconClass=\"lni lni-close\"\r\n        itemClass=\"close\"\r\n        index={props.index}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ItemOptionListBtn(props) {\r\n  const { actionFunction, iconClass, itemClass } = { ...props }\r\n  return (\r\n    <div onClick={actionFunction} className={`item-option ${itemClass}`}><LineIcon name={iconClass} /></div>\r\n  )\r\n}\r\n\r\nexport default ImageList;","import React, { useContext, useRef } from 'react';\r\nimport { AppContext } from './main';\r\n\r\nexport function GroupOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const form = useRef();\r\n\r\n  const submit = (e) => {\r\n    const form = e.target.closest('form');\r\n    const data = new FormData(form);\r\n    let formData = [];\r\n    for (let [name, value] of data) {\r\n      formData.push({ name: name, value: value });\r\n    }\r\n    dispatch({\r\n      type: 'massSetFilesOptions',\r\n      payload: formData\r\n    });\r\n  }\r\n\r\n  if (!state.changeMod && !state.afterAddFilesMod) return null;\r\n\r\n  return (\r\n    <div className={`file-options-form-wrapper ${state.afterAddFilesMod ? 'popup' : ''}`}>\r\n      <div className=\"card text-dark bg-light border-secondary file-options-form\">\r\n        <form ref={form}>\r\n          <div className=\"card-header d-flex align-items-center justify-content-between\">\r\n            Настройки\r\n            {state.afterAddFilesMod &&\r\n              <button type=\"button\" className=\"btn-close\"></button>}\r\n          </div>\r\n          <div className=\"card-body\">\r\n\r\n            {!state.afterAddFilesMod && <ChangedFilesList />}\r\n\r\n            {state.afterAddFilesMod &&\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                Пока Ваши фото загружаются, Вы можете их настроить в форме ниже.\r\n              </div>\r\n            }\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect1\" className=\"form-label mt-4\">Формат фото</label>\r\n              <select className=\"form-select\" name=\"format\" id=\"exampleSelect1\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"10x15\">10x15</option>\r\n                <option value=\"15x20\">15x20</option>\r\n                <option value=\"20x30\">20x30</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect2\" className=\"form-label mt-4\">Тип бумаги</label>\r\n              <select className=\"form-select\" name=\"paper\" id=\"exampleSelect2\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"матовая\">Матовая</option>\r\n                <option value=\"глянец\">Глянец</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Кадрирование</label>\r\n                <input className=\"form-check-input\" name=\"cadr\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <label forhtml=\"exampleFormControlInput3\" className=\"form-label\">Количество</label>\r\n              <input type=\"number\" name=\"count\" className=\"form-control\" id=\"exampleFormControlInput3\" defaultValue=\"1\" />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div onClick={submit} className=\"btn btn-success\">Применить настройки</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChangedFilesList(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let list = null;\r\n  if (state.files) {\r\n    list = state.files.map((n) => {\r\n      if (n && n.options && n.options.changed) {\r\n        return (\r\n          <div key={n.id} className=\"changed-files-list-item\"\r\n            style={{ backgroundImage: `url(${window.URL.createObjectURL(n.file)})` }}></div>\r\n        )\r\n      }\r\n      return false;\r\n    })\r\n\r\n    if (list.length > 0)\r\n      return <div className=\"changed-file-list\">{list}</div>;\r\n    else\r\n      return null;\r\n  }\r\n  else\r\n    return null;\r\n\r\n}","import React, { useState, PureComponent } from \"react\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { ItemOptionListBtn } from \"./list\";\r\n\r\n\r\nexport class SetupImagePopup extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      src: '',\r\n      crop: {\r\n        unit: '%',\r\n        width: '100',\r\n        aspect: 2 / 3\r\n      }\r\n    }\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toDataURL();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.props.setSetupImageMod(null);\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, src, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    return (\r\n      <div className=\"modal fade show\" id=\"file-direction\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"file-direction-label\">Управление файлом</h5>\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 react-crop-wrapper-row\">\r\n                    <div className=\"react-crop-wrapper\">\r\n                      {src && (\r\n                        <>\r\n                          {/* Скрыто стилями */}\r\n                          <div className=\"item-option-list\">\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-ruler-alt\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-spinner-arrow\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                          </div>\r\n                          <ReactCrop\r\n                            src={src}\r\n                            crop={crop}\r\n                            ruleOfThirds\r\n                            onImageLoaded={this.onImageLoaded}\r\n                            onComplete={this.onCropComplete}\r\n                            onChange={this.onCropChange}\r\n                          />\r\n\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4 react-crop-options-bar\">\r\n                    {src && (\r\n                      <div className=\"file-direction__crop\">\r\n                        <span>Предварительный просмотр</span>\r\n                        <img src={croppedImageUrl} alt=\"\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Закрыть</button>\r\n              <button onClick={this.save} type=\"button\" className=\"btn btn-primary\">Обрезать</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","export function reducer(state, action) {\r\n  const donor = state.files;\r\n  switch (action.type) {\r\n\r\n    case \"add\":\r\n      const curFiles = action.payload;\r\n      let newFiles = [];\r\n      for (let i = 0; i < curFiles.length; i++) {\r\n        let img = newImage(curFiles[i]);\r\n        newFiles.push(img);\r\n      };\r\n      return {\r\n        ...state, files: donor.concat(newFiles), afterAddFilesMod: true\r\n      };\r\n\r\n    case \"remove\":\r\n      donor.splice(action.payload, 1, null);\r\n      return {\r\n        ...state, files: donor\r\n      };\r\n\r\n    case \"updateOptions\":\r\n      donor[action.payload.index].options = action.payload.options;\r\n      return {\r\n        ...state, files: donor\r\n      }\r\n\r\n      case \"rotate\":\r\n        const rotate = donor[action.payload].options.rotate;\r\n        donor[action.payload].options.rotate = !rotate;\r\n        return {\r\n          ...state, files: donor\r\n        }\r\n\r\n        case \"changeFormat\":\r\n          donor[action.payload.index].options.format = action.payload.format;\r\n          return {\r\n            ...state, files: donor\r\n          }\r\n\r\n          case \"changePaper\":\r\n            donor[action.payload.index].options.paper = action.payload.format;\r\n            return {\r\n              ...state,\r\n              files: donor\r\n            }\r\n\r\n            case \"changeCrop\":\r\n              donor[action.payload.index].options.cadr = action.payload.format;\r\n              return {\r\n                ...state,\r\n                files: donor\r\n              }\r\n\r\n              case \"changeCount\":\r\n                donor[action.payload.index].options.count = action.payload.format;\r\n                return {\r\n                  ...state,\r\n                  files: donor\r\n                }\r\n\r\n                case \"crop\":\r\n                  donor[action.payload].options.cropped.push(donor[action.payload].options.preCrop);\r\n                  return {\r\n                    ...state, files: donor\r\n                  }\r\n\r\n                  case \"setChangingMod\":\r\n                    let f = state.files;\r\n                    if (state.changeMod) {\r\n                      f.forEach((el) => {\r\n                        if (el)\r\n                          el.options.changed = false;\r\n                      })\r\n                    }\r\n                    return {\r\n                      ...state, files: f, changeMod: !state.changeMod\r\n                    };\r\n\r\n                  case \"massSetFilesOptions\":\r\n                    const formData = action.payload;\r\n                    state.files.forEach((f) => {\r\n                      if (f && f.options.changed) {\r\n                        formData.forEach((el) => {\r\n                          f.options[el.name] = el.value;\r\n                        })\r\n                        // Передавалась ли опция кадрирования\r\n                        const isCadr = formData.findIndex((el) => {\r\n                          return (el.name === 'cadr')\r\n                        })\r\n                        // Если не передавалась, снимаем опции у выбранных фото\r\n                        if (isCadr < 0) {\r\n                          f.options.cadr = false;\r\n                        }\r\n                        // Если в процессе добавление фото, снимаем выбор\r\n                        if (state.afterAddFilesMod) {\r\n                          f.options.changed = false;\r\n                        }\r\n                      }\r\n                    })\r\n                    if (state.afterAddFilesMod) {\r\n                      state.afterAddFilesMod = !state.afterAddFilesMod;\r\n                    }\r\n                    return {\r\n                      ...state, files: state.files\r\n                    }\r\n\r\n                    default:\r\n                      throw new Error();\r\n  }\r\n}\r\n\r\nfunction newImage(file) {\r\n  return {\r\n    id: ID(file),\r\n    file: file,\r\n    body: URL.createObjectURL(file),\r\n    options: {\r\n      count: 1,\r\n      format: '10x15',\r\n      paper: 'матовая',\r\n      cadr: \"нет\",\r\n      rotate: false,\r\n      changed: true,\r\n      cropped: [],\r\n      aspect: 10 / 15\r\n    }\r\n  };\r\n}\r\n\r\nfunction ID(file) {\r\n  return file.size + '_' + file.name;\r\n}","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport ImageList from \"./list\";\r\nimport { GroupOptions } from \"./file_options_form.jsx\";\r\nimport { SetupImagePopup } from \"./setup-image-popup\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport let AppContext = createContext(null);\r\n\r\nexport function Main() {\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    files: [],\r\n    formatList: [\"10x15\", \"15x20\", \"20x30\"],\r\n    paperList: [\"глянец\", \"матовый\"],\r\n    changeMod: false,\r\n    setupImageMod: null,\r\n    lastModifiedTime: new Date().getTime(),\r\n    afterAddFilesMod: false\r\n  });\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      <Group />\r\n\r\n      {typeof setupImageMod === 'number' &&\r\n        <SetupImagePopup\r\n          fileIndex={state.setupImageMod}\r\n        />}\r\n    </AppContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nfunction Group(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const addFiles = (e) => {\r\n    dispatch({ type: \"add\", payload: e.target.files });\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={`col-12 col-lg-${state.changeMod ? 10 : 12}`}>\r\n        <div className=\"card border-secondary my-3\">\r\n          <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n            Ваши фотографии: {state.files.length}\r\n            <MassSetOptionsBtn\r\n              modOn={state.changeMod}\r\n              setChangingMod={state.setChangingMod} />\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"image-list\">\r\n              <label>\r\n                <span>Добавить фото</span>\r\n                <input onChange={addFiles} className=\"form-control\" type=\"file\" multiple />\r\n              </label>\r\n              <ImageList />\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div className=\"btn btn-success disabled\">Перейти к оформлению заказа</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-lg-2\">\r\n        <GroupOptions />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MassSetOptionsBtn(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let btnText = 'Выбрать несколько';\r\n  if (state.changeMod) {\r\n    btnText = 'отменить';\r\n  }\r\n\r\n  const modded = () => {\r\n    dispatch({\r\n      type: 'setChangingMod'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div onClick={modded} className=\"btn btn-info text-white\">{btnText}</div>\r\n  )\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.scss';\nimport { Topbar } from \"./components/topbar\";\nimport { Main } from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Topbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}