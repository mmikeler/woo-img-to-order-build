{"version":3,"sources":["components/topbar.js","components/image.jsx","components/loader.jsx","components/image-v2.jsx","components/list.js","components/file_options_form.jsx","components/setup-image-popup.js","components/reducer.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Topbar","className","href","PureComponent","Preloader","version","id","xmlns","x","y","viewBox","enableBackground","width","height","fill","attributeType","attributeName","type","values","begin","dur","repeatCount","ImageV2","props","useContext","AppContext","state","dispatch","file","files","index","imgRef","useRef","useState","setCroppedImageUrl","unit","aspect","crop","setCrop","loading","onLoading","timer","setPreComliteTimer","onLoad","useCallback","e","img","target","current","options","newcrop","makeClientCrop","a","getCroppedImg","then","res","o","preCrop","payload","setTimeout","image","fileName","canvas","document","createElement","pixelRatio","window","devicePixelRatio","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","Promise","resolve","reject","toBlob","blob","previewUrl","URL","createObjectURL","useEffect","disabled","onChange","c","onComplete","t","preCompliteCrop","onDragStart","clearTimeout","renderComponent","is-loaded","src","body","onLoadStart","ref","alt","Item","getAspect","format","split","undefined","onClick","changeMod","changed","name","paper","cadr","count","ItemOptions","remove","rotate","ItemOptionListBtn","actionFunction","iconClass","itemClass","ImageList","list","map","n","i","length","change-mod","GroupOptions","form","afterAddFilesMod","ChangedFilesList","role","forhtml","required","value","defaultValue","closest","data","FormData","formData","push","style","backgroundImage","SetupImagePopup","onImageLoaded","imageRef","onCropComplete","onCropChange","percentCrop","setState","save","bind","f","this","cropped","croppedImageUrl","fileUrl","toDataURL","setSetupImageMod","fileIndex","upd","tabIndex","aria-labelledby","aria-hidden","closeModal","data-dismiss","aria-label","ruleOfThirds","reducer","action","donor","curFiles","newFiles","ID","concat","splice","forEach","el","findIndex","Error","size","createContext","Main","useReducer","setupImageMod","lastModifiedTime","Date","getTime","Provider","Group","MassSetOptionsBtn","modOn","setChangingMod","multiple","btnText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8dcedfad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Topbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React, { PureComponent } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport { AppContext } from \"./main\";\r\n\r\nclass Image extends PureComponent {\r\n\r\n  state = {\r\n    src: '',\r\n    image: {\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    crop: {\r\n      unit: '%',\r\n      width: '100',\r\n      aspect: 10 / 15,\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n  save = this.save.bind(this);\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped.length > 0 ? f.options.cropped[f.options.cropped.length - 1] : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.createCROP();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  createCROP() {\r\n    let [aspect, width, height] = [\r\n      this.props.file.options.aspect,\r\n      this.state.image.width,\r\n      this.state.image.height,\r\n    ];\r\n    let crop = this.state.crop;\r\n    if (aspect !== undefined && aspect !== crop.aspect) {\r\n      if (aspect > 1) {\r\n        height = width / aspect;\r\n      }\r\n      else {\r\n        width = height * aspect;\r\n      }\r\n\r\n      crop = {\r\n        unit: 'px',\r\n        aspect: aspect,\r\n        width: width,\r\n        height: height,\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      this.setState({ crop });\r\n    }\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n    // this.(image);\r\n    this.setState({\r\n      image: { width: image.width, height: image.height }\r\n    })\r\n    this.createCROP();\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop }); // в процентах\r\n    this.setState({ crop }); // в пикселях\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n      const o = this.props.file.options;\r\n      o.preCrop = croppedImageUrl;\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async imageTo64(image) {\r\n    if (image) {\r\n      let o = this.props.s.files[this.props.index].options;\r\n      let cropped = await this.getImage(image);\r\n      o.cropped.push(cropped);\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n      this.setState({ src: cropped })\r\n    }\r\n  }\r\n\r\n  getImage(image) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth;\r\n    const scaleY = image.naturalHeight;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = pixelRatio * scaleX;\r\n    canvas.height = pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      0,\r\n      0,\r\n      scaleX,\r\n      scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toBlob();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toBlob(() => { }, 'image/jpg', 1);\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    const src = file.options.cropped.length > 0 ? file.options.cropped[file.options.cropped.length - 1] : this.state.src;\r\n    return (\r\n      <>\r\n        <ReactCrop\r\n          key={this.props.aspect}\r\n          src={src}\r\n          crop={crop}\r\n          rotate={0}\r\n          ruleOfThirds\r\n          onImageLoaded={this.onImageLoaded}\r\n          onComplete={this.onCropComplete}\r\n          onChange={this.onCropChange}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Image;","import React from \"react\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <svg className=\"loader\" version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n            viewBox=\"0 0 30 30\" enableBackground=\"new 0 0 0 0\">\r\n            <rect x=\"0\" y=\"0\" width=\"4\" height=\"10\" fill=\"#fff\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n            <rect x=\"10\" y=\"0\" width=\"4\" height=\"10\" fill=\"#f0a\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0.2s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n            <rect x=\"20\" y=\"0\" width=\"4\" height=\"10\" fill=\"#fff\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0.4s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n        </svg>\r\n    )\r\n}","import React, { useState, useCallback, useRef, useEffect, useContext } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { AppContext } from './main';\r\nimport { Preloader } from './loader';\r\n\r\nfunction generateDownload(canvas, crop) {\r\n  if (!crop || !canvas) {\r\n    return;\r\n  }\r\n\r\n  canvas.toBlob(\r\n    (blob) => {\r\n      const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n      const anchor = document.createElement('a');\r\n      anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      anchor.click();\r\n\r\n      window.URL.revokeObjectURL(previewUrl);\r\n    },\r\n    'image/png',\r\n    1\r\n  );\r\n}\r\n\r\nexport default function ImageV2(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const file = state.files[props.index];\r\n  const imgRef = useRef(null);\r\n  const [croppedImageUrl, setCroppedImageUrl] = useState(null);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 0, height: 0, aspect: 10 / 15, x: 0, y: 0 });\r\n  const [loading, onLoading] = useState(true);\r\n  const [timer, setPreComliteTimer] = useState(null);\r\n\r\n  const onLoad = useCallback((e) => {\r\n    const img = e.target;\r\n    imgRef.current = img;\r\n    let [aspect, width, height, x, y] = [\r\n      state.files[props.index].options.aspect,\r\n      img.width,\r\n      img.height,\r\n      crop.x,\r\n      crop.y\r\n    ];\r\n\r\n    // Определяем ориентацию изображения\r\n    if (width > height) {\r\n      //aspect = 15 / 10\r\n    }\r\n    else {\r\n      //aspect = 10 / 15\r\n    }\r\n\r\n    // Считаем размеры обрезки\r\n    if (aspect > 1) {\r\n      height = width / aspect;\r\n      x = 0;\r\n      y = (img.height - height) / 2;\r\n    }\r\n    else {\r\n      width = height * aspect;\r\n      x = (img.width - width) / 2;\r\n      y = 0;\r\n    }\r\n\r\n    let newcrop = {\r\n      unit: 'px',\r\n      aspect: aspect,\r\n      width: width,\r\n      height: height,\r\n      x: x,\r\n      y: y,\r\n    };\r\n    setCrop(newcrop);\r\n    makeClientCrop(newcrop);\r\n    onLoading(false);\r\n    return false;\r\n  }, []);\r\n\r\n  const makeClientCrop = async (crop) => {\r\n\r\n    if (imgRef && crop.width && crop.height) {\r\n      onLoading(true);\r\n\r\n      const croppedImageUrl = getCroppedImg(\r\n        imgRef.current,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n\r\n      croppedImageUrl.then(res => {\r\n        const o = file.options;\r\n        o.preCrop = res;\r\n        o.crop = crop;\r\n        dispatch({\r\n          type: \"updateOptions\", payload: {\r\n            index: props.index,\r\n            options: o\r\n          }\r\n        });\r\n      })\r\n\r\n      setTimeout(() => {\r\n        onLoading(false);\r\n        setPreComliteTimer(null);\r\n      }, 1500)\r\n\r\n    }\r\n  }\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(\r\n        (blob) => {\r\n          const previewUrl = window.URL.createObjectURL(blob);\r\n          setCroppedImageUrl(previewUrl, resolve(previewUrl));\r\n          // window.URL.revokeObjectURL(previewUrl);\r\n        },\r\n        'image/jpg',\r\n        1\r\n      );\r\n\r\n    });\r\n  }\r\n\r\n  const ImageComponent = () => {\r\n    if (imgRef) {\r\n      return (\r\n        <>\r\n          <div className=\"overlay\" is-loaded={imgRef.current ? 1 : 0}>\r\n            <Preloader />\r\n          </div>\r\n          <img\r\n            src={file.body}\r\n            onLoadStart={() => onLoading(true)}\r\n            onLoad={onLoad}\r\n            ref={imgRef}\r\n            className=\"ReactCrop__image\"\r\n            alt=\"\" />\r\n        </>\r\n      )\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const preCompliteCrop = (c) => {\r\n    const t = setTimeout(() => {\r\n      makeClientCrop(c);\r\n    }, 3000);\r\n    setPreComliteTimer(t);\r\n  }\r\n\r\n  const disableTimer = () => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      setPreComliteTimer(null);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    crop.aspect = state.files[props.index].options.aspect;\r\n    setCrop({ ...crop });\r\n  }, [state.files[props.index].options.aspect])\r\n\r\n  useEffect(() => {\r\n    if (crop.aspect > 0) {\r\n      const img = imgRef.current;\r\n      let [aspect, width, height, x, y] = [\r\n        crop.aspect,\r\n        img.width,\r\n        img.height,\r\n        crop.x,\r\n        crop.y\r\n      ];\r\n\r\n      // Считаем размеры обрезки\r\n      if (aspect > 1) {\r\n        height = width / aspect;\r\n        x = 0;\r\n        y = (img.height - height) / 2;\r\n        if (y < 0) {\r\n          height = img.height;\r\n          width = height * aspect;\r\n          x = (img.width - width) / 2\r\n          y = 0;\r\n        }\r\n      }\r\n      else {\r\n        width = height * aspect;\r\n        x = (img.width - width) / 2;\r\n        y = 0;\r\n      }\r\n\r\n      let newcrop = {\r\n        unit: 'px',\r\n        aspect: aspect,\r\n        width: width,\r\n        height: height,\r\n        x: x,\r\n        y: y,\r\n      };\r\n\r\n      setCrop(newcrop);\r\n    }\r\n\r\n  }, [crop.aspect, imgRef, props.index]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Preloader />}\r\n      <ReactCrop\r\n        crop={crop}\r\n        disabled={loading}\r\n        onChange={(c) => setCrop(c)}\r\n        onComplete={(c) => { preCompliteCrop(c) }}\r\n        onDragStart={disableTimer}\r\n        renderComponent={ImageComponent()}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, PureComponent, useContext } from \"react\";\r\nimport LineIcon from \"react-lineicons\";\r\nimport Image from \"../components/image\";\r\nimport ImageV2 from \"./image-v2\";\r\nimport { AppContext } from \"./main\";\r\n\r\nexport function ImageList() {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const list = () => {\r\n    let list = state.files.map((n, i) => {\r\n      if (n)\r\n        return <Item key={n.id} index={i} />\r\n    })\r\n    if (list.length <= 0) {\r\n      list = 'нет фото';\r\n    }\r\n\r\n    return (\r\n      <div className=\"list mt-3\" change-mod={state.changeMod ? 1 : 0}>\r\n        {list}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return list();\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let n = state.files[props.index];\r\n  let o = n.options;\r\n\r\n  const rotateAspect = () => {\r\n    o.aspect = getAspect(o.format, o.aspect);\r\n    dispatch({\r\n      type: \"updateOptions\", payload: {\r\n        index: props.index,\r\n        options: o\r\n      }\r\n    });\r\n  }\r\n\r\n  const getAspect = (format, aspect) => {\r\n    const a = format.split('x');\r\n    if (a[1] / a[0] === aspect) {\r\n      return a[0] / a[1];\r\n    }\r\n    else {\r\n      return a[1] / a[0];\r\n    }\r\n  }\r\n\r\n  const changeIT = () => {\r\n    if (state.changeMod) {\r\n      o.changed = !o.changed;\r\n      dispatch({\r\n        type: \"updateOptions\", payload: {\r\n          index: props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (o === undefined) return null;\r\n\r\n  return (\r\n    <div onClick={changeIT} className=\"file d-flex\">\r\n      <ImageV2 index={props.index} />\r\n      <div className=\"file-options\">\r\n        <div className=\"o format\"><LineIcon name=\"lni lni-ruler-alt\" />&nbsp;{o.format ? o.format : 'Нет'}</div>\r\n        <div className=\"o paper\"><LineIcon name=\"lni lni-write\" />&nbsp;{o.paper ? o.paper : 'Нет'}</div>\r\n        <div className=\"o crop\"><LineIcon name=\"lni lni-crop\" />&nbsp;{o.cadr ? o.cadr : 'Нет'}</div>\r\n        <div className=\"o count\"><LineIcon name=\"lni lni-shopping-basket\" />&nbsp;{o.count ? o.count : 'Нет'}</div>\r\n        <div className=\"delimeter\"></div>\r\n        <ItemOptions\r\n          index={props.index}\r\n          remove={() => dispatch({ type: \"remove\", payload: props.index })}\r\n          rotate={rotateAspect} />\r\n      </div>\r\n      {o.changed && <div className=\"redact\">Редактируется</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ItemOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"item-option-list\">\r\n      <ItemOptionListBtn\r\n        actionFunction={props.rotate}\r\n        iconClass=\"lni lni-spinner-arrow\"\r\n        itemClass=\"rotate\"\r\n        index={props.index}\r\n      />\r\n      <ItemOptionListBtn\r\n        actionFunction={() => dispatch({\r\n          type: \"remove\",\r\n          payload: props.index,\r\n        })}\r\n        iconClass=\"lni lni-close\"\r\n        itemClass=\"close\"\r\n        index={props.index}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ItemOptionListBtn(props) {\r\n  const { actionFunction, iconClass, itemClass } = { ...props }\r\n  return (\r\n    <div onClick={actionFunction} className={`item-option ${itemClass}`}><LineIcon name={iconClass} /></div>\r\n  )\r\n}\r\n\r\nexport default ImageList;","import React, { useContext, useRef } from 'react';\r\nimport { AppContext } from './main';\r\n\r\nexport function GroupOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const form = useRef();\r\n\r\n  const submit = (e) => {\r\n    const form = e.target.closest('form');\r\n    const data = new FormData(form);\r\n    let formData = [];\r\n    for (let [name, value] of data) {\r\n      formData.push({ name: name, value: value });\r\n    }\r\n    dispatch({\r\n      type: 'massSetFilesOptions',\r\n      payload: formData\r\n    });\r\n  }\r\n\r\n  if (!state.changeMod && !state.afterAddFilesMod) return null;\r\n\r\n  return (\r\n    <div className={`file-options-form-wrapper ${state.afterAddFilesMod ? 'popup' : ''}`}>\r\n      <div className=\"card text-dark bg-light border-secondary file-options-form\">\r\n        <form ref={form}>\r\n          <div className=\"card-header d-flex align-items-center justify-content-between\">\r\n            Настройки\r\n            {state.afterAddFilesMod &&\r\n              <button type=\"button\" className=\"btn-close\"></button>}\r\n          </div>\r\n          <div className=\"card-body\">\r\n\r\n            {!state.afterAddFilesMod && <ChangedFilesList />}\r\n\r\n            {state.afterAddFilesMod &&\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                Пока Ваши фото загружаются, Вы можете их настроить в форме ниже.\r\n              </div>\r\n            }\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect1\" className=\"form-label mt-4\">Формат фото</label>\r\n              <select className=\"form-select\" name=\"format\" id=\"exampleSelect1\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"10x15\">10x15</option>\r\n                <option value=\"15x20\">15x20</option>\r\n                <option value=\"20x30\">20x30</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect2\" className=\"form-label mt-4\">Тип бумаги</label>\r\n              <select className=\"form-select\" name=\"paper\" id=\"exampleSelect2\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"матовая\">Матовая</option>\r\n                <option value=\"глянец\">Глянец</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Кадрирование</label>\r\n                <input className=\"form-check-input\" name=\"cadr\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <label forhtml=\"exampleFormControlInput3\" className=\"form-label\">Количество</label>\r\n              <input type=\"number\" name=\"count\" className=\"form-control\" id=\"exampleFormControlInput3\" defaultValue=\"1\" />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div onClick={submit} className=\"btn btn-success\">Применить настройки</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChangedFilesList(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let list = null;\r\n  if (state.files) {\r\n    list = state.files.map((n) => {\r\n      if (n && n.options && n.options.changed) {\r\n        return (\r\n          <div key={n.id} className=\"changed-files-list-item\"\r\n            style={{ backgroundImage: `url(${window.URL.createObjectURL(n.file)})` }}></div>\r\n        )\r\n      }\r\n      return false;\r\n    })\r\n\r\n    if (list.length > 0)\r\n      return <div className=\"changed-file-list\">{list}</div>;\r\n    else\r\n      return null;\r\n  }\r\n  else\r\n    return null;\r\n\r\n}","import React, { useState, PureComponent } from \"react\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { ItemOptionListBtn } from \"./list\";\r\n\r\n\r\nexport class SetupImagePopup extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      src: '',\r\n      crop: {\r\n        unit: '%',\r\n        width: '100',\r\n        aspect: 2 / 3\r\n      }\r\n    }\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toDataURL();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.props.setSetupImageMod(null);\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, src, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    return (\r\n      <div className=\"modal fade show\" id=\"file-direction\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"file-direction-label\">Управление файлом</h5>\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 react-crop-wrapper-row\">\r\n                    <div className=\"react-crop-wrapper\">\r\n                      {src && (\r\n                        <>\r\n                          {/* Скрыто стилями */}\r\n                          <div className=\"item-option-list\">\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-ruler-alt\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-spinner-arrow\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                          </div>\r\n                          <ReactCrop\r\n                            src={src}\r\n                            crop={crop}\r\n                            ruleOfThirds\r\n                            onImageLoaded={this.onImageLoaded}\r\n                            onComplete={this.onCropComplete}\r\n                            onChange={this.onCropChange}\r\n                          />\r\n\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4 react-crop-options-bar\">\r\n                    {src && (\r\n                      <div className=\"file-direction__crop\">\r\n                        <span>Предварительный просмотр</span>\r\n                        <img src={croppedImageUrl} alt=\"\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Закрыть</button>\r\n              <button onClick={this.save} type=\"button\" className=\"btn btn-primary\">Обрезать</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","export function reducer(state, action) {\r\n  const donor = state.files;\r\n  switch (action.type) {\r\n\r\n    case \"add\":\r\n      const curFiles = action.payload;\r\n      let newFiles = [];\r\n      for (let i = 0; i < curFiles.length; i++) {\r\n        let img = newImage(curFiles[i]);\r\n        newFiles.push(img);\r\n      };\r\n      return {\r\n        ...state, files: donor.concat(newFiles), afterAddFilesMod: true\r\n      };\r\n\r\n    case \"remove\":\r\n      donor.splice(action.payload, 1, null);\r\n      return {\r\n        ...state, files: donor\r\n      };\r\n\r\n    case \"updateOptions\":\r\n      donor[action.payload.index].options = action.payload.options;\r\n      return {\r\n        ...state, files: donor\r\n      }\r\n\r\n      case \"rotate\":\r\n        const rotate = donor[action.payload].options.rotate;\r\n        donor[action.payload].options.rotate = !rotate;\r\n        return {\r\n          ...state, files: donor\r\n        }\r\n\r\n        case \"crop\":\r\n          donor[action.payload].options.cropped.push(donor[action.payload].options.preCrop);\r\n          return {\r\n            ...state, files: donor\r\n          }\r\n\r\n          case \"setChangingMod\":\r\n            let f = state.files;\r\n            if (state.changeMod) {\r\n              f.forEach((el) => {\r\n                if (el)\r\n                  el.options.changed = false;\r\n              })\r\n            }\r\n            return {\r\n              ...state, files: f, changeMod: !state.changeMod\r\n            };\r\n\r\n          case \"massSetFilesOptions\":\r\n            const formData = action.payload;\r\n            state.files.forEach((f) => {\r\n              if (f && f.options.changed) {\r\n                formData.forEach((el) => {\r\n                  f.options[el.name] = el.value;\r\n                })\r\n                // Передавалась ли опция кадрирования\r\n                const isCadr = formData.findIndex((el) => {\r\n                  return (el.name === 'cadr')\r\n                })\r\n                // Если не передавалась, снимаем опции у выбранных фото\r\n                if (isCadr < 0) {\r\n                  f.options.cadr = false;\r\n                }\r\n                // Если в процессе добавление фото, снимаем выбор\r\n                if (state.afterAddFilesMod) {\r\n                  f.options.changed = false;\r\n                }\r\n              }\r\n            })\r\n            if (state.afterAddFilesMod) {\r\n              state.afterAddFilesMod = !state.afterAddFilesMod;\r\n            }\r\n            return {\r\n              ...state, files: state.files\r\n            }\r\n\r\n            default:\r\n              throw new Error();\r\n  }\r\n}\r\n\r\nfunction newImage(file) {\r\n  return {\r\n    id: ID(file),\r\n    file: file,\r\n    body: URL.createObjectURL(file),\r\n    options: {\r\n      count: 1,\r\n      format: '10x15',\r\n      paper: 'матовая',\r\n      cadr: 0,\r\n      rotate: false,\r\n      changed: true,\r\n      cropped: [],\r\n      aspect: 10 / 15\r\n    }\r\n  };\r\n}\r\n\r\nfunction ID(file) {\r\n  return file.size + '_' + file.name;\r\n}","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport ImageList from \"./list\";\r\nimport { GroupOptions } from \"./file_options_form.jsx\";\r\nimport { SetupImagePopup } from \"./setup-image-popup\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport let AppContext = createContext(null);\r\n\r\nexport function Main() {\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    files: [],\r\n    changeMod: false,\r\n    setupImageMod: null,\r\n    lastModifiedTime: new Date().getTime(),\r\n    afterAddFilesMod: false\r\n  });\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      <Group />\r\n\r\n      {typeof setupImageMod === 'number' &&\r\n        <SetupImagePopup\r\n          fileIndex={state.setupImageMod}\r\n        />}\r\n    </AppContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nfunction Group(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const addFiles = (e) => {\r\n    dispatch({ type: \"add\", payload: e.target.files });\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={`col-12 col-lg-${state.changeMod ? 10 : 12}`}>\r\n        <div className=\"card border-secondary my-3\">\r\n          <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n            Ваши фотографии: {state.files.length}\r\n            <MassSetOptionsBtn\r\n              modOn={state.changeMod}\r\n              setChangingMod={state.setChangingMod} />\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"image-list\">\r\n              <label>\r\n                <span>Добавить фото</span>\r\n                <input onChange={addFiles} className=\"form-control\" type=\"file\" multiple />\r\n              </label>\r\n              <ImageList />\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div className=\"btn btn-success disabled\">Перейти к оформлению заказа</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-lg-2\">\r\n        <GroupOptions />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MassSetOptionsBtn(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let btnText = 'Выбрать несколько';\r\n  if (state.changeMod) {\r\n    btnText = 'отменить';\r\n  }\r\n\r\n  const modded = () => {\r\n    dispatch({\r\n      type: 'setChangingMod'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div onClick={modded} className=\"btn btn-info text-white\">{btnText}</div>\r\n  )\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.scss';\nimport { Topbar } from \"./components/topbar\";\nimport { Main } from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Topbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}