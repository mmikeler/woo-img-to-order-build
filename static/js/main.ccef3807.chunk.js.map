{"version":3,"sources":["components/topbar.js","components/image.jsx","components/loader.jsx","components/image-v2.jsx","components/image-options.jsx","components/list.js","components/file_options_form.jsx","components/setup-image-popup.js","components/reducer.js","components/cart.jsx","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Topbar","className","href","PureComponent","Preloader","version","id","xmlns","x","y","viewBox","enableBackground","width","height","fill","attributeType","attributeName","type","values","begin","dur","repeatCount","ImageV2","props","useContext","AppContext","state","dispatch","file","files","index","imgRef","useRef","useState","setCroppedImageUrl","unit","aspect","crop","loading","onLoading","onLoad","useCallback","e","img","target","current","options","decodeAspect","format","newcrop","naturalWidth","naturalHeight","onCropChange","makeClientCrop","invert","a","split","croppedImageUrl","getCroppedImg","then","res","o","preCrop","payload","image","fileName","canvas","document","createElement","pixelRatio","window","devicePixelRatio","scaleX","scaleY","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","Promise","resolve","reject","toBlob","blob","previewUrl","URL","createObjectURL","c","console","log","useEffect","rotate","cadr","disabled","onChange","onComplete","renderComponent","is-loaded","src","body","onLoadStart","ref","alt","DisplayOptionList","nav","setNav","count","onClick","name","paper","list","formatList","map","f","i","ChangeOptionBtn","action","mod","push","papers","paperList","label","changeCount","n","k","Item","undefined","changeMod","changed","ItemOptions","remove","r","ItemOptionListBtn","actionFunction","iconClass","itemClass","ImageList","length","change-mod","GroupOptions","form","afterAddFilesMod","ChangedFilesList","role","forhtml","required","value","defaultValue","closest","data","FormData","formData","style","backgroundImage","SetupImagePopup","onImageLoaded","imageRef","onCropComplete","percentCrop","setState","save","bind","this","cropped","fileUrl","toDataURL","setSetupImageMod","fileIndex","upd","tabIndex","aria-labelledby","aria-hidden","closeModal","data-dismiss","aria-label","ruleOfThirds","reducer","donor","curFiles","newFiles","ID","concat","splice","ro","forEach","el","findIndex","Error","size","cd","Cart","CartItem","createContext","Main","useReducer","setupImageMod","lastModifiedTime","Date","getTime","Provider","Group","MassSetOptionsBtn","modOn","setChangingMod","multiple","btnText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ccef3807.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Topbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React, { PureComponent } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport { AppContext } from \"./main\";\r\n\r\nclass Image extends PureComponent {\r\n\r\n  state = {\r\n    src: '',\r\n    image: {\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    crop: {\r\n      unit: '%',\r\n      width: '100',\r\n      aspect: 10 / 15,\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n  save = this.save.bind(this);\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped.length > 0 ? f.options.cropped[f.options.cropped.length - 1] : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.createCROP();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  createCROP() {\r\n    let [aspect, width, height] = [\r\n      this.props.file.options.aspect,\r\n      this.state.image.width,\r\n      this.state.image.height,\r\n    ];\r\n    let crop = this.state.crop;\r\n    if (aspect !== undefined && aspect !== crop.aspect) {\r\n      if (aspect > 1) {\r\n        height = width / aspect;\r\n      }\r\n      else {\r\n        width = height * aspect;\r\n      }\r\n\r\n      crop = {\r\n        unit: 'px',\r\n        aspect: aspect,\r\n        width: width,\r\n        height: height,\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      this.setState({ crop });\r\n    }\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n    // this.(image);\r\n    this.setState({\r\n      image: { width: image.width, height: image.height }\r\n    })\r\n    this.createCROP();\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop }); // в процентах\r\n    this.setState({ crop }); // в пикселях\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n      const o = this.props.file.options;\r\n      o.preCrop = croppedImageUrl;\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async imageTo64(image) {\r\n    if (image) {\r\n      let o = this.props.s.files[this.props.index].options;\r\n      let cropped = await this.getImage(image);\r\n      o.cropped.push(cropped);\r\n      this.props.d({\r\n        type: \"updateOptions\", payload: {\r\n          index: this.props.index,\r\n          options: o\r\n        }\r\n      });\r\n      this.setState({ src: cropped })\r\n    }\r\n  }\r\n\r\n  getImage(image) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth;\r\n    const scaleY = image.naturalHeight;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = pixelRatio * scaleX;\r\n    canvas.height = pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      0,\r\n      0,\r\n      scaleX,\r\n      scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toBlob();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toBlob(() => { }, 'image/jpg', 1);\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    const src = file.options.cropped.length > 0 ? file.options.cropped[file.options.cropped.length - 1] : this.state.src;\r\n    return (\r\n      <>\r\n        <ReactCrop\r\n          key={this.props.aspect}\r\n          src={src}\r\n          crop={crop}\r\n          rotate={0}\r\n          ruleOfThirds\r\n          onImageLoaded={this.onImageLoaded}\r\n          onComplete={this.onCropComplete}\r\n          onChange={this.onCropChange}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Image;","import React from \"react\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <svg className=\"loader\" version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n            viewBox=\"0 0 30 30\" enableBackground=\"new 0 0 0 0\">\r\n            <rect x=\"0\" y=\"0\" width=\"4\" height=\"10\" fill=\"#fff\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n            <rect x=\"10\" y=\"0\" width=\"4\" height=\"10\" fill=\"#f0a\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0.2s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n            <rect x=\"20\" y=\"0\" width=\"4\" height=\"10\" fill=\"#fff\">\r\n                <animateTransform attributeType=\"xml\"\r\n                    attributeName=\"transform\" type=\"translate\"\r\n                    values=\"0 0; 0 20; 0 0\"\r\n                    begin=\"0.4s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\r\n            </rect>\r\n        </svg>\r\n    )\r\n}","import React, { useState, useCallback, useRef, useEffect, useContext } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { AppContext } from './main';\r\nimport { Preloader } from './loader';\r\n\r\nfunction generateDownload(canvas, crop) {\r\n  if (!crop || !canvas) {\r\n    return;\r\n  }\r\n\r\n  canvas.toBlob(\r\n    (blob) => {\r\n      const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n      const anchor = document.createElement('a');\r\n      anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      anchor.click();\r\n\r\n      window.URL.revokeObjectURL(previewUrl);\r\n    },\r\n    'image/jpeg',\r\n    1\r\n  );\r\n}\r\n\r\nexport default function ImageV2(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const file = state.files[props.index];\r\n  const imgRef = useRef(null);\r\n  const [croppedImageUrl, setCroppedImageUrl] = useState(null);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 0, height: 0, aspect: 10 / 15, x: 0, y: 0 });\r\n  const [loading, onLoading] = useState(true);\r\n  //const [timer, setPreComliteTimer] = useState(null);\r\n\r\n  const onLoad = useCallback((e) => {\r\n    const img = e.target;\r\n    imgRef.current = img;\r\n    let [aspect, width, height, x, y] = [\r\n      state.files[props.index].options.aspect,\r\n      img.width,\r\n      img.height,\r\n      crop.x,\r\n      crop.y\r\n    ];\r\n\r\n    // Определяем ориентацию изображения\r\n    if (width > height) {\r\n      aspect = decodeAspect(file.options.format, true)\r\n    }\r\n    else {\r\n      aspect = decodeAspect(file.options.format)\r\n    }\r\n\r\n    // Считаем размеры обрезки\r\n    if (aspect > 1) {\r\n      height = width / aspect;\r\n      x = 0;\r\n      y = (img.height - height) / 2;\r\n      if (y < 0) {\r\n        height = img.height;\r\n        width = height * aspect;\r\n        x = (img.width - width) / 2\r\n        y = 0;\r\n      }\r\n    }\r\n    else {\r\n      width = height * aspect;\r\n      x = (img.width - width) / 2;\r\n      y = 0;\r\n    }\r\n\r\n    let newcrop = {\r\n      naturalWidth: imgRef.current.width,\r\n      naturalHeight: imgRef.current.height,\r\n      unit: 'px',\r\n      aspect: aspect,\r\n      width: width,\r\n      height: height,\r\n      x: x,\r\n      y: y,\r\n    };\r\n    onCropChange(newcrop);\r\n    makeClientCrop(newcrop);\r\n    onLoading(false);\r\n    return false;\r\n  }, []);\r\n\r\n  const decodeAspect = (aspect, invert = false) => {\r\n    const a = aspect.split('x');\r\n    if (invert) {\r\n      return a[1] / a[0];\r\n    }\r\n    else {\r\n      return a[0] / a[1];\r\n    }\r\n  }\r\n\r\n  const makeClientCrop = async (crop) => {\r\n\r\n    if (imgRef && crop.width && crop.height) {\r\n      //onLoading(true);\r\n\r\n      const croppedImageUrl = getCroppedImg(\r\n        imgRef.current,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n\r\n      if (croppedImageUrl) {\r\n        croppedImageUrl.then(res => {\r\n          const o = file.options;\r\n          o.preCrop = res;\r\n          dispatch({\r\n            type: \"updateOptions\", payload: {\r\n              index: props.index,\r\n              options: o\r\n            }\r\n          });\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n\r\n    if (image === null) return false;\r\n\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(\r\n        (blob) => {\r\n          if (blob) {\r\n            const previewUrl = window.URL.createObjectURL(blob);\r\n            setCroppedImageUrl(previewUrl, resolve(previewUrl));\r\n            // window.URL.revokeObjectURL(previewUrl);\r\n          }\r\n        },\r\n        'image/jpg',\r\n        1\r\n      );\r\n\r\n    });\r\n  }\r\n\r\n  const ImageComponent = () => {\r\n    if (imgRef) {\r\n      return (\r\n        <>\r\n          <div className=\"overlay\" is-loaded={imgRef.current ? 1 : 0}>\r\n            <Preloader />\r\n          </div>\r\n          <div className=\"img-wrapper\">\r\n            <img\r\n              src={file.body}\r\n              onLoadStart={() => onLoading(true)}\r\n              onLoad={(e) => !file.options.cadr ? onLoad(e) : console.log(file.options.cadr)}\r\n              ref={imgRef}\r\n              className=\"ReactCrop__image\"\r\n              alt=\"\" />\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const onCropChange = (c) => {\r\n    c.naturalWidth = imgRef.current.width;\r\n    c.naturalHeight = imgRef.current.height;\r\n    dispatch({\r\n      type: 'changeCrop',\r\n      payload: {\r\n        crop: c,\r\n        index: props.index\r\n      }\r\n    })\r\n    console.log('change');\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Если изображение горизонтальное, сразу поворачиваем рамку один раз при загрузке\r\n    const img = imgRef.current;\r\n    file.options.rotate = !file.options.rotate;\r\n    if (img.width > img.height) {\r\n      dispatch({\r\n        type: 'changeCrop',\r\n        payload: {\r\n          options: file.options,\r\n          index: props.index\r\n        }\r\n      })\r\n    }\r\n  }, [imgRef])\r\n\r\n  useEffect(() => {\r\n    makeClientCrop(state.files[props.index].options.crop)\r\n    console.log('3');\r\n  }, [state.files[props.index].options.rotate, state.files[props.index].options.cadr])\r\n\r\n  return (\r\n    <>\r\n      {loading && <Preloader />}\r\n      <ReactCrop\r\n        crop={state.files[props.index].options.crop}\r\n        disabled={state.files[props.index].options.cadr} // отключаем движение рамки при условии кадрирования\r\n        onChange={(c) => onCropChange(c)}\r\n        onComplete={(c) => { makeClientCrop(c) }}\r\n        renderComponent={ImageComponent()}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useContext, useState } from 'react';\r\nimport { AppContext } from './main'\r\nimport LineIcon from \"react-lineicons\";\r\nimport { ItemOptionListBtn } from './list';\r\n\r\nexport function DisplayOptionList(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [nav, setNav] = useState('default');\r\n  const o = props.o;\r\n  const [count, changeCount] = useState(o.count);\r\n\r\n  switch (nav) {\r\n    case \"default\":\r\n      return (\r\n        <>\r\n          <div onClick={() => { setNav(\"formats\") }} className=\"item-option item-option--linear o format\"><LineIcon name=\"lni lni-ruler-alt\" />&nbsp;{o.format ? o.format : 'Нет'}</div>\r\n          <div onClick={() => { setNav(\"paper\") }} className=\"item-option item-option--linear o paper\"><LineIcon name=\"lni lni-write\" />&nbsp;{o.paper ? o.paper : 'Нет'}</div>\r\n          <div onClick={() => { setNav(\"crop\") }} className=\"item-option item-option--linear o crop\"><LineIcon name=\"lni lni-crop\" />&nbsp;{o.cadr ? 'Да' : 'Нет'}</div>\r\n          <div onClick={() => { setNav(\"count\") }} className=\"item-option item-option--linear o count\"><LineIcon name=\"lni lni-shopping-basket\" />&nbsp;{o.count ? o.count : 'Нет'}</div>\r\n        </>\r\n      )\r\n    case \"formats\":\r\n      let list = state.formatList.map((f, i) => {\r\n        return (\r\n          <ChangeOptionBtn action=\"changeFormat\" mod=\"\" f={f} key={i} nav={setNav} index={props.index} />\r\n        )\r\n      })\r\n      list.push(<ChangeOptionBtn\r\n        f={'назад'}\r\n        key={'default'}\r\n        nav={setNav}\r\n        index={'back'} />);\r\n      return list;\r\n\r\n    case \"paper\":\r\n      const papers = state.paperList.map((f, i) => {\r\n        return (\r\n          <ChangeOptionBtn action=\"changePaper\" mod=\"\" f={f} key={i} nav={setNav} index={props.index} />\r\n        )\r\n      })\r\n      papers.push(<ChangeOptionBtn\r\n        f={'назад'}\r\n        key={'default'}\r\n        nav={setNav}\r\n        mod=\"to-back\"\r\n        index={'back'} />);\r\n      return papers;\r\n\r\n    case \"crop\":\r\n      return (\r\n        <>\r\n          <ChangeOptionBtn\r\n            action=\"changeCadr\"\r\n            mod=\"\"\r\n            f={false}\r\n            label=\"Нет\"\r\n            key=\"n\"\r\n            nav={setNav} index={props.index} />\r\n          <ChangeOptionBtn\r\n            action=\"changeCadr\"\r\n            mod=\"\"\r\n            f={true}\r\n            label=\"Да\"\r\n            key=\"y\"\r\n            nav={setNav} index={props.index} />\r\n          <ChangeOptionBtn\r\n            f={'назад'}\r\n            key={'default'}\r\n            nav={setNav}\r\n            mod=\"to-back\"\r\n            index={'back'} />\r\n        </>\r\n      )\r\n\r\n    case \"count\":\r\n      const changeCount = (n) => {\r\n        let k = -1;\r\n        if (n) k = 1;\r\n        dispatch({\r\n          type: 'changeCount',\r\n          payload: {\r\n            index: props.index,\r\n            format: +o.count + k\r\n          }\r\n        })\r\n      }\r\n      return (\r\n        <>\r\n          <div className=\"item-count\">{o.count}</div>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div onClick={() => changeCount()} className=\"item-option\">\r\n              <LineIcon name=\"minus\" />\r\n            </div>\r\n            <div onClick={() => changeCount(true)} className=\"item-option\">\r\n              <LineIcon name=\"plus\" />\r\n            </div>\r\n          </div>\r\n\r\n          <ChangeOptionBtn\r\n            f={'назад'}\r\n            key={'default'}\r\n            nav={setNav}\r\n            mod=\"to-back\"\r\n            index={'back'} />\r\n        </>\r\n      )\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction ChangeOptionBtn(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const label = typeof (props.f) === 'string' ? props.f : props.label;\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        if (props.index !== 'back') {\r\n          dispatch({\r\n            type: props.action,\r\n            payload: {\r\n              index: props.index,\r\n              format: props.f\r\n            }\r\n          })\r\n        }\r\n        props.nav(\"default\");\r\n      }}\r\n      className={`item-option item-option--linear ${props.mod}`}>{label}</button>\r\n  )\r\n}","import React, { useEffect, useState, PureComponent, useContext } from \"react\";\r\nimport LineIcon from \"react-lineicons\";\r\nimport Image from \"../components/image\";\r\nimport ImageV2 from \"./image-v2\";\r\nimport { AppContext } from \"./main\";\r\nimport { DisplayOptionList } from \"./image-options\";\r\n\r\nexport function ImageList() {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const list = () => {\r\n    let list = state.files.map((n, i) => {\r\n      if (n)\r\n        return <Item key={n.id} index={i} />\r\n    })\r\n    if (list.length <= 0) {\r\n      list = 'нет фото';\r\n    }\r\n\r\n    return (\r\n      <div className=\"list mt-3\" change-mod={state.changeMod ? 1 : 0}>\r\n        {list}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return list();\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let n = state.files[props.index];\r\n  let o = n.options;\r\n\r\n  const rotateAspect = () => {\r\n    dispatch({\r\n      type: \"rotate\", payload: {\r\n        index: props.index,\r\n        r: !o.rotate\r\n      }\r\n    });\r\n  }\r\n\r\n  const changeIT = () => {\r\n    if (state.changeMod) {\r\n      o.changed = !o.changed;\r\n      dispatch({\r\n        type: \"updateOptions\", payload: {\r\n          index: props.index,\r\n          options: o\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (o === undefined) return null;\r\n\r\n  return (\r\n    <div onClick={changeIT} className=\"file d-flex\">\r\n      <ImageV2 index={props.index} />\r\n      <div className=\"file-options\">\r\n        <DisplayOptionList index={props.index} o={o} />\r\n        <div className=\"delimeter\"></div>\r\n        <ItemOptions\r\n          index={props.index}\r\n          remove={() => dispatch({ type: \"remove\", payload: props.index })}\r\n          rotate={rotateAspect} />\r\n      </div>\r\n      {o.changed && <div className=\"redact\">Редактируется</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ItemOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"item-option-list\">\r\n      <ItemOptionListBtn\r\n        actionFunction={props.rotate}\r\n        iconClass=\"lni lni-spinner-arrow\"\r\n        itemClass=\"rotate\"\r\n        index={props.index}\r\n      />\r\n      <ItemOptionListBtn\r\n        actionFunction={() => dispatch({\r\n          type: \"remove\",\r\n          payload: props.index,\r\n        })}\r\n        iconClass=\"lni lni-close\"\r\n        itemClass=\"close\"\r\n        index={props.index}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ItemOptionListBtn(props) {\r\n  const { actionFunction, iconClass, itemClass } = { ...props }\r\n  return (\r\n    <div onClick={actionFunction} className={`item-option ${itemClass}`}><LineIcon name={iconClass} /></div>\r\n  )\r\n}\r\n\r\nexport default ImageList;","import React, { useContext, useRef } from 'react';\r\nimport { AppContext } from './main';\r\n\r\nexport function GroupOptions(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const form = useRef();\r\n\r\n  const submit = (e) => {\r\n    const form = e.target.closest('form');\r\n    const data = new FormData(form);\r\n    let formData = [];\r\n    for (let [name, value] of data) {\r\n      formData.push({ name: name, value: value });\r\n    }\r\n    dispatch({\r\n      type: 'massSetFilesOptions',\r\n      payload: formData\r\n    });\r\n  }\r\n\r\n  if (!state.changeMod && !state.afterAddFilesMod) return null;\r\n\r\n  return (\r\n    <div className={`file-options-form-wrapper ${state.afterAddFilesMod ? 'popup' : ''}`}>\r\n      <div className=\"card text-dark bg-light border-secondary file-options-form\">\r\n        <form ref={form}>\r\n          <div className=\"card-header d-flex align-items-center justify-content-between\">\r\n            Настройки\r\n            {state.afterAddFilesMod &&\r\n              <button type=\"button\" className=\"btn-close\"></button>}\r\n          </div>\r\n          <div className=\"card-body\">\r\n\r\n            {!state.afterAddFilesMod && <ChangedFilesList />}\r\n\r\n            {state.afterAddFilesMod &&\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                Пока Ваши фото загружаются, Вы можете их настроить в форме ниже.\r\n              </div>\r\n            }\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect1\" className=\"form-label mt-4\">Формат фото</label>\r\n              <select className=\"form-select\" name=\"format\" id=\"exampleSelect1\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"10x15\">10x15</option>\r\n                <option value=\"15x20\">15x20</option>\r\n                <option value=\"20x30\">20x30</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label forhtml=\"exampleSelect2\" className=\"form-label mt-4\">Тип бумаги</label>\r\n              <select className=\"form-select\" name=\"paper\" id=\"exampleSelect2\" required>\r\n                <option disabled>Выбрать</option>\r\n                <option value=\"матовая\">Матовая</option>\r\n                <option value=\"глянец\">Глянец</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Кадрирование</label>\r\n                <input className=\"form-check-input\" name=\"cadr\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <label forhtml=\"exampleFormControlInput3\" className=\"form-label\">Количество</label>\r\n              <input type=\"number\" name=\"count\" className=\"form-control\" id=\"exampleFormControlInput3\" defaultValue=\"1\" />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div onClick={submit} className=\"btn btn-success\">Применить настройки</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChangedFilesList(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let list = null;\r\n  if (state.files) {\r\n    list = state.files.map((n) => {\r\n      if (n && n.options && n.options.changed) {\r\n        return (\r\n          <div key={n.id} className=\"changed-files-list-item\"\r\n            style={{ backgroundImage: `url(${window.URL.createObjectURL(n.file)})` }}></div>\r\n        )\r\n      }\r\n      return false;\r\n    })\r\n\r\n    if (list.length > 0)\r\n      return <div className=\"changed-file-list\">{list}</div>;\r\n    else\r\n      return null;\r\n  }\r\n  else\r\n    return null;\r\n\r\n}","import React, { useState, PureComponent } from \"react\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { ItemOptionListBtn } from \"./list\";\r\n\r\n\r\nexport class SetupImagePopup extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      src: '',\r\n      crop: {\r\n        unit: '%',\r\n        width: '100',\r\n        aspect: 2 / 3\r\n      }\r\n    }\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const f = this.props.file;\r\n    const src = f.options.cropped ? f.options.cropped : window.URL.createObjectURL(this.props.file.file);\r\n    this.setState({ src: src });\r\n  }\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.fileUrl = canvas.toDataURL();\r\n      resolve(this.fileUrl);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.props.setSetupImageMod(null);\r\n  }\r\n\r\n  save() {\r\n    const { croppedImageUrl } = this.state;\r\n    const { fileIndex } = this.props;\r\n    this.props.upd('cropped', croppedImageUrl, fileIndex);\r\n    this.setState({ src: croppedImageUrl })\r\n  }\r\n\r\n  render() {\r\n    const { crop, src, croppedImageUrl } = this.state;\r\n    const { fileIndex, file } = this.props;\r\n    return (\r\n      <div className=\"modal fade show\" id=\"file-direction\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"file-direction-label\">Управление файлом</h5>\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 react-crop-wrapper-row\">\r\n                    <div className=\"react-crop-wrapper\">\r\n                      {src && (\r\n                        <>\r\n                          {/* Скрыто стилями */}\r\n                          <div className=\"item-option-list\">\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-ruler-alt\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                            <ItemOptionListBtn\r\n                              actionFunction={() => this.props.upd('rotate', !file.options.rotate, fileIndex)}\r\n                              iconClass=\"lni lni-spinner-arrow\"\r\n                              itemClass=\"rotate\"\r\n                              index={this.props.fileIndex}\r\n                            />\r\n                          </div>\r\n                          <ReactCrop\r\n                            src={src}\r\n                            crop={crop}\r\n                            ruleOfThirds\r\n                            onImageLoaded={this.onImageLoaded}\r\n                            onComplete={this.onCropComplete}\r\n                            onChange={this.onCropChange}\r\n                          />\r\n\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4 react-crop-options-bar\">\r\n                    {src && (\r\n                      <div className=\"file-direction__crop\">\r\n                        <span>Предварительный просмотр</span>\r\n                        <img src={croppedImageUrl} alt=\"\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button onClick={this.props.closeModal} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Закрыть</button>\r\n              <button onClick={this.save} type=\"button\" className=\"btn btn-primary\">Обрезать</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","export function reducer(state, action) {\r\n  const donor = state.files;\r\n  switch (action.type) {\r\n\r\n    case \"add\":\r\n      const curFiles = action.payload;\r\n      let newFiles = [];\r\n      for (let i = 0; i < curFiles.length; i++) {\r\n        let img = newImage(curFiles[i]);\r\n        newFiles.push(img);\r\n      };\r\n      return {\r\n        ...state, files: donor.concat(newFiles), afterAddFilesMod: true\r\n      };\r\n\r\n    case \"remove\":\r\n      donor.splice(action.payload, 1, null);\r\n      return {\r\n        ...state, files: donor\r\n      };\r\n\r\n    case \"updateOptions\":\r\n      donor[action.payload.index].options = action.payload.options;\r\n      return {\r\n        ...state, files: donor\r\n      }\r\n\r\n      case \"changeCrop\":\r\n        donor[action.payload.index].options.crop = action.payload.crop;\r\n        // donor[action.payload.index].options.crop.y = newcrop.y;\r\n        // donor[action.payload.index].options.crop.width = newcrop.width;\r\n        // donor[action.payload.index].options.crop.height = newcrop.height;\r\n        return {\r\n          ...state, files: donor\r\n        }\r\n\r\n        case \"rotate\":\r\n          donor[action.payload.index].options.rotate = action.payload.r;\r\n          donor[action.payload.index].options.crop = decodeAspect(\r\n            donor[action.payload.index].options.cadr,\r\n            donor[action.payload.index].options.crop,\r\n            donor[action.payload.index].options.format,\r\n            action.payload.r\r\n          )\r\n          return {\r\n            ...state, files: donor\r\n          }\r\n\r\n          case \"changeFormat\":\r\n            donor[action.payload.index].options.format = action.payload.format;\r\n            const ro = donor[action.payload.index].options.rotate;\r\n            donor[action.payload.index].options.crop = decodeAspect(\r\n              donor[action.payload.index].options.cadr,\r\n              donor[action.payload.index].options.crop,\r\n              donor[action.payload.index].options.format,\r\n              ro\r\n            )\r\n            return {\r\n              ...state, files: donor\r\n            }\r\n\r\n            case \"changePaper\":\r\n              donor[action.payload.index].options.paper = action.payload.format;\r\n              return {\r\n                ...state,\r\n                files: donor\r\n              }\r\n\r\n              case \"changeCadr\":\r\n                donor[action.payload.index].options.cadr = action.payload.format;\r\n                donor[action.payload.index].options.crop = decodeAspect(\r\n                  donor[action.payload.index].options.cadr,\r\n                  donor[action.payload.index].options.crop,\r\n                  donor[action.payload.index].options.format,\r\n                  donor[action.payload.index].options.rotate\r\n                )\r\n                return {\r\n                  ...state,\r\n                  files: donor\r\n                }\r\n\r\n                case \"changeCount\":\r\n                  donor[action.payload.index].options.count = action.payload.format;\r\n                  return {\r\n                    ...state,\r\n                    files: donor\r\n                  }\r\n\r\n                  case \"crop\":\r\n                    donor[action.payload].options.cropped.push(donor[action.payload].options.preCrop);\r\n                    return {\r\n                      ...state, files: donor\r\n                    }\r\n\r\n                    case \"setChangingMod\":\r\n                      let f = state.files;\r\n                      if (state.changeMod) {\r\n                        f.forEach((el) => {\r\n                          if (el)\r\n                            el.options.changed = false;\r\n                        })\r\n                      }\r\n                      return {\r\n                        ...state, files: f, changeMod: !state.changeMod\r\n                      };\r\n\r\n                    case \"massSetFilesOptions\":\r\n                      const formData = action.payload;\r\n                      state.files.forEach((f) => {\r\n                        if (f && f.options.changed) {\r\n                          formData.forEach((el) => {\r\n                            f.options[el.name] = el.value;\r\n                          })\r\n                          // Передавалась ли опция кадрирования\r\n                          const isCadr = formData.findIndex((el) => {\r\n                            return (el.name === 'cadr')\r\n                          })\r\n                          // Если не передавалась, снимаем опции у выбранных фото\r\n                          if (isCadr < 0) {\r\n                            f.options.cadr = false;\r\n                          }\r\n                          // Если в процессе добавление фото, снимаем выбор\r\n                          if (state.afterAddFilesMod) {\r\n                            f.options.changed = false;\r\n                          }\r\n                        }\r\n                      })\r\n                      if (state.afterAddFilesMod) {\r\n                        state.afterAddFilesMod = !state.afterAddFilesMod;\r\n                      }\r\n                      return {\r\n                        ...state, files: state.files\r\n                      }\r\n\r\n                      default:\r\n                        throw new Error();\r\n  }\r\n}\r\n\r\nfunction newImage(file) {\r\n  return {\r\n    id: ID(file),\r\n    file: file,\r\n    body: URL.createObjectURL(file),\r\n    options: {\r\n      count: 1,\r\n      format: '10x15',\r\n      paper: 'матовая',\r\n      cadr: false,\r\n      rotate: false,\r\n      changed: true,\r\n      cropped: [],\r\n      aspect: 10 / 15,\r\n      crop: {},\r\n    }\r\n  };\r\n}\r\n\r\nfunction ID(file) {\r\n  return file.size + '_' + file.name;\r\n}\r\n\r\nfunction correctCrop(crop) {\r\n  let {\r\n    unit,\r\n    aspect,\r\n    width,\r\n    height,\r\n    x,\r\n    y\r\n  } = {\r\n    ...crop\r\n  }\r\n\r\n  if (y < 0) {\r\n    height = height - y;\r\n    width = height * aspect;\r\n    x = 0;\r\n    y = 0;\r\n  }\r\n  return {\r\n    unit: unit,\r\n    aspect: aspect,\r\n    width,\r\n    height,\r\n    x,\r\n    y\r\n  }\r\n}\r\n\r\nconst decodeAspect = (cd, c, f, r) => {\r\n  const a = f.split('x');\r\n  if (r) { // horizontal\r\n    c.aspect = a[1] / a[0];\r\n    c.height = c.naturalHeight;\r\n    c.y = 0;\r\n    c.width = c.naturalHeight * c.aspect;\r\n    c.x = (c.naturalWidth - c.width) / 2;\r\n    // Пересчитываем, если выходим за рамки\r\n    if (c.width > c.naturalWidth && !cd) {\r\n      c.width = c.naturalWidth;\r\n      c.x = 0;\r\n      c.height = c.naturalWidth * c.aspect;\r\n      c.y = (c.naturalHeight - c.height) / 2;\r\n    }\r\n  } else { // vertikal\r\n    c.aspect = a[0] / a[1];\r\n    c.width = c.naturalWidth;\r\n    c.x = 0;\r\n    c.height = c.naturalWidth * c.aspect;\r\n    c.y = (c.naturalHeight - c.height) / 2;\r\n    // Пересчитываем, если выходим за рамки\r\n    if (c.height > c.naturalHeight) {\r\n      c.height = c.naturalHeight;\r\n      c.y = 0;\r\n      c.width = c.naturalHeight * c.aspect;\r\n      c.x = (c.naturalWidth - c.width) / 2;\r\n    }\r\n  }\r\n\r\n  // Пересчитываем, если включено кадрирование\r\n  if (cd) {\r\n    c.width = c.naturalWidth;\r\n    c.height = c.width / c.aspect;\r\n    c.x = 0;\r\n    c.y = (c.naturalHeight - c.height) / 2\r\n  }\r\n\r\n  return c;\r\n}","import { useContext, useState } from 'react';\r\nimport { AppContext } from './main'\r\nimport LineIcon from \"react-lineicons\";\r\n\r\nexport function Cart(props) {\r\n    const { state, dispatch } = useContext(AppContext);\r\n\r\n    const list = state.files.map((el, i) => {\r\n        return el && <CartItem key={i} index={i} />\r\n    })\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            {list}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CartItem(props) {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const f = state.files[props.index];\r\n\r\n    return <img src={f.options.preCrop} alt=\"\" />\r\n}","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport ImageList from \"./list\";\r\nimport { GroupOptions } from \"./file_options_form.jsx\";\r\nimport { SetupImagePopup } from \"./setup-image-popup\";\r\nimport { reducer } from \"./reducer\";\r\nimport { Cart } from \"./cart\";\r\n\r\nexport let AppContext = createContext(null);\r\n\r\nexport function Main() {\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    files: [],\r\n    formatList: [\"10x15\", \"15x20\", \"20x30\"],\r\n    paperList: [\"глянец\", \"матовый\"],\r\n    changeMod: false,\r\n    setupImageMod: null,\r\n    lastModifiedTime: new Date().getTime(),\r\n    afterAddFilesMod: false\r\n  });\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      <Group />\r\n\r\n      {typeof setupImageMod === 'number' &&\r\n        <SetupImagePopup\r\n          fileIndex={state.setupImageMod}\r\n        />}\r\n    </AppContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nfunction Group(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const addFiles = (e) => {\r\n    dispatch({ type: \"add\", payload: e.target.files });\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={`col-12 col-lg-${state.changeMod ? 10 : 12}`}>\r\n        <div className=\"card border-secondary my-3\">\r\n          <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n            Ваши фотографии: {state.files.length}\r\n            <MassSetOptionsBtn\r\n              modOn={state.changeMod}\r\n              setChangingMod={state.setChangingMod} />\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"image-list\">\r\n              <label>\r\n                <span>Добавить фото</span>\r\n                <input onChange={addFiles} className=\"form-control\" type=\"file\" multiple />\r\n              </label>\r\n              <ImageList />\r\n            </div>\r\n\r\n            <Cart />\r\n\r\n          </div>\r\n          <div className=\"card-footer d-flex justify-content-end\">\r\n            <div className=\"btn btn-success disabled\">Перейти к оформлению заказа</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-lg-2\">\r\n        <GroupOptions />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MassSetOptionsBtn(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  let btnText = 'Выбрать несколько';\r\n  if (state.changeMod) {\r\n    btnText = 'отменить';\r\n  }\r\n\r\n  const modded = () => {\r\n    dispatch({\r\n      type: 'setChangingMod'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div onClick={modded} className=\"btn btn-info text-white\">{btnText}</div>\r\n  )\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.scss';\nimport { Topbar } from \"./components/topbar\";\nimport { Main } from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Topbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}